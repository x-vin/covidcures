{"remainingRequest":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/x/repos/covidcures/docs/src/ayurvedic.md?vue&type=template&id=0168bb06&","dependencies":[{"path":"/Users/x/repos/covidcures/docs/src/ayurvedic.md","mtime":1640947850722},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640777136396},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js","mtime":1640777136291},{"path":"/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1640777135896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><h1 id="ayurvedic-treatments"><a class="header-anchor" href="#ayurvedic-treatments">#</a> Ayurvedic Treatments</h1>
<p><strong>DISCLAIMER</strong>: This information is for educational purposes only. It is not intended to serve as a substitute for diagnosis, treatment, or advice from a qualified, licensed medical professional. Any treatment you undertake should be discussed with your physician or other licensed medical professional.</p>
<p><strong>NOTE</strong>: The information in this tabulation about dosages is primarily for adults. The dosages for children have been mentioned in the case of a few over-the-counter remedies where the data was available.&quot;</p>
<h2 id="_1-ayush-prescribed-medicinal-herbs-and-their-corresponding-ayurvedic-remedies"><a class="header-anchor" href="#_1-ayush-prescribed-medicinal-herbs-and-their-corresponding-ayurvedic-remedies">#</a> 1. AYUSH-prescribed medicinal herbs and their corresponding Ayurvedic remedies</h2>
<h3 id="objective"><a class="header-anchor" href="#objective">#</a> Objective:</h3>
<p>Prophylaxis and mitigation</p>
<h3 id="system"><a class="header-anchor" href="#system">#</a> System:</h3>
<p>Ayurveda</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Should be possible in most cases, but needs to be verified</p>
<h3 id="status-of-authorisation"><a class="header-anchor" href="#status-of-authorisation">#</a> Status of authorisation:</h3>
<p>Authorized by AYUSH Ministry, and based on scientific evidence</p>
<h3 id="protocol-and-treatment-approach"><a class="header-anchor" href="#protocol-and-treatment-approach">#</a> Protocol and treatment approach:</h3>
<p>&quot;The list of 20 published medicinal plants and other details are as follows:</p>
<h1 id="vernacular-names-in-tamil-sanskrit-english-hindi-scientific-name-part-used-indications-dosage-important-ayurvedic-formulations"><a class="header-anchor" href="#vernacular-names-in-tamil-sanskrit-english-hindi-scientific-name-part-used-indications-dosage-important-ayurvedic-formulations">#</a> (Vernacular names in Tamil / Sanskrit / English / Hindi, Scientific name, Part used, Indications, Dosage, Important Ayurvedic formulations)</h1>
<ol>
<li>
<p>Amukara / Aswagandha / Winter cherry, Withania somnifera, Root / leaf, dyspnoea / fatigue or weakness / emaciation / tumour / insomnia / antiinflammatory / antipyretic / antibacterial / antimalarial / immunomodulator / cardioprotective, 3-6 g powder, Aswagandha churna / Aswagandha arishtam</p>
</li>
<li>
<p>Amrithavalli / Guduchi / Heart-leaved moon seed / Giloy, Tinospora cordifolia, stem / leaf / root, antioxidant / antiinflammatory / immunomodulator / protective of liver, 2-6 g powder / 50-100 ml decoction / 10-20 ml fresh juice, Amrithadi kashayam / Amritharishtam / Amrithadi guggulu</p>
</li>
<li>
<p>Nilavembu / Kalamegha / Green chiretta / Kirayat, Andrographis paniculata, whole plant, antiviral / antipyretic / immune enhancement / thrombolytic, 1-3 g powder / 20-40 ml decoction / 5-10 ml fresh juice, Bhunimbadi choorna / Bhunimbadi kashaya</p>
</li>
<li>
<p>Tulasi / Tulasi / Sacred basil / Tulsi, Ocimum tenuiflorum, leaf / root / seed, cough / dyspnoea / worms / viral hepatitis / toxicity / intermittent fever / antiviral / antifungal / antibacterial, 3-6 g seed powder / 10-20 ml fresh juice / 50-100 ml root decoction, Surasadigana kashayam / Tumburvadi yoga</p>
</li>
<li>
<p>Tirunittru pacchilai / Vantulasi / Sweet basil / Babui tulasi, Ocimum basilicum L., leaf / flower, antiviral / antimicrobial / antioxidant / antiinflammatory / antiallergenic / lung complaints / intestinal parasites, 3-5 ml juice / 3-6 g seed powder, Surasadigana kashayam / Tumburvadi yoga</p>
</li>
<li>
<p>Ilavangam / Tvak / Cinnamon / Dalchini, Cinnamon verum Presl, stem bark, anti-complement activity / antiallergenic activity / rhinitis / cough / headache / cardiac ailments / indigestion / antihelminthic, 1-3 g powder, Eladi rasayanam / Sitopaladi choorna / Samasarkara choorna</p>
</li>
<li>
<p>Inji or chukku / Ardraka / Ginger / Adrak or sonth, Zingiber officinale Roscoe, rhizome, fever / cough / dyspnoea / heart disease / bleeding disorder / anaemia / antibacterial / antihistaminic / antioxidant / antiinflammatory / hypolipidemic / bioavailability enhancer / hypoglycaemic, Adraka rasayana / Ardraka khandavalehya / Nagaradi kashaya</p>
</li>
<li>
<p>Manjal / Haridra / Turmeric / Haldi, Curcuma longa L., rhizome, antibacterial / antioxidant / antiinflammatory / antihistamine / antiseptic / hypocholesterolenic / bronchitis / respiratory illness / bronchial asthma / tropical eosinophilia / diabetes / anaemia / jaundice / skin disease / detoxifying agent, 1-3 g powder, Haridrakhanda / Nisamalaki choornam</p>
</li>
<li>
<p>Nellikkai / Amalaki / Gooseberry / Amla, Phylanthus emblica L., fruit pulp, antibacterial / antimicrobial / antioxidant / antiinflammatory / hepatoprotective / hypolipidemic / hypoglycaemic / diabetes / antiatherosclerotic / bleeding disorders / ulcer, 10-20 ml fresh juice / 3-6 g powder, Chyavanaprasha avalehyam / Amalakadi choorna</p>
</li>
<li>
<p>Nilavembu / Kiratatikta / Chiretta / Chirayata, Swertia chirata, whole plant, fever / gouty arthritis / oedema / chronic liver diseases / antipyretic / antiarthritic / antidiabetic / hepatoprotective, 1-3 g powder / 50-100 ml decoction, Kiratadi kwatha / Sudarsana choorna / Kiratatiktadi choorna / Kiratarishta</p>
</li>
<li>
<p>Atimadhuram / Yashtimadhu / Liquorice / Mulethi, Glycyrrhiza glabra L., root, antipyretic / antiinflammatory / antiarthritis / antidiuretic / rejuvenative / cardiovascular tonic / improves strength, 3-5 g powder, Yashtyadi choorna / Madhuyashtyadi tailam</p>
</li>
<li>
<p>Vembu or veppu / Nimba / Neem or margosa tree / Neem, Azadirachta indica, root bark / stem bark / leaves, antimicrobial / immunostimulant / antiinflammatory / antidiabetic / antiarthritic / improves cardiovascular activity, 2-4 g bark powder / 10-20 ml fresh juice, Nimba haridrakhanda / Nimbadi choorna / Pancha nimba choorna</p>
</li>
<li>
<p>Adathodai vasa / Malabar nut / Adusa / Justicia Adathoda, leaf / root / flower, fever / cough / dyspnoea / consumption / bleeding disorder / anaemia / diarrhoea / skin diseases / bronchodilator / advantages in attenuating the critical inflammatory stages of Covid-19, 10-20 ml leaf juice, Vasarishtam / Vasavalehya</p>
</li>
<li>
<p>Kacholam / Sathi / Spiked ginger lily / Kapurkachari, Hedychium spicatum, rhizome, cough / relieves violent expression of dyspnoea / hiccough, antibacterial / antifungal / antiinflammatory / hypoglycaemic/ vasodilator / relieving paroxysmal attack of dyspnoea / tranquilizer, 1-3 g powder, Sathyadi choorna</p>
</li>
<li>
<p>Pushkaramulam / Pushkaramula / Elicampane / Pokharmul, Inula racemosa, root, cough / dyspnoea / bronchospasm / pulmonary infections / anaemia / cardiac ailments / antipyretic / antifungal / antibacterial / antiinflammatory / antihistaminic / hypoglycaemic / antianginal / hypolipidemic, 1-3 g powder, Pushkaraadi choorna / Pushkaraadi kashaya</p>
</li>
<li>
<p>Kavali / Bharangi / Blue-flowered glory tree / Babhanaiti, Clerrodendrum serratum, root, fever / rhinitis / cough / dyspnoea / oedema / antipyretic / antihistamine, 3-6 g powder, Bharngyaadi kashaya / Bharngi guda</p>
</li>
<li>
<p>Kiraampu / Lavanga / Clove / Laung, Syzygium aromaticum, dried floral bud, consumption /  cough / dyspnoea / vomiting / bleeding disorders / antiviral / bactericidal / fungicidal / antiinflammatory / anticarcinogenic, 1-2 g powder, Lavangadi vati / Lavangadi choorna / Devakusuma arka</p>
</li>
<li>
<p>Elumichampullu / Lamajjaka / Lemon grass or Citronella / Lamjak, Cymbopogon jwarancusa, whole plant, fever / gout / rheumatism / skin disease / antioxidant / diuretic / diaphoretic / blood purefier, 3-5 g powder</p>
</li>
<li>
<p>Katukarohini / Katuki / Picrorhiza / Kutki, Pichrorhiza kurroa, root / underground stem, fever / intermittent fever / dyspnoea / cough / skin diseases / antidiabetes / antipyretic / antiinflammatory / antibacterial / mitigate allergy and asthma / hydrocholeretic, 0.5-1 g powder (5-6 g powder for use as purgative) in warm water, Tiktakadya ghrtam / Katukadya ghrtam / Aarogyavardhini vati</p>
</li>
<li>
<p>Annachi poo / Mishi / Chinese star anise / Chakr phool or Anasphal, Ilicium verum, fruit, abdominal pain and digestive ailments / cough / diuretic / influenza / antibacterial / antviral / antifungal /  analgesic / antioxidant / expectorant / spasmolytic / carminative, 3 g powder
&quot;</p>
</li>
</ol>
<h3 id="typical-duration-of-treatment"><a class="header-anchor" href="#typical-duration-of-treatment">#</a> Typical duration of treatment:</h3>
<p>These herbs are employed as part of protocols prescribed by knowledgeable physicians.</p>
<h3 id="outcome"><a class="header-anchor" href="#outcome">#</a> Outcome:</h3>
<p>The herbs are demonstrated to have positive therapeutic outcomes, upon which the Ayush recommendations were based.</p>
<h3 id="significant-side-effects"><a class="header-anchor" href="#significant-side-effects">#</a> Significant side effects:</h3>
<p>No significant side effects reported, when used in therapeutic dosages. Many of these herbs rejuvenate health holistically and revitalize the body.</p>
<h3 id="recommended-quantity-for-stocking"><a class="header-anchor" href="#recommended-quantity-for-stocking">#</a> Recommended quantity for stocking:</h3>
<p>A few medicines like Ashwagandha choornam, Amrithaadi kashayam, could be stocked and used as prophylactic.</p>
<h3 id="price"><a class="header-anchor" href="#price">#</a> Price:</h3>
<p>Moderately priced for the middle class consumer</p>
<h3 id="suggested-suppliers"><a class="header-anchor" href="#suggested-suppliers">#</a> Suggested suppliers:</h3>
<p>Local suppliers of Ayurvedic medicines like Kottakkal Arya Vaidya Sala pharmacies</p>
<h3 id="further-references"><a class="header-anchor" href="#further-references">#</a> Further references:</h3>
<p>&quot;20 Medicinal Plants of '21 for Covid-19 Care,
National Medicinal Plants Board, Ministry of Ayush, Government of India</p>
<p>Spices and herbs: Potential antiviral preventives and immunity boosters during COVID‐19- Curcumin, Cinnamon, Ginger, Clove, Black pepper, Garlic, Neem, Giloy, Holy basil; Namita Ashish Singh et al.; Phytotherapy Research; Jan 29, 2021</p>
<p>academia.edu: Indian Medicinal Plants; Sachin Chandran</p>
<p>Herbal plants as immunity modulators against COVID-19: A primary preventive measure during home quarantine; Kuntal Das; Journal of Herbal Medicine; Aug 5, 2021</p>
<p>&quot;</p>
<h2 id="_2-the-central-ministry-ayush-approved-national-clinical-management-protocol-based-on-ayurveda-and-yoga-for-management-of-covid-19"><a class="header-anchor" href="#_2-the-central-ministry-ayush-approved-national-clinical-management-protocol-based-on-ayurveda-and-yoga-for-management-of-covid-19">#</a> 2. (The Central Ministry) AYUSH-approved National Clinical Management Protocol Based On Ayurveda And Yoga For Management Of Covid-19</h2>
<h3 id="objective-2"><a class="header-anchor" href="#objective-2">#</a> Objective:</h3>
<p>Evidence-based prescription for the use of Ayurveda and yoga for the prevention of Covid-19, and for the treatment of asymptomatic or mild infection</p>
<h3 id="system-2"><a class="header-anchor" href="#system-2">#</a> System:</h3>
<p>Ayurveda and Yoga, Ayush</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-2"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-2">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Probably yes, but under the advice of a medical practitioner. Usage alongside allopathic protocols is not guaranteed to yield the best results, according to experienced doctors.</p>
<h3 id="status-of-authorisation-2"><a class="header-anchor" href="#status-of-authorisation-2">#</a> Status of authorisation:</h3>
<p>Approved by the Government of India, Ayush Ministry.</p>
<h3 id="protocol-and-treatment-approach-2"><a class="header-anchor" href="#protocol-and-treatment-approach-2">#</a> Protocol and treatment approach:</h3>
<p>&quot;General lifestyle measures for prophylactic treatment:</p>
<ol>
<li>Maintain social distancing, respiratory and hand hygiene and masking.</li>
<li>Gargle with warm water with an added pinch of turmeric and salt. Water boiled with Triphala choorna or Yashtimadhu too can be used for gargling.</li>
<li>Perform Ayurvedic Nasya (instillation or application of plain or medicated oils in the nose) once or twice a day, especially before going out and after coming back home. Plain oils like coconut oil / sesame oil / cow's ghee or medicated oils like Anu taila / Shadbindu taila could be applied.</li>
<li>Perform steam inhalation with Ajwain / Mint or Pudina / Eucalyptus oil once a day (being cautious not to burn or damage the upper respiratory passage).</li>
<li>Follow a healthy dietary and lifestyle regimen everyday, with adequate sleep of 6-8 hours, a balanced diet and moderate physical exercise.</li>
<li>Follow Yoga Protocol for Primary Prevention of COVID-19 (ANNEXURE-1 of the referenced document) and Protocol for Post COVID-19 care (including care for COVID-19 patients) (ANNEXURE-2) - as applicable.</li>
</ol>
<p>Prescribed dietary regimen for prophylaxis:</p>
<ol>
<li>Consume fresh, warm and balanced meals.</li>
<li>Use warm water boiled with ginger root / corriander seeds / Thulasi or Holy basil  leaves / Jeera or cumin seeds for drinking.</li>
<li>Drink Ayush Kadha or Kwath (hot infusion or decoction) once a day.</li>
</ol>
<p>Prophylactic measures for high-risk population and primary contacts:</p>
<ol>
<li>Take Ashwagandha (500 mg aqueous extract or 1-3 g powder), twice daily with warm water, on an empty stomach, after waking up in the morning and before going to sleep, for 15-30 days or as advised by Ayurveda physician.</li>
<li>Guduchi ghana vati / Samshamani vati (500 mg aqueous extract as Samshamani ghanavati / Giloy or Amrithavalli ghanavati, or 1-3 g Amrithavalli choorna) twice a day with warm water, with or after meals, for 15-30 days or as directed by Ayurveda physician</li>
<li>Chyavanapraasha (containing about 50 traditional ingredients, chiefly Amla / Indian gooseberry / Emblica officinalis, the richest plant source of vitamin C), 10 g with warm water or milk, once a day, on an empty stomach in the morning before breakfast</li>
</ol>
<p>(Ashwagandha is deemed a safer prophylactic therapy than Hydroxychloroquine.)</p>
<p>Treatment for asymptomatic Covid-positive individuals, to prevent the disease progression to symptomatic Covid:</p>
<ol>
<li>Guduchi ghanavati (500 mg aqueous extract as Samshamani ghanavati or Giloy / Amrithavalli ghanavati or 1-3 g Amrithavalli choorna) twice a day with warm water, with or after meals, for 15-30 days or as directed by Ayurveda physician</li>
<li>Guduchi or Amrithavalli or Giloy, and Pippali or pepper, 375 mg of aqueous extracts twice daily with warm water for 15-30 days or as advised by Ayurveidc physician</li>
<li>AYUSH64, 500 mg 2 times (3 times for symptomatic infection) daily 1 hour after meals, with warm water, for 15-30 days or as directed by Ayurveda physician</li>
</ol>
<p>Treatment of mild Covid positive cases without evidence of breathlessness or hypoxia:</p>
<ol>
<li>Guduchi or Amrithavalli or Giloy, and Pippali or pepper, 375 mg of aqueous extracts twice daily with warm water, with or after meals, for 15-30 days or as advised by Ayurveidc physician</li>
<li>AYUSH64, 500 mg 3 times daily, 1 hour after meals, with warm water for 15-30 days or as directed by Ayurveda physician</li>
</ol>
<p>Post-Covid management for prevention of lung complications like fibrosis, fatigue and mental health:</p>
<ol>
<li>Take Ashwagandha (500 mg aqueous extract or 1-3 g powder), twice daily with warm water, on an empty stomach after waking up in the morning and before going to sleep, for 15-30 days or as advised by Ayurveda physician.</li>
<li>Chyavanapraasha, 10 g with warm water or milk, once a day, on an empty stomach in the morning or before breakfast</li>
<li>Rasayana choorna (With equal parts of Giloy or Amrithavalli, Amla or gooseberry and Tribulus terrestris / Gokshura / Caltrops / Gokhru / Njerinjil, ), 3 g powder twice daily with honey for 30 days, or as directed by the Ayurveda physicians</li>
</ol>
<p>The protocol includes Praanayaama, breathing and yoga exercises. In the Praanayaama and breathing exercises, the duration of exhalation should exceed that of inhalation, and ideally be twice the duration of inhalation.</p>
<p>A 45-minute sequence of Yoga, Pranayama and meditation, as detailed in the reference document, is incorporated into the routine for prophylactic care or primary prevention.. These include the following:</p>
<ul>
<li>Loosening exercises like neck bending (2 min), shoulder movement (2 min), trunk movement (1 m), knee movement (1 m),</li>
<li>Standing Aasanaas like Tadaasana (1 m), Paada Hastaasa (1 m), Ardha Chakraasana (1 m), Trikonaasana (2 m),</li>
<li>Sitting Aasanaas like Ardha Ushtraasana (1 m), Sasakaasana (1 m), Utthana Mandukaasana (1 m), Simhaasana (1 m), Marjariaasana (1 m), Vakraasana (2 m),</li>
<li>Aasanaas while lying prone, like Makaraasana (1 m), Bhujaangaasana (1 m),</li>
<li>Aasanaas while lying supine, like Setubandhaasana (1 m), Utthanapaadaasana (1 m), Pavana Muktaasana (1 m), Markataasana (1 m), Shavaasana (2 m),</li>
<li>Kriyas like Vaata Neti (2 rounds in about 2 minutes, 30 seconds each with 30 seconds relaxation), Kapaalabhaati (2 rounds in about 2 minutes, 30 breaths each),</li>
<li>Praanayaama, including Nadi Shodhana (5 rounds in 2 minutes), Surya Bhedana Praanayaama (5 rounds in 2 m), Ujjayi Praanayaama (5 rounds ini 2 m), Bhramari Praanayaama (5 rounds in 2 m), Dhyaana (5 m), Shanti Patha (1 m)</li>
</ul>
<p>Yoga protocol for post-Covid care as well as for Covid-19 patients, including Praanayaama and breathing exercises to improve lung volume and reduce asthma allergies and lung inflammation:</p>
<p>Morning session (30 minutes):</p>
<ul>
<li>Preparatory practices, performed while sitting: Tadaasana, Urdhva Hastottanaasana, Uttana Mandukaasana, shoulder rotation (3 rounds), trunk twisting (3 rounds), Ardha Ushtraasana, Sasakaasana</li>
<li>Breathing practices, like Vaataneti (2 rounds, 30 seconds per round, over 2 min), Kapaalabhaati (3 rounds, 30 seconds per round, 2 m) and deep breathing (10 rounds, 2 m)</li>
<li>Praanayaama practices, like Naadishodhana (10 rounds in 6 min), Ujjayee (10 rounds in 3 m), Bhramari (10 rounds in 3 m)</li>
<li>Meditation or Dhyaana for 6 minutes</li>
</ul>
<p>Evening session (15 minutes):</p>
<ul>
<li>Shavaasana (1 round, 1 m)</li>
<li>Abdominal breathing (10 rounds, 2 m)</li>
<li>Thoracic breathing (10 rounds, 2 m)</li>
<li>Clavicular breathing (10 rounds, 2 m)</li>
<li>Deep breathing, lying down (10 rounds, 2 m)</li>
<li>Relaxation in Shavaasana, with awareness on abdominal breathing (5 m)</li>
</ul>
<p>Other measures:</p>
<ul>
<li>Steam inhalation advised everyday or every alternate day</li>
<li>Advised to gargle with lukewarm saline water regularly</li>
<li>Kriya Jalaneti to decongest the nasal and upper respiratory tract, but not recommended in case of dry cough</li>
</ul>
<p>Protocol for management of mild Covid-19 cases:
The Ayush protocol recommends symptomatic redressal as follows:</p>
<ul>
<li>Fever with bodyache, headache: Nagaraadi Kashaaya (20 ml twice a day, or as recommended by qualified Ayurvedic physician)</li>
<li>Cough: Sitopalaadi Choorna with honey (2 g with honey, or as recommended by Ayurvedic physician)</li>
<li>Sore throat, loss of taste: Vyoshaadi vati (1-2 pills to be chewed as required, or as directed by Ayurvedic physician)</li>
<li>Fatigue: Chyavanapraasha (10 g with warm water or milk once a day, or as directed by Ayurvedic physician)</li>
<li>Hypoxia: Vasavaleha (10 g with warm water, once a day, or as directed by Ayurvedic physician)</li>
<li>Diarrhoea: Kutaja Ghana Vati (500 mg- 1 g thrice a day, or as directed by Ayurvedic physician)</li>
<li>Breathlessness: Kanakaasava (10ml with equal amount of water, twice a day, or as directed by Ayurvedic physician)</li>
</ul>
<p>&quot;</p>
<h3 id="typical-duration-of-treatment-2"><a class="header-anchor" href="#typical-duration-of-treatment-2">#</a> Typical duration of treatment:</h3>
<p>About 15 days of medication required for the treatment of mild Covid, according to the Ayush Ministry publication, National Clinical Management Protocol Based On Ayurveda And Yoga For Management Of Covid-19</p>
<h3 id="outcome-2"><a class="header-anchor" href="#outcome-2">#</a> Outcome:</h3>
<p>&quot;The protocols are known to offer significant benefits as prophylactic measure, and for the treatment of mild or moderate Covid-19, as well as in the treatment of long Covid.</p>
<p>The efficacy of AYUSH64 was scientifically studied in asymptomatic, mild and moderate disease without risk factors for poor outcome and those not requiring emergency interventions or hospitalization are eligible to take Ayush-64. Mild to moderate COVID-19 cases showing initial symptoms like fever, malaise, body ache, nasal congestion, nasal discharge, headache, cough etc. and asymptomatic cases of COVID-19 can preferably start AYUSH- 64 within 7 days of diagnosis of the disease through RT-PCR for better outcome.  It has been scientifically found to be useful in the treatment of asymptomatic, mild and moderate COVID-19 infection as an adjunct to standard care through robust clinical trials conducted in the country. The results of the clinical trials demonstrated that AYUSH-64 as an adjunct to standard of care (SoC) showed clinically significant improvement and thus lesser period of hospitalization as compared to SoC alone.</p>
<p>A study recorded: The experimental studies of AYUSH-64 have shown that it was safe and non-toxic in the dose of 500 mg / kg of body weight for 12 weeks. It is found to be effective in fevers of unknown etiology, filarial lymphangitis and derangement of liver function besides its anti -malarial activity. Various Ayurveda classics describe activities and properties of the ingredients of AYUSH-64 in respiratory diseases and also acute infectious diseases with pulmonary complications. &quot;</p>
<h3 id="significant-side-effects-2"><a class="header-anchor" href="#significant-side-effects-2">#</a> Significant side effects:</h3>
<p>None reported for therapeutic dosages; generally deemed safe and nontoxic. A study recorded that the experimental studies of AYUSH-64 have shown that it was safe and non-toxic in the dose of 500 mg / kg of body weight for 12 weeks.</p>
<h3 id="recommended-quantity-for-stocking-2"><a class="header-anchor" href="#recommended-quantity-for-stocking-2">#</a> Recommended quantity for stocking:</h3>
<p><strong>VACANT</strong></p>
<h3 id="price-2"><a class="header-anchor" href="#price-2">#</a> Price:</h3>
<p>Ayurvedic medicines from Kottakkal Arya Vaidyasala are modestly priced.</p>
<h3 id="suggested-suppliers-2"><a class="header-anchor" href="#suggested-suppliers-2">#</a> Suggested suppliers:</h3>
<p>&quot;Local trusted Ayurvedic pharmacies like Kottakkal Arya Vaidya Sala and online stores</p>
<p>1mg.com: Basic Ayurveda Ayush 64 Tablet</p>
<p>&quot;</p>
<h3 id="further-references-2"><a class="header-anchor" href="#further-references-2">#</a> Further references:</h3>
<p>&quot;“AYU SAMVAD” | Ayurveda for Covid 19 | “My Health My Responsibility”; All India Institute of Ayurveda, An Autonomous Institute under Ministry of AYUSH, Government of India, New Delhi- NABH Accredited Tertiary care Hospital and Post Graduate Teaching and Training Institute in Ayurveda</p>
<p>National Clinical Management Protocol Based On Ayurveda And Yoga For Management Of Covid-19- Frequently Asked Questions; Government of India, Ministry of Ayush</p>
<p>National Clinical Management Protocol Based On Ayurveda And Yoga For Management Of Covid-19, approved by the Ayush Ministry, Government Of India</p>
<p>Scientific rationale of Indian AYUSH Ministry advisory for COVID-19 prevention, prophylaxis, and immunomodulation; Prashant Kumar Gupta et al.; April 29, 2021</p>
<p>Significance of AYUSH: India's first line of defence against COVID-19; Journal of Ayurvedic and Integrative Medicine; April 1, 2021</p>
<p>Ashwagandha: Wonder Herb of India</p>
<p>Appropriate use of essential oils and their components in the management of upper respiratory tract symptoms in patients with COVID-19; Marco Valussi; Journal of Herbal Medicine; August, 2021</p>
<p>Do saline water gargling and nasal irrigation confer protection against COVID-19?; Prashanth Panta et al.; Elsevier Public Health Emergency Collection; March, 2021</p>
<p>An overview of Tulsi (Holy basil); Simranjeet Kaur et al.; European Journal of Molecular &amp; Clinical Medicine; 2020</p>
<p>Tulsi - Ocimum sanctum: A herb for all reasons; Marc Maurice Cohen; Journal of Ayurveda and Integrative Medicine; 2020</p>
<p>“Tulsi” - the Wonder Herb (Pharmacological Activities of Ocimum Sanctum); Sai Krishna G. et al.; American Journal of Ethnomedicine; 2014</p>
<p>A Community-Based Participatory Research to Assess the Feasibility of Ayurveda Intervention in Patients with Mild-to-Moderate COVID-19; Vishwesh Kulkarni; MedRxiv; Jan, 2021</p>
<p>Economic Times- Healthworld.com: Ashwagandha can be effective COVID-19 preventive drug, finds research by IIT Delhi and Japan's AIST; May, 2020</p>
<p>Targeting COVID-19 (SARS-CoV-2) main protease through active phytochemicals of ayurvedic medicinal plants – Withania somnifera (Ashwagandha), Tinospora cordifolia (Giloy) and Ocimum sanctum (Tulsi) – a molecular docking study; Priya Shree et al.; Journal of Biomolecular Structure and Dynamics; Aug, 2020</p>
<p>News 18: Can Giloy Boost Immunity, Fight COVID? IISER Bhopal Researchers Find Out; Sept 6, 2021</p>
<p>india.com: Here is How Giloy And Ashwagandha Treat Coronavirus: Giloy and Ashwagandha have a significant role to play in the treatment of the novel coronavirus infection.</p>
<p>An Overview on Ashwagandha: A Rasayana (Rejuvenator) of Ayurveda; Narendra Singh et al.; African Journal of Traditional, Complementary and Alternate Medicine; 2011</p>
<p>Withania somnifera (Ashwagandha) as a safer option to hydroxychloroquine in the chemoprophylaxis of COVID-19: Results of interim analysis; Arvind Chopra et al.; Complementary Therpies in Medicine; Nov, 2021</p>
<p>Thermal inactivation of SARS COVID-2 virus: Are steam inhalations a potential treatment; Giancarlo la Marca et al.; Life Sciences; Jan 15, 2021</p>
<p>A critical analysis of CTRI registered AYUSH studies for COVID- 19; Vedvati Bhapkar et al.; Journal of Ayurveda and Integrative Medicine; Nov 26, 2020</p>
<p>Targeting COVID-19 (SARS-CoV-2) main protease through active phytochemicals of ayurvedic medicinal plants – Withania somnifera (Ashwagandha), Tinospora cordifolia (Giloy) and Ocimum sanctum (Tulsi) – a molecular docking study; Priya Shree et al.; Journal of Biomolecular Structure and Dynamics; Aug 27, 2020</p>
<p>CSIR India- Details of AYUSH64</p>
<p>Planet Ayurveda (TM): Gokshura (Tribulus Terrestris / Puncture vine)- Uses, Benefits, Ayurvedic Effects; Dr. Meenakshi Chauhan; May 7, 2019</p>
<p>&quot;</p>
<h2 id="_3-sh-bonigi-anandaiah-s-ayurvedic-treatment-for-covid-19-in-krishnapatnam-village-nellore-district-andhra-pradesh"><a class="header-anchor" href="#_3-sh-bonigi-anandaiah-s-ayurvedic-treatment-for-covid-19-in-krishnapatnam-village-nellore-district-andhra-pradesh">#</a> 3. Sh. Bonigi Anandaiah's Ayurvedic treatment for Covid-19 in Krishnapatnam village, Nellore district, Andhra Pradesh</h2>
<h3 id="objective-3"><a class="header-anchor" href="#objective-3">#</a> Objective:</h3>
<p><strong>VACANT</strong></p>
<h3 id="system-3"><a class="header-anchor" href="#system-3">#</a> System:</h3>
<p>Ayurveda / Indigenous</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-3"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-3">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Perhaps yes, as this has not been specifically mentioned in reports</p>
<h3 id="status-of-authorisation-3"><a class="header-anchor" href="#status-of-authorisation-3">#</a> Status of authorisation:</h3>
<p>Authorized to treat for Covid by the Andhra Pradesh government, but Sh. Bonigi is reportedly not a physician by training. It is said that the knowledge of this reportedly wonderful herbal therapy was given to him by a wandering traditional mendicant, and prepared and shared by him with many others.</p>
<h3 id="protocol-and-treatment-approach-3"><a class="header-anchor" href="#protocol-and-treatment-approach-3">#</a> Protocol and treatment approach:</h3>
<p>&quot;The protocol is said to involve three forms of therapeutic medication:</p>
<ol>
<li>Preventative / prophylactic oral medication, administered over 5 successive days, with the recommendation not to consume any animal protein or alcohol during that period</li>
<li>Curative medication to address symptoms for affected patients in the early stages of the disease</li>
<li>Medication in the form of eye drops for those in critical stages of the illness.</li>
</ol>
<p>&quot;</p>
<h3 id="typical-duration-of-treatment-3"><a class="header-anchor" href="#typical-duration-of-treatment-3">#</a> Typical duration of treatment:</h3>
<p>Rapid recovery, reportedly often in under 5 days</p>
<h3 id="outcome-3"><a class="header-anchor" href="#outcome-3">#</a> Outcome:</h3>
<p>It is reported in media that patients from far away cities have travelled to receive the treatment, and that thousands of patients have been treated so far with not a single fatality. Video documentaries testify that thousands of patients, many in the critical stages of the disease, flock to the treatment centre, and benefit very quickly.</p>
<h3 id="significant-side-effects-3"><a class="header-anchor" href="#significant-side-effects-3">#</a> Significant side effects:</h3>
<p>Not many known, though a few people have been affected by conjunctivitis after being administered the eye drops.</p>
<h3 id="recommended-quantity-for-stocking-3"><a class="header-anchor" href="#recommended-quantity-for-stocking-3">#</a> Recommended quantity for stocking:</h3>
<p>The medicine cannot be refrigerated and therefore cannot be stocked in advance of a few days.</p>
<h3 id="price-3"><a class="header-anchor" href="#price-3">#</a> Price:</h3>
<p>The medicine is extremely inexpensive and costs INR 10. For distance deliveries, shipping is charged. Distance orders are undertaken when orders are placed by a group of 10-50 people, in which case INR 50/- is charged for shipping per group of four people.</p>
<h3 id="suggested-suppliers-3"><a class="header-anchor" href="#suggested-suppliers-3">#</a> Suggested suppliers:</h3>
<p>&quot;The medicines can only be bought from the physician Sh. Anandaiah himself, in the coastal village Krishnapatnam of AP. Distance deliveries are undertaken by post, and the medications should be consumed within 15 days of arrival. They are sent in a dry and powdery form and should not be refrigerated.</p>
<p>Contact, Jayana Rama Govind:
+91 9440170522&quot;</p>
<h3 id="further-references-3"><a class="header-anchor" href="#further-references-3">#</a> Further references:</h3>
<p>&quot;AP government gives nod to use of traditional medicine prepared by Ayurveda doctor</p>
<p>Move over Coronil, AP villagers ditch masks, vaccine after 'miracle drug', Jagan govt backs it: Herbal concoction by Krishnapatnam resident Anandaiah ‘isn’t Ayurvedic medicine, can’t cure Covid’, say officials; Andhra MLA says govt could restart distribution of the mix</p>
<p>No objection to use of 'Krishnapatnam medicine': Andhra Pradesh government; May 23, 2021&quot;</p>
<h2 id="_4-patanjali-s-divya-swasari-coronil-kit-with-coronil-containing-two-bottles-1-each-of-divya-swasari-vati-and-divya-coronil-tablets-with-giloy-ashwagandha-and-tulasi-in-2-1-1-mixture-and-anu-taila"><a class="header-anchor" href="#_4-patanjali-s-divya-swasari-coronil-kit-with-coronil-containing-two-bottles-1-each-of-divya-swasari-vati-and-divya-coronil-tablets-with-giloy-ashwagandha-and-tulasi-in-2-1-1-mixture-and-anu-taila">#</a> 4. Patanjali's Divya Swasari Coronil kit with Coronil, containing two bottles, 1 each of Divya Swasari Vati and Divya Coronil tablets (with Giloy, Ashwagandha and Tulasi in 2:1:1 mixture) and Anu taila</h2>
<h3 id="objective-4"><a class="header-anchor" href="#objective-4">#</a> Objective:</h3>
<p>Prophylactic and curative</p>
<h3 id="system-4"><a class="header-anchor" href="#system-4">#</a> System:</h3>
<p>Ayurveda (Patanjali)</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-4"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-4">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes, alongside non-Ayurvedic prophylactic treatments</p>
<h3 id="status-of-authorisation-4"><a class="header-anchor" href="#status-of-authorisation-4">#</a> Status of authorisation:</h3>
<p>Unclear, but popularly bought and used here; sold in lakhs in India during the &quot;first wave&quot; in 2020. The kit says that the Divya Coronil tablets have been formulated in compliance with the clinical research conducted on the active components of the herbs used, and incorporating medical dosages prescribed by Ayurvedic scriptures.</p>
<h3 id="protocol-and-treatment-approach-4"><a class="header-anchor" href="#protocol-and-treatment-approach-4">#</a> Protocol and treatment approach:</h3>
<p>&quot;As specified in the Divya Corona Kit of Patanjali:</p>
<ol>
<li>Take 2 tablets of Divya Swasari each, with lukewarm water, half an hour before breakfast, lunch and dinner.</li>
<li>Take 2 tablets of Divya Coronil each, with lukewarm water, half an hour after breakfast, lunch and dinner.</li>
<li>Put 4 drops of Anu Taila each in both nostrils 1 hour before breakfast.</li>
</ol>
<p>The above dosage is suitable for the age group 15-60 years, and for children between the ages 6-15 years, half of this dosage is recommended.&quot;</p>
<h3 id="typical-duration-of-treatment-4"><a class="header-anchor" href="#typical-duration-of-treatment-4">#</a> Typical duration of treatment:</h3>
<p>5-14 days, when used in early stages of disease.</p>
<h3 id="outcome-4"><a class="header-anchor" href="#outcome-4">#</a> Outcome:</h3>
<p>Stated by manufacturer and Yoga guru Baba Ramdev to promise 100% cure, based on their successful clinical trials, for which evidence was submitted to Ayush, cited in the reference.</p>
<h3 id="significant-side-effects-4"><a class="header-anchor" href="#significant-side-effects-4">#</a> Significant side effects:</h3>
<p>None known or reported.</p>
<h3 id="recommended-quantity-for-stocking-4"><a class="header-anchor" href="#recommended-quantity-for-stocking-4">#</a> Recommended quantity for stocking:</h3>
<p>If Patanjali's Coronil kit is adopted as the primary line of prophylaxis, then recommended to buy one kit per person in the family.</p>
<h3 id="price-4"><a class="header-anchor" href="#price-4">#</a> Price:</h3>
<p>Rs. 545/- per kit, containing 200 tablets (100 tablets each of Coronil and Swasari Vati) and the Anu thailam.</p>
<h3 id="suggested-suppliers-4"><a class="header-anchor" href="#suggested-suppliers-4">#</a> Suggested suppliers:</h3>
<p>&quot;Patanjali stores and online suppliers</p>
<p>&quot;</p>
<h3 id="further-references-4"><a class="header-anchor" href="#further-references-4">#</a> Further references:</h3>
<p>&quot;researchgate.net: AN OVERVIEW ON CORONIL DRUG; Tiwari &amp; Talreja; July, 2020</p>
<p>Randomized placebo-controlled pilot clinical trial on the efficacy of ayurvedic treatment regime on COVID-19 positive patients; Ganpat Devpura et al.; Phytomedicine; April, 2021</p>
<p>A number of news meda platforms, including TNIE, Alt News, The Quint, The Print, Wired, and others, have joined the campaign against this commercial Covid therapy from Patanjali, even though the product and the tri-herbal formulation (Giloy, Tulasi and Ashwagandha) used in it have since been ratified by the AYUSH Ministry. Furthermore, many have reported benefit from this product, and the treatment is largely substantiated by early clinical trials, and now a Randomized Controlled Trial.</p>
<p>Influence of Patient-Reported Treatment Satisfaction on Psychological Health and Quality of Life Among Patients Receiving Divya-Swasari-Coronil-Kit Against COVID-19: Findings from a Cross-Sectional &quot;&quot;SATISFACTION COVID&quot;&quot; Survey; Acharya Balkrishna; Patient Preference and Adherence; April 29, 2021</p>
<p>Coronil, a Tri-Herbal Formulation, Attenuates Spike-Protein-Mediated SARS-CoV-2 Viral Entry into Human Alveolar Epithelial Cells and Pro-Inflammatory Cytokines Production by Inhibiting Spike Protein-ACE-2 Interaction; Balkrishna A; Journal of Inflammation Research; Dec 19, 2020</p>
<p>Can Ayurveda cure Covid?</p>
<p>Patanjali Research Against COVID-19</p>
<p>dnaindia.com: '100% fulfilled all clinical trials': Patanjali on Coronil details conveyed to Centre-
The Centre on Tuesday said it has taken cognizance of the reports of an Ayurvedic medicine manufactured by Patanjali, which the company claims can cure COVID-19.</p>
<p>indiatvnews.com: How Patanjali's Coronil will cure coronavirus patients in 14 days?; Shriya Bhasin; June 23, 2020</p>
<p>Dr. Yashwant Chowdhury: An informal, informed perspective on the objections raised to Coronil; June 24, 2020</p>
<p>&quot;</p>
<h2 id="_5-ayush-kwath-churna"><a class="header-anchor" href="#_5-ayush-kwath-churna">#</a> 5. &quot;Ayush Kwath Churna:</h2>
<p>(Tulsi / Holy Basil / Ocimum sanctum,</p>
<p>Dalchini / Cinnamon / Cinnamomum zeylanicum,</p>
<p>Sunthi / Ginger / Zingiber officinale and</p>
<p>Marich / Black Pepper / Piper nigrum)&quot;</p>
<h3 id="objective-5"><a class="header-anchor" href="#objective-5">#</a> Objective:</h3>
<p>Supporting and enhancing immunity. Primarily prophylactic.</p>
<h3 id="system-5"><a class="header-anchor" href="#system-5">#</a> System:</h3>
<p>Ayurveda</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-5"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-5">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes, alongside non-Ayurvedic prophylactic treatments</p>
<h3 id="status-of-authorisation-5"><a class="header-anchor" href="#status-of-authorisation-5">#</a> Status of authorisation:</h3>
<p>&quot;Kottakkal, situated in Kerala, is one of the most traditional and reputed centres of traditional and hereditary Ayurvedic treatment in India.</p>
<p>The Ministry of AYUSH (Ayurveda, Yoga &amp; Naturopathy, Unani, Siddha and Homeopathy) recommended the public to use a herbal decoction as an immunity-enhancing measure against the novel coronavirus in April, 2020. The ministry claimed that ‘AYUSH KWATH’ formulation can help boost the immune system, the body’s first line of defense against bacteria and viruses. The AYUSH ministry, in a letter referenced here, directed states and union territories to start commercial production of the herbal formulation claiming that it enhances immunity. Prime Minister Narendra Modi, while addressing the nation on lockdown, had recommended the use of alternative medicine as suggested by the AYUSH ministry to boost immunity.</p>
<p>Nonetheless, conventional medicine has not recognized the value of such formulations, citing lack of research studies.&quot;</p>
<h3 id="protocol-and-treatment-approach-5"><a class="header-anchor" href="#protocol-and-treatment-approach-5">#</a> Protocol and treatment approach:</h3>
<p>&quot;AYUSH KWATH is a combination of four medicinal herbs commonly used in every Indian kitchen - basil leaves (tulsi), cinnamon bark (dalchini), Zingiber officinale (sunthi), and krishna marich (Piper nigrum).</p>
<p>Mix 3 g of the Churnam in 150 ml of freshly boiled water. Let it remain for 5 minutes. Strain and take once or twice daily. Jaggery / lemon juice can be added for flavour. This is the recommended dosage for adults only. Drink 1-2 cups of the tea daily.&quot;</p>
<h3 id="typical-duration-of-treatment-5"><a class="header-anchor" href="#typical-duration-of-treatment-5">#</a> Typical duration of treatment:</h3>
<p>Can be consumed regularly, like herbal teas.</p>
<h3 id="outcome-5"><a class="header-anchor" href="#outcome-5">#</a> Outcome:</h3>
<p>Based on the traditional understanding of the properties of these herbs, it is expected that the immune-modulatory, antiviral, anti-oxidant, anti-inflammatory, anti-platelet, anti-atherosclerotic, hepato-protective, reno-protective properties of the herbs in the preparation would be safe and effective in immuno-regulation for controlling viral infections like COVID-19.</p>
<h3 id="significant-side-effects-5"><a class="header-anchor" href="#significant-side-effects-5">#</a> Significant side effects:</h3>
<p>This is a traditional treatment with no known side effects.</p>
<h3 id="recommended-quantity-for-stocking-5"><a class="header-anchor" href="#recommended-quantity-for-stocking-5">#</a> Recommended quantity for stocking:</h3>
<p><strong>VACANT</strong></p>
<h3 id="price-5"><a class="header-anchor" href="#price-5">#</a> Price:</h3>
<p>INR 150 for one bottle.</p>
<h3 id="suggested-suppliers-5"><a class="header-anchor" href="#suggested-suppliers-5">#</a> Suggested suppliers:</h3>
<p>&quot;Kottakkal Arya Vaidya Sala and other trusted stores selling herbal medicine</p>
<p>The formulation may be manufactured and sold in generic name as ‘Ayush Kwath’ or ‘Ayush
Kudineer’ or ‘Ayush Joshanda’.&quot;</p>
<h3 id="further-references-5"><a class="header-anchor" href="#further-references-5">#</a> Further references:</h3>
<p>&quot;COVID-19: AYUSH Ministry recommends taking ‘AYUSH KWATH’ formulation to enhance immunity; Know the recipe; April, 2020</p>
<p>‘Ayush health promotion product’ for commercial manufacturing by Ayurveda, Siddha and Unani drug manufacturers; Letter to the States and Union Territories from AYUSH Ministry, dated April 24, 2020</p>
<p>Immunity against COVID-19: Potential role of Ayush Kwath; Shankar Gautam, Arun Gautam et al.; Journal of Ayurveda and Integrative Medicine; Aug 17, 2020</p>
<p>Herbal plants as immunity modulators against COVID-19: A primary preventive measure during home quarantine; Kuntal Das; Journal of Herbal Medicine; Aug 5, 2021</p>
<p>&quot;</p>
<h2 id="_6-dr-swapna-reddy-s-md-ayurveda-clinically-proven-treatment-protocol"><a class="header-anchor" href="#_6-dr-swapna-reddy-s-md-ayurveda-clinically-proven-treatment-protocol">#</a> 6. Dr. Swapna Reddy's (MD (Ayurveda)) clinically proven treatment protocol</h2>
<h3 id="objective-6"><a class="header-anchor" href="#objective-6">#</a> Objective:</h3>
<p>The treatment of mild or even very severe Covid-19 infections in very short durations</p>
<h3 id="system-6"><a class="header-anchor" href="#system-6">#</a> System:</h3>
<p>Ayurveda adn Panchakarma therapy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-6"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-6">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Recommended to be used exclusively, not alongside allopathic treatments</p>
<h3 id="status-of-authorisation-6"><a class="header-anchor" href="#status-of-authorisation-6">#</a> Status of authorisation:</h3>
<p>&quot;Dr. Swapna Reddy established the Siddha Nagarjuna Ayurveda Clinic in Hyderabad and has been practising Ayurveda for 19-20 years.</p>
<p>The treatment is reported to have been effectively used to mitigate even infections in the last and critical stages, and proven clinically with over 300 patients including the doctor's own father and critically ill mother in Dr. Swapna Reddy's Ayurveda and Panchakarma clinic in Hyderabad. Dr. Reddy is an academically accomplished gold medallist in MD (Ayurveda) from Gujarat Ayurved University, specialized in Ayurvedic pharmacology and the treatment of end-stage illnesses through Panchakarma therapy in Ayurveda, and a certified Isha Hatha Yoga Teacher.</p>
<p>Over 300 patients have recovered from Covid-19 through Dr. Swapna Reddy's care, and have no side effects from the treatment. A few have acknowledged the efficacy of the cures in social media video testimonies. Among these, there were patients whose conditions were so critical that the doctor believes that they are unlikely to have survived through Standard Of Care therapy, as they may not have been able to withstand potent drugs.&quot;</p>
<h3 id="protocol-and-treatment-approach-6"><a class="header-anchor" href="#protocol-and-treatment-approach-6">#</a> Protocol and treatment approach:</h3>
<p>&quot;
Dr. Swapna Reddy's Ayurvedic preventive therapy for Covid-19:</p>
<p>Ayurveda has a three-pronged approach to prevention and cure, namely, Aahaaram (Food), Vihaaram (Lifestyle) and Oushadham (Medicine).</p>
<p>In Aahaaram or diet, it is important to eat freshly cooked and natural foods, and minimize foods that aggravate Kapha dosha, especially if the body is resistng an infection. When one is healthy, one can eat all fresh fruits and vegetables and freshly cooked food. Dairy products too can be consumed. It is important to consume foods that are rich in Praana or life energy, life-giving foods. (Here's, for quick reference, a list of some Positive, Negative and Neutral Praanic foods, according to Ayurveda. It is said that winter or ash gourd, or white pumpkin, is a food with the highest Praanic quality, and its juice drunk on an empty stomach in the morning is extremely vitalizing for the body.)</p>
<p>However, as soon as there are symptoms of Kapha (mucous), such as a runny nose or cough or mucal congestion in the chest, it is important to stop consuming all foods that aggravate Kapha, including fruits, raw vegetables and all dairy products. Here is a brief description of the Kapha Dosha (Kapha imbalance), according to Ayurveda, and its dietary and lifestyle remedies.</p>
<p>How to mitigate Kapha dosha in the body (i.e., dietary prescription for mitigating cold, cough and other respiratory ailments):
To reduce Kapha, avoid cold food, fruits, sweets, chocolates, refined and processed foods, milk and all dairy products, stored foods, and even sometimes, certain raw vegetables, which are all linked with aggravation of Kapha. The exceptions are turmeric milk with ginger / cardamom / black pepper. This is the Pathya or dietary regimen for Kapha mitigation in a patient with excessive Kapha, and the food for another individual physiological Prakrti may be different from that prescribed for a patient with Kapha imbalance. A good thumb rule with respect to diet may be to know the effect of a food on Kapha by observing the effect of consuming it on the body.</p>
<p>It is beneficial to add the following Oushadha or medicinal herbs and spices to the diet as Kashayas or herbal decoctions:
Turmeric, Cinnamon, Cardamon, Dry ginger powder (Sonti / Chukku), Black pepper, Tulasi / Holy basil, Pippali / Indian long pepper</p>
<p>With respect to Vihaaram or lifestyle, it is important not to be stressed, and to be religious about Yoga, Pranayama and meditation or Dhyaana. It is important to be peaceful and happy, which is the primary necessity for a healthy body and a strong immune system.</p>
<p>Isha Yoga and Hatha Yoga:
Dr. Swapna Reddy avows the great value of Isha Hatha Yoga and Simha Kriya to maintain the health of the immune system and the respiratory system. Isha Simha kriya, performed regularly 3 times a day, increases lung capacity and keeps the blood oxygen levels high. Isha kriya, performed regularly, makes the mind peaceful and stress-free and thus promotes immune health. The physician has observed with her patients that even those who have not been trained in Yoga and Pranayama would benefit adequately from regular practice of these Kriyas. Isha Kriya assists the mind to reduce depression and anxiety and to develop detachment in life. Simha Kriya helps to increase lung capacity, and is seen to increase oxygen saturation in the blood (as measured with an oxymeter) by even 5 %.
Tutorial page and video for Isha Yoga's Simha Kriya,
Isha Kriya- Free Online Guided Meditation
Isha Kriya Instructions- English (PDF)</p>
<p>Medicinal incense or Dhoopam:
Also, with respect to lifestyle or Viharam, Ayurveda recommends to purefy the living environment and discourage proliferation of pathogens by fumigating the home twice daily, in the morning and evening, with Dhoopams or incenses like Patanjali Aastha Dasanga Powder or Aparajitha Dhooma Choornam, or if these are not available, then Sambrani Dhoopam or simply fumigating by placing Neem leaves on burning coal.</p>
<p>Steam inhalation with medicinal oils:
As a preventative measure, and especially after suspected exposure, it is recommended to use Halin Drops in steam inhalation. During steam inhalation, inhale through the nose and exhale through the mouth, and vice versa, alternately. This remedy would help to clear the virus from the nose, mouth and respiratory tract, where it is said to reside for 4-5 days before progressing to an infection. For those who are occupationally exposed to the pathogen, it might be a good idea to inhale steam before entering the home, by installing a steamer in the front room.</p>
<p>Oushadham:
Ayurveda and Hatha yoga place great emphasis on boosting immunity. There are a great variety of immunoboosters in Ayurveda, and prominent among them are Ashwagandha, Guduchi / Giloy / Amrutha, Mahasudarsana kadha / Mahasudarsana ghana vati, Mahasudarsana choornam, Guduchi satvam, Godanti bhasma etc. When these medications are used, along with the adoption of an Ayurvedic lifestyle and yogic practices (such as Isha hatha yoga and Simha kriya), the body will not succumb to Covid-19.</p>
<p>Ayurvedic medicine for prophylaxis after exposure and early treatment:</p>
<p>For prevention, procure, measure and mix together the following medications in the given proportions into one powder:</p>
<p>WARNING: This therapy should only be taken strictly under medical supervision, and are not recmomended for self-medication as overdosage of some components could lead to serious side effects. It is best avoided during pregnancy and in infants. Lactating mothers and children may follow the prescription in low doses but strictly under medical supervision.</p>
<ol>
<li>
<p>Mahasudarshana Choornam 100 g, containing Guduchi / Tinospora cordifolia / Giloy / Amritavalli, Kiratatikta / Swertia chirata / Nilavembu / Chiretta, Musta / Cyperus rotundus / Koari kizhangu / Muttanjga / Tunge gadde / Nut or Coco or Java grass, Neem / Azadirachta indica / Veppu, Shunthi / Zingiber officinale / Chukku / Dried ginger</p>
</li>
<li>
<p>Guduchi / Giloy Satvam 50 g</p>
</li>
<li>
<p>Godanti Bhasmam 10 g, containing Godanti patthar / Gypsum, Ghritkumari Swaras / Aloevera juice, Nimbu / lemon</p>
</li>
</ol>
<p>Take 3 g of this mixture and mix it with honey to prepare balls. Take 1.5 g or half the prepared quantity in the morning, and the remaining 1.5 g in the evening, 30 minutes before meals. Before going to bed, have Triphala Choornam.</p>
<p>Ayurvedic remedies for advanced Covid symptoms:
Advanced Covid-19 symptoms can be treated effectively and efficiently by competent Ayurvedic physicians, but the treatment must be customized to the patient's physiology and exact symptoms. It is probably for this reason that the AYUSH Ministry has refrained from recommending therapies to treat advanced infection. The treatment of aggravated symptoms in Ayurveda makes use of metallomineral compounds that cannot be widely prescribed to the general public. Therefore it is recommended to consult with a competent nearby Ayurvedic physician in such cases.</p>
<p>Antibiotics and Immunosuppressants:
Antibiotics are inadvisable as they kill the microbiota in the human system, and thereby decrease the life force within the body. Corticosteroids, antihistamines and many other anti-inflammatory drugs act by suppressing the body's natural immunity, and like antibiotics, these carry the risk of adverse effects and leave the body vulnerable to other diseases. Thus the body is saved from the immediate crisis at the expense of the holistic health of the body.</p>
<p>Ayurveda, on the other hand, changes the medium of the body to make it inhospitable for pathogens, thereby suppressing the disease, while being supportive of the body's own probiotic and immune health. Therefore Ayurveda and traditional and natural medicines are always preferable to allopathic therapies, which should be used only as a last resort.</p>
<p>Background on the treatment approach adopted in the Ayurvedic sciences:
Dr. Swapna Reddy affirms that there are a very large number of cures in Ayurveda fro Covid, because Ayurveda is a holistic science that seeks to address the particular deficiencies or Dosha imbalance of the individual patient through a customized treatment protocol, rather than address the particular pathogen that has precipitated the symptoms. Patients thus emerge stronger than they were before the treatment, as opposed to mainstream or allopathic treatment protocols, where the side effects of the treatment themselves occasionally cause death or prolonged symptoms. Covid, in generally, is observed to attack the weakest organ system of the patient, and therefore there are a wide range of herbal medications that may need to be applied on a case-by-case basis. A correctly designed treatment protocol is found, in fact, to comprehensively treat all underlying conditions of the patient in addition to the SARS-CoV-2. For example, Aswagandha treatment for stress is found to also treat Covid symptoms. There is such a wide range of potential treatment protocols that every physician who has developed their own successful therapeutic strategies for Covid is likely to be using a uniquely different approache. In reality, SARS-CoV-2 is not deemed by learned Ayurveda and traditional physicians to be a difficult infection to treat, as even with no treatment, about 90 % of patients recover, but the typical manifestation of Covid is somewhat stronger than the typical flu infection.</p>
<p>However there are also a general treatment protocol and diet, which are 90 % successful and explained in the instructional videos released by Dr. Reddy. There are also treatments in Ayurveda for the vaccine injuries, which are highly effective.</p>
<p>Comparison of the Ayurvedic and allopathic approach to treating Covid:
The allopathic approach relies heavily on the use of corticosteroids, antihistamines and other substances to suppress the immune system, thereby mitigating the inflammatory response that is fatal in so many vulnerable Covid-19 patients. Allopathic therapy also relies on the use of antibiotics like Doxycycline and Azithromycin for their antiviral and antibiotic effect. However these chemicals also harm the body and are not, ultimately, life-giving. Instead, they suppress the body's own healing potential, one way or another, even if the Covid is effectively cured, and this leaves the body subsequently susceptible to other diseases and afflictions.</p>
<p>In Ayurveda, the Nadi method of diagnosis and symptomatic diagnosis are used to decide upon the right herbal medication, which are used to change the 'medium' within the body to make it inhospitable to the virus. At the same time, the organs in the body are not affected by the changed medium,.Thus Ayurveda and allopathy work in mutually contradictory ways.</p>
<p>Therefore it is important that when Ayurvedic medicines are used, allopathic medications should be avoided.&quot;</p>
<h3 id="typical-duration-of-treatment-6"><a class="header-anchor" href="#typical-duration-of-treatment-6">#</a> Typical duration of treatment:</h3>
<p>The treatment has been demonstrated to yield rapid results, with even an instance of the doctor's own mother, who was severely ill and nearly unconscious with Covid-19, and who had suffered from severe underlying medical conditions, recovering rapidly and regaining appetite in a matter of a few hours.</p>
<h3 id="outcome-6"><a class="header-anchor" href="#outcome-6">#</a> Outcome:</h3>
<p>&quot;Very good results, and rapid recovery from infection observed with the therapy, and reportedly demonstrated to be effective in curing 100 percent of over 300 cases in the physician's clinic.</p>
<p>Dr. Swapna Reddy also cites, from her clinical experience, that Ayurveda offers excellent methods for prevention of Covid-19.&quot;</p>
<h3 id="significant-side-effects-6"><a class="header-anchor" href="#significant-side-effects-6">#</a> Significant side effects:</h3>
<p>&quot;Dr. Reddy explains that Ayurvedic treatments inhibit viral replication in the body with increased immunity and in large part, with no adverse effects. However, some components of the present protocol, chiefly Godanti Bhasma, can have significant adverse effects if overdosed. Moreover, pregnant or lactating woman, infants and children may be advised not to take certain medications, or use them in a lower dosage. Therefore it is best not to self-medicate but to adopt this treatment strictly under medical supervision.</p>
<p>Godanti Bhasma- Benefits, Dosage, Ingredients, Side Effects
&quot;</p>
<h3 id="recommended-quantity-for-stocking-6"><a class="header-anchor" href="#recommended-quantity-for-stocking-6">#</a> Recommended quantity for stocking:</h3>
<p>&quot;Sufficient quantity for use in prophylaxing after exposure, not necessarily for regular use.</p>
<ol>
<li>Halin drops</li>
<li>Patanjali Dasanga Dhoopam / Aparajitha Dhoopa Choorna / Sambrani Dhoopam</li>
<li>Mahasudarsana Choornam 100 g</li>
<li>Guduchi or Giloy Satva 50 g</li>
<li>Godanti Bhasma 10 g</li>
<li>Triphala Choornam</li>
<li>Indian herbs and spices, to be used in cooking:
Turmeric, Cinnamon, Cardamon, Dry ginger powder (Sonti / Chukku), Black pepper, Tulasi / Holy basil, Pippali / Indian long pepper
&quot;</li>
</ol>
<h3 id="price-6"><a class="header-anchor" href="#price-6">#</a> Price:</h3>
<p>Total cost of approx. INR 1400 for all the recommended medicines online.</p>
<h3 id="suggested-suppliers-6"><a class="header-anchor" href="#suggested-suppliers-6">#</a> Suggested suppliers:</h3>
<p>&quot;For online consultation with Dr. S. Swapna Reddy, MD (Ayurveda) and Isha Hatha Yoga Teacher, contact +91 8985738271, or drswapnareddy@gmail.com.</p>
<p>Medicines can be procured from reputed Ayurveda pharmacies like Kottakkal Arya Vaidya Saala's outlets across India and online.</p>
<p>Prescribed therapeutic products for prophylactic and early treatment:</p>
<ol>
<li>Halin drops 50 drop-capsules (INR 265)</li>
<li>Patanjali Dasanga Dhoopam 100 g (INR 80) / Aparajitha Dhoopa Choorna 50 g (INR 55) / Sambrani Dhoopam 20 pcs (INR 24)</li>
<li>Mahasudarsana Churnam 100 g (INR 185)</li>
<li>Guduchi or Giloy Satva 50 g (INR 185 - 240)</li>
<li>Godanti Bhasma 10 g (INR 300)</li>
<li>Triphala Churnam 100 g (INR 350)
&quot;</li>
</ol>
<h3 id="further-references-6"><a class="header-anchor" href="#further-references-6">#</a> Further references:</h3>
<p>&quot;Dr. Swapna Reddy shares how Ayurveda and Yoga can boost Immunity during these challenging times</p>
<p>Isha Yoga's Simha Kriya</p>
<p>Isha Kriya- Free Online Guided Meditation</p>
<p>Isha Kriya Instructions- English (PDF)</p>
<p>healthline.com- Pranic Foods: Types, History, Evidence and More</p>
<p>healthline.com: What is the Ayurvedic Diet?: Benefits, Downsides, and More</p>
<p>healthline.com: What Are the Ayurvedic Doshas?- Vata, Pitta and Kapha Explained</p>
<p>Somatheeram Ayurvedic Health Resort: The Kapha Quality or Prakrti in Ayurveda- Diet, Tips, Characteristics etc.</p>
<p>Halin drops: Benefits, How to Use, Ingredients, Side Effects</p>
<p>ToI: Turmeric, neem effective against coronavirus, says KGMU study; Yusra Husain; July, 2020</p>
<p>en.wikipedia.org: Nasya</p>
<p>TNIE: Kerala’s ayurvedic fumigant receives national attention; Dinesh Kallungal; May 21, 2020
Oushadhi — an ayurvedic medicine manufacturing unit — had recently recommended the Ayush Ministry to use the fumigant in isolation wards and quarantine centres.</p>
<p>pharmascope.org: Review on Role of Dhoopan in the prevention of airborne infections (COVID-19); Rathi et al.</p>
<p>Microbial growth inhibition by aparajitha dhooma choornam; Cinela Celine; Ancient Science of Life; Jan, 2007</p>
<p>&quot;</p>
<h2 id="_7-prof-dileep-kumar-s-phd-ayurveda-pharmacology-recommended-protocol-for-covid-19-aiard"><a class="header-anchor" href="#_7-prof-dileep-kumar-s-phd-ayurveda-pharmacology-recommended-protocol-for-covid-19-aiard">#</a> 7. Prof. Dileep Kumar's (PhD, Ayurveda Pharmacology) recommended protocol for Covid-19, AIARD</h2>
<h3 id="objective-7"><a class="header-anchor" href="#objective-7">#</a> Objective:</h3>
<p>Treatment to prevent cytokine storm in Covid-19 and SPO2 level maintenance. To be only taken by people who have symptoms; it does not matter whether they test positive or not. It is not a preventative medicine.</p>
<h3 id="system-7"><a class="header-anchor" href="#system-7">#</a> System:</h3>
<p>Ayurveda</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-7"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-7">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Recommended to be used exclusively, before commencing or after stopping allopathic medication</p>
<h3 id="status-of-authorisation-7"><a class="header-anchor" href="#status-of-authorisation-7">#</a> Status of authorisation:</h3>
<p>Sourced from an official video documenting expert guidance from Prof. Dr. Dileep Kumar P. P., MD, PhD (Dravyaguna), Ayurveda Pharmacology, Ambuja Institute of Ayurvedic Research and Documentation, Udayamperoor P.O., Ernakulam, Kerala, Prepared for SIIMSAR Doctors School of Swasthavritta (Social and Preventative Medicine), Navi Mumbai</p>
<h3 id="protocol-and-treatment-approach-7"><a class="header-anchor" href="#protocol-and-treatment-approach-7">#</a> Protocol and treatment approach:</h3>
<p>&quot;Ingredients: 2 pieces of shallots or small onions, 2 star anise, 20 black pepper, 4 tsp coriander seeds, 1/2 tsp fenugreek seeds, 1/2 tsp turmeric powder,</p>
<p>Preparation and dosage: Coarsely crush and add these six ingredients to 2 glasses of water, boil and reduce it to 1 glass of the decoction. Filter the decoction and drink it piping hot 3 times a day, freshly prepared for 5 days.&quot;</p>
<h3 id="typical-duration-of-treatment-7"><a class="header-anchor" href="#typical-duration-of-treatment-7">#</a> Typical duration of treatment:</h3>
<p>5 days</p>
<h3 id="outcome-7"><a class="header-anchor" href="#outcome-7">#</a> Outcome:</h3>
<p>Treatment of Covid-19, including prevention of cytokine storm and SPO2 level maintenance in symptomatic patients who are not on allopathic medication.</p>
<h3 id="significant-side-effects-7"><a class="header-anchor" href="#significant-side-effects-7">#</a> Significant side effects:</h3>
<p>None known, natural remedy</p>
<h3 id="recommended-quantity-for-stocking-7"><a class="header-anchor" href="#recommended-quantity-for-stocking-7">#</a> Recommended quantity for stocking:</h3>
<p>1/2 kg shallots, 250 g star anise, 200 g black pepper, 250 g coriander seeds, 200 g fenugreek seeds, 100 g gram organic turmeric powder</p>
<h3 id="price-7"><a class="header-anchor" href="#price-7">#</a> Price:</h3>
<p>Common Indian kitchen ingredients</p>
<h3 id="suggested-suppliers-7"><a class="header-anchor" href="#suggested-suppliers-7">#</a> Suggested suppliers:</h3>
<p>Local grocery stores</p>
<h3 id="further-references-7"><a class="header-anchor" href="#further-references-7">#</a> Further references:</h3>
<p>Sourced from an official video documenting expert guidance from Prof. Dr. Dileep Kumar P. P., MD, PhD (Dravyaguna), Ayurveda Pharmacology, Ambuja Institute of Ayurvedic Research and Documentation, Udayamperoor P.O., Ernakulam, Kerala, Prepared for SIIMSAR Doctors School of Swasthavritta (Social and Preventative Medicine), Navi Mumbai</p>
<h2 id="_8-camphor-ajwain-carom-seeds-lavang-cloves-eucalyptus-oil-aromatic-pouch-potli-for-inhalation"><a class="header-anchor" href="#_8-camphor-ajwain-carom-seeds-lavang-cloves-eucalyptus-oil-aromatic-pouch-potli-for-inhalation">#</a> 8. Camphor + Ajwain / Carom seeds + Lavang / Cloves + Eucalyptus oil aromatic pouch / Potli for inhalation</h2>
<h3 id="objective-8"><a class="header-anchor" href="#objective-8">#</a> Objective:</h3>
<p>Relief from respiratory congestion and breathing difficulty, and increase blood oxygenation</p>
<h3 id="system-8"><a class="header-anchor" href="#system-8">#</a> System:</h3>
<p>Traditional medicine, recommended also by naturopaths</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-8"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-8">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes.</p>
<h3 id="status-of-authorisation-8"><a class="header-anchor" href="#status-of-authorisation-8">#</a> Status of authorisation:</h3>
<p>&quot;Among the remedies documented here, this remedy may be the least supported by mainstream research evidence, as there are several fact-checking articles online &quot;&quot;debunking the myth&quot;&quot;, such as this article, which nonetheless admits that camphor constitutes 4.8 % of the common decongestant and cough mitigant Vicks VapoRub:
The Federal: Beware: Camphor doesn’t help improve body’s oxygen level, it can be toxic; May 5, 2021</p>
<p>Dr. Prakash Gyawali, an Ayurvedic physician, explains that Camphor helps to open the nasal passages in case of cold while Cloves dry the phlegm, Eucalyptus oil is a nasal decongestant and Carom seeds / Ajwain are used in many Ayurvedic medicines for their expectorant and drying properties. However, he too believes that the claim that they increase oxygen saturation in blood is not well-founded in existing research:
South Asia Check | Fact Check: A supposed home remedy for boosting blood oxygen levels is unfounded; Deepak Adhikari; April 29, 2021</p>
<p>It has also been reported that anosmia or loss of taste and smell, one of the common and peculiar symptoms of Covid-19, especially in the first wave and earlier variants, attributed also to vitamin D deficiency and Zinc deficiency, can be reversed through steam inhalation with eucalyptus oil. Ajwain has been known to have a bronchodilatory effect and be useful in the treatment of asthma:
Bronchodilatory Effect of Carum copticum in Airways of Asthmatic Patients; Mohammad Hossein Boskabady et al.; Therapie; Jan, 2007</p>
<p>Anti-inflammatory activity of 1.8-cineol (eucalyptol) in bronchial asthma: a double-blind placebo-controlled trial; U R Juergens et al.; Respiratory Medicine; Mar, 2003</p>
<p>In fact, Carom seeds (active agents, thymol oil, terpine and linonene) and Eucalyptus oil (active agents, cineole and eucalyptol) are often prescribed in traditional home remedies to combat shortness of breath, especially for those suffering from asthma, where it is recommended that the oil of Eucalyptus be added to hot water for steam inhalation or that Carom seeds be slightly roasted to release the vapours that are sniffed to dilate the bronchial passages.</p>
<p>In this video, the well-known Ayurveda and Yoga physician and spiritual teacher Dr. Balaji Tambe, prescribes the Camphor + Ajwain + Abhyang oil Potli for those suffering from hypoxia and breathing difficulty, and mentions the customary use of this breathing aid by unaccustomed travellers to higher altitudes like Amarnath or Badrinath or Ladakh in the Himalayas. Acharya Tambe recommended that the chest be massaged with the Ayurvedic medicated oil Abhyang before the inhalation of vapours from the Ajwain-Camphor Potli, containing mostly Ajwain and only a pinch of pure camphor. It should be noted that the camphor used should prefefrably be natural camphor (obtained from a tree bark) very pure and is the more expensive, expensive variety, which is not toxic even if ingested in very small quantities (whereas synthetic camphor is inexpensive, and manufactured from oil of turpentine):
Shreeguru Dr. Balaji Tambe: Camphor-Ajwain for Breath; 2020</p>
<p>There is also much anecdotal evidence from clinicians and patients who have used the technique to mitigate breathing difficulty in Covid-19 patients. Ayurvedic Breathe Easy Potli is a commercial product that uses this technique to alleviate cough, respiratory distress and improve overall respiratory health and immunity.</p>
<p>&quot;</p>
<h3 id="protocol-and-treatment-approach-8"><a class="header-anchor" href="#protocol-and-treatment-approach-8">#</a> Protocol and treatment approach:</h3>
<p>A pinch of camphor, a spoon of Ajwain / Carom seeds (perhaps roasted to release more vapours), Lavang / Clove, a few drops of Eucalyptus oil, mixed and tied together in a cotton Potli / Kizhi or small pouch, and sniffed in 10-15 deep breaths every 1-2 hours. This treatment can be preceded by a topical massage of the chest with Ayurvedic Abhyang oil.</p>
<h3 id="typical-duration-of-treatment-8"><a class="header-anchor" href="#typical-duration-of-treatment-8">#</a> Typical duration of treatment:</h3>
<p>About 24 hours</p>
<h3 id="outcome-8"><a class="header-anchor" href="#outcome-8">#</a> Outcome:</h3>
<p>Patients who have used the Potli therapy report immediate symptomatic relief.</p>
<h3 id="significant-side-effects-8"><a class="header-anchor" href="#significant-side-effects-8">#</a> Significant side effects:</h3>
<p>None known. Camphor, even the natural variety, is known to be toxic if ingested in large quantities. All therapeutic medicines can be toxic if consumed in immoderate amounts.</p>
<h3 id="recommended-quantity-for-stocking-8"><a class="header-anchor" href="#recommended-quantity-for-stocking-8">#</a> Recommended quantity for stocking:</h3>
<p>Household supplies, 1-2 packets of pure natural Camphor and about 200g Ajwain.</p>
<h3 id="price-8"><a class="header-anchor" href="#price-8">#</a> Price:</h3>
<p>&quot;Ordinary household commodities could be used to make this home remedy.</p>
<p>&quot;</p>
<h3 id="suggested-suppliers-8"><a class="header-anchor" href="#suggested-suppliers-8">#</a> Suggested suppliers:</h3>
<p>Local grocery or supermarket</p>
<h3 id="further-references-8"><a class="header-anchor" href="#further-references-8">#</a> Further references:</h3>
<p>&quot;A great deal of anecdotal evidence from clinicians, such as cardiologist Dr. Shilpa Dane's video testimony. For example, &quot;&quot;Sharing an Incident that happened with Mr. Pramod Malkan. His daughter-in-law was tested positive for Covid and oxygen level went down to 80-85 and immediate hospitalization was recommended. Being skeptical abt the treatments at hospitals, Mr. Pramod decided to use a home remedy instead. He mixed a cube of camphor with a spoon of carom seeds and tied it in a piece of cotton cloth. He then made her smell it 10-15 times with deep breaths and repeat the same action every two hours. Within 24 hrs her oxygen level went to 98-99 without any hospitalization. After this, he helped one of his friends who was hospitalized for covid with the same remedy and as a result, his friend was released from the hospital. Carom seeds is - ajwain अजवाइन (ओवा)&quot;&quot;</p>
<p>Reported to be stocked in ambulances, used to reoxygenate climbers and travellers in high altitude pilgrimage centers like Badrinath and Amarnath, and other Himalayan heights like Ladakh.</p>
<p>Ayurveda Acharya Dr. Balaji Tambe: Camphor-Ajwain for Breath</p>
<p>A few other (indirect) references from research are cited in the &quot;&quot;Status of Authorization&quot;&quot; section.</p>
<p>&quot;</p>
<h2 id="_9-haldi-30-therapy-using-a-superactive-extract-of-haldi-turmeric-in-sesame-oil"><a class="header-anchor" href="#_9-haldi-30-therapy-using-a-superactive-extract-of-haldi-turmeric-in-sesame-oil">#</a> 9. Haldi-30 Therapy, using a &quot;superactive extract&quot; of Haldi / Turmeric in Sesame oil</h2>
<h3 id="objective-9"><a class="header-anchor" href="#objective-9">#</a> Objective:</h3>
<p>The mitigation of Covid-19 in mild, moderate and advanced stages of the disease</p>
<h3 id="system-9"><a class="header-anchor" href="#system-9">#</a> System:</h3>
<p>Ayurveda, Integrative medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-9"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-9">#</a> Can be used alongside other allopathic treatments:</h3>
<p><strong>VACANT</strong></p>
<h3 id="status-of-authorisation-9"><a class="header-anchor" href="#status-of-authorisation-9">#</a> Status of authorisation:</h3>
<p>&quot;The following webpage documents the journey of the therapy, developed through the innovations of Dr. S. G. Kane and Vaidya Sarang Phadke and being used effectively in the Vaidya's clinic for over 16 years.
Haldi-30 Ayurvedic Superactive Extract</p>
<p>Excerpt from the page:
The basic methodology for producing such an extremely bioactive extract of any herb was invented by Dr. S.G Kane, a chemical engineer and scientist who holds the worldwide process patent. Dr. Kane has invented this process for making extracts from any Ayurvedic herb, which results in creation of herb nano-particles in a low dose formulation that work at a deep cellular level. The further brainstorming and idea to use Turmeric super-active extract specifically for the coronavirus was Vaidya Sarang Phadke's own contribution, as was the specific dosage requirement in case of Covid-19. Vaidya Phadke came upon the dosage requirement – up to 5 times in a day – after researching several scientific studies which showed that frequent dosing is needed as Turmeric levels rapidly clear the bloodstream. Turmeric doesn’t work as effectively in any other form, but it works extremely well in this extract form because of the presence of bioactive nano-particles.</p>
<p>In Dr. Dravid's words:
&quot;&quot;I have made multiple attempts to reach out to the Central Government, mainly through the Ministry of Ayush, beginning first on August 15, 2020; I sent them a follow up reminder on the 20th of September. However, after receiving no response from Ayush, I made a complaint with the Prime Minister’s Grievance Cell, who did respond and forwarded my communication to Ayush, advising them to look into the matter.</p>
<p>&quot;&quot;Ayush sent my written clinical findings and data to the Central Council for Research in Ayurvedic Sciences to validate my claims. CCRAS further requested me to submit 45 case reports and I attended meetings with them over the course of two months. However, they later objected saying that after the patient recovery, I failed to have a repeat RTPCR test done proving the patients were negative. And so, they informed me, my claim was denied. This happened around January-February when the incidence of cases had declined, and so I didn’t bother further with the Ministry. But soon, March onward there was a sudden spike in cases again, and I sometimes would see as many as 15 Covid patients in a day. Again, I wrote back again to CCRAS, along with negative repeat test reports of the first 3 patients I had treated. I am also following up further with more cases with negative RTPCR test reports upon their recovery from my treatment.</p>
<p>&quot;&quot;If the Government decides to accept these finding as valid, the true advantage to this extract medicine is that it is proven safe and non-toxic, both by empirical use in our country over generations as food, as well as in my own 16 years of clinical practice. Among the 200 patients treated by me, only two had mild side-effects of oral ulcers, which were immediately managed with additional Ayurvedic medicines. These patients were able to complete their course of treatment with no further issues. Across all ages from young children to the elderly this medicine is very safe.</p>
<p>&quot;&quot;If this medicine were to be used on a mass scale, because we are seeing a tremendous spike in cases at present India, it would be of great benefit. Every single case I have treated was managed effectively at the upper respiratory tract level, without ever getting worse and entering the lungs and without needing hospitalization.Indeed, this approach would reduce the current heavy burden on our hospitals and assuredly reduce the number of severe cases progressing to deaths.</p>
<p>&quot;&quot;There are some pharmaceutical medicines now being used which have worked well such as Fabilu (Favipiravir), but they are very expensive, and produce side-effects as well;  instead of depending on such drugs, if Haldi-30 were to be widely used, it would not only be very cost effective, it would also improve the health outcomes on a mass level. Further, it would allay the extremely horrifying situation we are facing now.</p>
<p>&quot;&quot;This medicine is easy to use, but as covid is a serious illness, I administer it to patients under my direct supervision, and monitor them closely on a daily basis over the phone while they are under treatment. I am cautious when monitoring patients, that if there is any change in symptoms, I order a chest X-ray to ensure that the infection hasn’t entered the lungs.</p>
<p>&quot;&quot;Now there is a limit to how many cases I can manage myself alone. Although I may have researched and tested and verified the efficacy of this medicine, I have no desire or expectations of any monetary returns or benefit. As the medicine is very cost-effective, if the Government so decides, it could be made widely available to the public.&quot;&quot;</p>
<p>&quot;</p>
<h3 id="protocol-and-treatment-approach-9"><a class="header-anchor" href="#protocol-and-treatment-approach-9">#</a> Protocol and treatment approach:</h3>
<p>&quot;Excerpt from an interview given by Vaidya Sarang Phadke in April, 2021:
&quot;&quot;I have observed that symptomatic patients respond to this medicine within the first 3-4 days, and usually 30% of patients become fully asymptomatic with just a single dose or within two or three days. Patients with Diabetes or other co-morbidities, become symptom-free in 7-8 days. However, I do have my patients continue to take the medicine for the full 14 day quarantine period. So far, I have treated close to 200 Covid-19 patients, ranging in age from a 1 year 10 month old baby girl to an elderly gentleman of 88. This medicine has been effective in 100% of all patients, who have recovered fully.&quot;&quot;</p>
<p>For further information about the product, treatment modality, suppliers, any contraindications etc., here is a website that provides the names of physicians who offer this therapy, and who can be contacted for more information:</p>
<p>Haldi-30&quot;</p>
<h3 id="typical-duration-of-treatment-9"><a class="header-anchor" href="#typical-duration-of-treatment-9">#</a> Typical duration of treatment:</h3>
<p>&quot;Excerpt from an interview given by Vaidya Sarang Phadke in April, 2021:
&quot;&quot;I have observed that symptomatic patients respond to this medicine within the first 3-4 days, and usually 30% of patients become fully asymptomatic with just a single dose or within two or three days. Patients with Diabetes or other co-morbidities, become symptom-free in 7-8 days. However, I do have my patients continue to take the medicine for the full 14 day quarantine period.&quot;&quot;&quot;</p>
<h3 id="outcome-9"><a class="header-anchor" href="#outcome-9">#</a> Outcome:</h3>
<p>&quot;Excerpt from an interview given by Vaidya Sarang Phadke in April, 2021:
&quot;&quot;I have observed that symptomatic patients respond to this medicine within the first 3-4 days, and usually 30% of patients become fully asymptomatic with just a single dose or within two or three days. Patients with Diabetes or other co-morbidities, become symptom-free in 7-8 days. However, I do have my patients continue to take the medicine for the full 14 day quarantine period. So far, I have treated close to 200 Covid-19 patients, ranging in age from a 1 year 10 month old baby girl to an elderly gentleman of 88. This medicine has been effective in 100% of all patients, who have recovered fully.&quot;&quot;</p>
<p>Adds Dr. Vikram Dravid, who is championing the novel treatment:</p>
<p>&quot;&quot;I personally have used this methodology in creating diverse formulae to treat various conditions, including treatment failures of modern medicine. This type of medicine works faster, at a lower dose than conventional Ayurvedic medicines, and with great ease of use for the patient.</p>
<p>&quot;&quot;The great advantage to using Haldi-30 as a first-line treatment strategy is the extreme potency, which helps conserve natural herb resources amidst overwhelming demand during a pandemic.&quot;&quot;&quot;</p>
<h3 id="significant-side-effects-9"><a class="header-anchor" href="#significant-side-effects-9">#</a> Significant side effects:</h3>
<p>As both Turmeric and Sesame oil are edible food substances, this extract is non-toxic and proven to be safe, and Vaidya Dr. Sarang Phadke reports that they have been using it as an ingredient in various formulations in clinical practice for 16 years now.</p>
<h3 id="recommended-quantity-for-stocking-9"><a class="header-anchor" href="#recommended-quantity-for-stocking-9">#</a> Recommended quantity for stocking:</h3>
<p><strong>VACANT</strong></p>
<h3 id="price-9"><a class="header-anchor" href="#price-9">#</a> Price:</h3>
<p>&quot;Says Vaidya Dr. Sarang Phadke:</p>
<p>&quot;&quot;There are some pharmaceutical medicines now being used which have worked well such as Fabilu (Favipiravir), but they are very expensive, and produce side-effects as well.  Instead of depending on such drugs, if Haldi-30 were to be widely used, it would not only be very cost effective, it would also improve the health outcomes on a mass level. Further, it would allay the extremely horrifying situation we are facing now.&quot;&quot;&quot;</p>
<h3 id="suggested-suppliers-9"><a class="header-anchor" href="#suggested-suppliers-9">#</a> Suggested suppliers:</h3>
<p>&quot;Find the nearest doctor offering Haldi 30 therapy here:</p>
<p>Haldi-30</p>
<p>Dr. Vikram Dravid may be contacted for consultations and medical guidance at http://vikramdravid.com.&quot;</p>
<h3 id="further-references-9"><a class="header-anchor" href="#further-references-9">#</a> Further references:</h3>
<p>&quot;For further information about the product, treatment modality, suppliers, any contraindications etc., here is a website that provides the names of physicians who offer this therapy, and who can be contacted for more information:</p>
<p>Haldi-30</p>
<p>Haldi-30 on Facebook</p>
<p>YouTube.com: In conversation with Dr. Vikram Dravid</p>
</ContentSlotsDistributor>
"},null]}