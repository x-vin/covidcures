{"remainingRequest":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/x/repos/covidcures/docs/src/naturopathic.md?vue&type=template&id=500fca74&","dependencies":[{"path":"/Users/x/repos/covidcures/docs/src/naturopathic.md","mtime":1640947850724},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640777136396},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js","mtime":1640777136291},{"path":"/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1640777135896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><h1 id="naturopathic-treatments"><a class="header-anchor" href="#naturopathic-treatments">#</a> Naturopathic Treatments</h1>
<p><strong>DISCLAIMER</strong>: This information is for educational purposes only. It is not intended to serve as a substitute for diagnosis, treatment, or advice from a qualified, licensed medical professional. Any treatment you undertake should be discussed with your physician or other licensed medical professional.</p>
<p><strong>NOTE</strong>: The information in this tabulation about dosages is primarily for adults. The dosages for children have been mentioned in the case of a few over-the-counter remedies where the data was available.</p>
<h2 id="_1-dr-henry-ealy-s-naturopathic-and-integrative-approach"><a class="header-anchor" href="#_1-dr-henry-ealy-s-naturopathic-and-integrative-approach">#</a> 1. <strong>Dr. Henry Ealy's Naturopathic and Integrative Approach</strong></h2>
<h3 id="objective"><a class="header-anchor" href="#objective">#</a> Objective:</h3>
<p>Prophylactic vitamin supplementation and naturopathic healthy lifestyle for Covid-19, as well as an extremely effective, evidence-based and largely nutritional therapy from a reputed American naturopath physician, Dr. Henry Ealy, ND.</p>
<h3 id="system"><a class="header-anchor" href="#system">#</a> System:</h3>
<p>Naturopathy, nutrition science and integrative medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes, if need be.</p>
<h3 id="status-of-authorisation"><a class="header-anchor" href="#status-of-authorisation">#</a> Status of authorisation:</h3>
<p>Dr. Henry Ealy holds a Doctorate in Naturopathic Medicine from SCNM and a Bachelor of Science in Mechanical Engineering from UCLA. He is Board Certified in Holistic Nutrition by the NANP, is a Yoga teacher and is the Founder of the Energetic Health Institute in Portland, Oregon. Dr. Ealy has over 20 years of clinical experience.</p>
<h3 id="protocol-and-treatment-approach"><a class="header-anchor" href="#protocol-and-treatment-approach">#</a> Protocol and treatment approach:</h3>
<p><strong>The top 7 nutrients recommended by Dr. Henry Ealy to prevent and mitigate Covid: Vitamins D, C and A, Zn, Glutathione / NAC, L-Arginine, Quercetin</strong></p>
<p>Dr. Ealy observes that <strong>vaccines have safety concerns and breakthrough cases of SARS-CoV-2 are commonly reported</strong>. The experimental inoculations are speeding up the evolution of newer aggressive variants. <strong>The primary line of prophylaxis must be the natural human immunity</strong>. People have not been given basic guidance to empower their immune systems, based on existing empirical evidence. There is substantial evidence supporting the efficacy of several vitamins, minerals and other nutrients to prevent and mitigate Covid-19. These include <strong>vitamins D, C, and A, Zinc, Quercetin, Glutathione and N-Acetyl Cysteine (NAC)</strong>. These wonderful nutrients, when input <strong>in therapeutic amounts</strong> into the bloodstream, are proven to be remarkably effective against Covid-19 and other viral infections as well.</p>
<p>(<strong>Note</strong>: When supplementing with vitamin D, it is <a href="https://www.sciencedirect.com/science/article/pii/S120197122030624X" target="_blank" rel="noopener noreferrer">important also to supplement with sources of vitamin K2<OutboundLink/></a>, and also <a href="https://www.sciencedirect.com/science/article/pii/S037851222030284X" target="_blank" rel="noopener noreferrer">with Calcium and Magnesium<OutboundLink/></a> for <a href="https://pubmed.ncbi.nlm.nih.gov/29480918/" target="_blank" rel="noopener noreferrer">improved D absorption<OutboundLink/></a> and bone health.)</p>
<p>&quot;&quot;An ounce of Prevention is worth a pound of Cure.&quot;&quot; The prestigious Linus Pauling Institute, Oregon State University, prescribed 4 key nutrients, not against the virus, but for the body's immunity to function in peak form- <strong>vitamins D, C, and A, and the mineral Zinc</strong>. Vitamin C kills viruses, D builds immunity, and Zinc inhibits viral replication in cells. <strong>Zn is difficult to transport into cells and needs a Zinc ionophore like Hydroxychloroquine (HCQ)</strong>, which was banned by policymakers in many Western regional administrations shortly after it was reported that HCQ would be an antidote to Covid-19. <strong>The antioxidant quercetin has been shown to be a zinc ionophore</strong>, published in a 2014 NIH study. Incidentally, <strong>green tea and dark chocolate are rich in flavonols like Quercetin</strong>.</p>
<p>Studies have conclusively showed a strong correlation of degree of vitamin D deficiency and severity of Covid. <strong>Glutathione</strong>, which is an antoxidant manufactured in the body with plant foods, is another vital nutrient that kills infections. Glutathione opens up respiratory passageways and increases blood oxygen saturation. <strong>N-Acetylcysteine (NAC)</strong> is another vital and healing nutrient that converts in the body into the antoxidant Glutathione. In patients with pneumonia, the NAC thins out phlegm in the lungs so that it can be expectorated out.</p>
<p>It is important to recognize that these healing nutrients need to be administered in optimal, therapeutic doses for their maximum benefits and minimal adverse effect. It is not widely appreciated that exposure to a pathogen does not necessarily lead to infection, and healthy immune systems are, in the vast majority of cases, able to deal with pathogens without succumbing to illness.</p>
<p>There are other products that have been proven to be very effective at &quot;&quot;stopping the bandit at the door&quot;&quot;, so to speak, such as disinfectant mouthwash and nasal spray. <strong>Chlorhexadine</strong> has been shown to kill 99 % of the Covid virus in a sample.</p>
<p>There is substantial research showing that Covid-susceptible people are deficient in Bifidobacterium in their GI tract, often due to antibiotic use, making them susceptible to viral diseases. Dr. Ealy has never needed pharmaceutical drugs in his 20+ years in clinical practice, and therefore is not able to comment on the need for pharmaceutical medication like Ivermectin or HCQ. However there is much respect for the work of admirable physicians like Dr. Pierre Kory and Dr. Joseph Mercola. A notable exception, during the present pandemic, was the instance of one critically ill patient who developed pneumonia on the third day of infection and was refused conventional healthcare. He recovered under Dr. Ealy's care in just 8 days, with an IV infusion of the therapeutic nutrient cocktail called Myers' Cocktail, a liquid glutathione drip, Bifidobacteria, Ivermectin and Prednisone. Ivermectin helps in the same way that Bifidobacteria do. However, there is thus no &quot;&quot;magic bullet&quot;&quot; for this disease. It is important to explain to patients what is being done and why, and that they will recover soon and regain lifelong immunity,so that they are reassured about the course and predicted outcome of the treatment, thereby engaging their parasympathetic nervous system and relieving them of the stress and anxiety that are so correlated with poor treatment outcomes.</p>
<p>Risk stratification is an important component of the therapeutic approach. As 99.57 % of those under 65 and exposed to the virus recover and 99.98 % of those under 39, the mandating of 6 feet social distancing and masking everywhere appear to be an overkill. The disease is not a serious concern for younger people. However &gt; 99 % Americans are deficient in vitamin D. Therefore the current Covid response policy does not appear to be informed by science and by empirical observations.</p>
<p>Dr. Ealy's team have published a report on the most beneficial nutritional therapy for Covid, based on available evidence, which were identified to include vitamins D, C, A and <strong>E, L-arginine and Phosphatidylcholine</strong>, amoung others. Of these, <strong>L-arginine is found in protein-rich foods, including beans</strong>, and <strong>Phosphatidylcholine is found in eggs and whole grains. Food sources are the best way to obtain these nutrients. The best prophylactics, according to their research, are nutrients, nutrients and nutrients</strong>. These nutrients are also effective at healing the damage caused by the toxic spike glycoproteins, due to infection or inoculation. <strong>L-arginine</strong> converts in the body into nitric oxide, which dilates blood vessels and limits damage. <strong>Phosphatidylcholine</strong> helps to heal damage to the inside of vascular walls from spike proteins, causing inflammatory damage like myocarditis and pericarditis.</p>
<p><strong>It would be good to take a good multivitamin supplement containing especially the water-soluble vitamins B-complex and C, as they are quickly excreted and difficult to get in sufficient quantities through food. The B-complex vitamins are needed for cellular energy production, for the production of ATP molecules for cellular enzyme production, for healing, repair and metabolism at the cellular level. A thumbrule to identify a good multivitamin supplement is to look for one that contains Pantothenic Acid or B5 in quantities greater than 100 mg. Ideally, the amount of B5 should exceed 200 mg, and then the rest of the formulation probably contains all the other nutrients in therapeutic range as well. Onions, capers and blueberry smoothies probably contain Quercetin in therapeutic amounts. Organic carrot juice is a good source of Betacarotene. Vitamin D can be obtained in therapeutic amounts from sunlight, and Zinc in therapeutic amounts from pumpkin seeds.</strong></p>
<p>The most common symptom among all (99.99 %) pathologies is fatigue. Thus energy production is vital for the immune system. There is published research showing that proton pump inhibitors, used by many as antacids, turn off or decouple innate healing mechanisms, lysosomal activity in cells, which involve digestive enzymes that kill infections. Hence it is important to stop using proton pump inhibitors as antacids.</p>
<p>The following are the most important recommendations for doctors:</p>
<ol>
<li>First check vitamin D levels and get them above 55 ng/mL, which virtually guarantees recovery.</li>
<li>If the patient has been on antibiotics, start them on the probiotic Bifidobacterium.</li>
<li>Educate patients about health.</li>
</ol>
<p>The following are the essential components and practices for a healthy life:</p>
<ol>
<li>A positive outlook on life. Turn off the TV, the phone and get outside! Riding a bike, meditation, Praanayaama, Tai Chi, Qigong, Yoga, walking with someone we love and holding their hands releases oxytocin. Hug family members and tell them we love them.</li>
<li>Getting sunlight, and the darker the eye colour, the longer the time that needs to be spent in the sun.</li>
<li>Sleep 8 hours a night. Take a bath before bed and think of some positive things that happened during the day. Burn lavender oil. Such positive and affirmative practices engage the parasympathetic (&quot;&quot;Rest &amp; Digest&quot;&quot;) nervous system that is so vital for healing.&quot;</li>
</ol>
<h3 id="typical-duration-of-treatment"><a class="header-anchor" href="#typical-duration-of-treatment">#</a> Typical duration of treatment:</h3>
<p>Recovery was found to be dramatically quickened, and a critical patient with a very aggressive case of Covid-19 in the advanced pulmonary phase recovered with strong nutritional therapy and mild therapy using integrative medicine in just 8 days.</p>
<h3 id="outcome"><a class="header-anchor" href="#outcome">#</a> Outcome:</h3>
<p>Dr. Ealy has treated many patients with Covid symptoms in his clinic using nutritional therapy alone, and his findings and integrative treatment protocol are highly evidence-based. In 2020, their team filed a Grand Jury petition to all US attorneys throughout the country that they had found some very concerning violations of Federal law with respect to healthcare policy in addressng the pandemic, and that the implications of those violations are very significant, citing 200+ research studies as evidence. They requested US State Health Departments to give nutritional guidelines to patients and the general public as the first step to mitigating the pandemic. Though many attorneys expressed interest in the information and were educated by the team, there was no other positive outcome from the campaign.</p>
<h3 id="significant-side-effects"><a class="header-anchor" href="#significant-side-effects">#</a> Significant side effects:</h3>
<p>No adverse side effects are reported when the prescribed nutrients are used in therapeutic dosages in the long term. However it is important to be aware of the safest and most effective schedules for supplementation.</p>
<p><a href="https://www.washingtonpost.com/lifestyle/wellness/morning-or-night-with-food-or-without-answers-to-your-questions-about-taking-supplements/2019/02/04/5fcec02a-2577-11e9-81fd-b7b05d5bed90_story.html" target="_blank" rel="noopener noreferrer">Washington Post: The best time of day to take common nutritional supplements<OutboundLink/></a></p>
<h3 id="recommended-quantity-for-stocking"><a class="header-anchor" href="#recommended-quantity-for-stocking">#</a> Recommended quantity for stocking:</h3>
<p>Recommended to stock the nutrients for regular prophylactic use .</p>
<h3 id="price"><a class="header-anchor" href="#price">#</a> Price:</h3>
<p>&quot;Nutrient supplements can vary in pricing with the product brand and online store.</p>
<p>Nutraceuticals have potential for boosting the type 1 interferon response to RNA viruses including influenza and coronavirus; Progress in Cardiovascular Diseases; Mark F. McCarty, James J. DiNicolantonio&quot;</p>
<h3 id="suggested-suppliers"><a class="header-anchor" href="#suggested-suppliers">#</a> Suggested suppliers:</h3>
<p><a href="https://www.amazon.com/Renew-Life-Ultimate-Probiotic-Formerly/dp/B000CMKC5Y/ref=as_li_ss_tl?th=1&amp;linkCode=ll1&amp;tag=theheacro-20&amp;linkId=26bf1246dcfc203e0eb7a6b72d5d8273" target="_blank" rel="noopener noreferrer">Renew Life Adult Probiotics 50 Billion CFU Guaranteed, 12 Strains, For Men &amp; Women, Shelf Stable, Gluten Dairy &amp; Soy Free, 30 Capsules, Ultimate Flora Extra Care<OutboundLink/></a></p>
<p><a href="https://www.amazon.com/Vegetarian-Bifidobacteria-only-Probiotic-Physician-Formulated/dp/B00A86JHMI/ref=as_li_ss_tl?ie=UTF8&amp;linkCode=ll1&amp;tag=theheacro-20&amp;linkId=e7a683de22823daeb1e9fe0af6f7131b" target="_blank" rel="noopener noreferrer">Seeking Health ProBiota Bifido, 60 Capsules, Probiotic Supplement for Digestive Health, Bifido Only, Vegan- and Vegetarian-Friendly, Supports Colon Health and Immune System<OutboundLink/></a></p>
<h3 id="further-references"><a class="header-anchor" href="#further-references">#</a> Further references:</h3>
<p><a href="https://covexit.com/webinar-with-dr-henry-ealy-naturopathic-doctor-and-holistic-nutritionist/" target="_blank" rel="noopener noreferrer">The Prevention of Covid-19, with Dr. Henry Ealy - Naturopathic Doctor and Holistc Nutritionist<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/12410623/" target="_blank" rel="noopener noreferrer">Intravenous nutrient therapy: the &quot;Myers' cocktail&quot;<OutboundLink/></a></p>
<p><a href="https://hcqsupport.weebly.com/" target="_blank" rel="noopener noreferrer">The Hydroxychloroquine Option<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/25050823/" target="_blank" rel="noopener noreferrer">Zinc ionophore activity of quercetin and epigallocatechin-gallate: from Hepa 1-6 cells to a liposome model<OutboundLink/></a></p>
<p><a href="https://endsickness.org/list-of-61-probiotic-strains-found-in-kefir/" target="_blank" rel="noopener noreferrer">List of 61+ probiotic strains found in kefir (including Bifidobacterium)<OutboundLink/></a></p>
<p><a href="https://www.frontiersin.org/articles/10.3389/fpubh.2020.00186/full" target="_blank" rel="noopener noreferrer">Using Probiotics to Flatten the Curve of Coronavirus Disease COVID-2019 Pandemic<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7972717/" target="_blank" rel="noopener noreferrer">Probiotics in Prevention and Treatment of COVID-19: Current Perspective and Future Prospects<OutboundLink/></a></p>
<p><a href="https://www.news-medical.net/news/20200914/RUDN-geneticist-finds-a-bifidobacterial-protein-that-can-reduce-inflammation-in-COVID-19.aspx" target="_blank" rel="noopener noreferrer">RUDN geneticist finds a bifidobacterial protein that can reduce inflammation in COVID-19<OutboundLink/></a></p>
<p><a href="http://healthycrow.com/bifidobacterium-probiotic/" target="_blank" rel="noopener noreferrer">3 Best Bifidobacterium Probiotics Without Lactobacillus, Including One With Both<OutboundLink/></a></p>
<p><a href="https://www.energetichealthinstitute.org/covid-19-updates/" target="_blank" rel="noopener noreferrer">Energetic Health Institute: COVID-19 Updates<OutboundLink/></a></p>
<p><a href="https://www.energetichealthinstitute.org/top-7-nutrients-to-help-you-survive-your-governor/" target="_blank" rel="noopener noreferrer">Energy Health Institute: Top 7 Nutrients to Help You Survive Your Governor<OutboundLink/></a></p>
<p><a href="https://standforhealthfreedom.com/" target="_blank" rel="noopener noreferrer">Health Freedom Advocacy Center | Stand For Health Freedom<OutboundLink/></a></p>
<p><a href="https://www.dailymail.co.uk/health/article-10052195/What-recover-sense-smell-contracting-Covid-19.html" target="_blank" rel="noopener noreferrer">dailymail.co.uk: It is one of Covid's most distinctive and curious symptoms that affects over half of all sufferers... but what CAN you do to recover your sense of smell after contracting the virus? (Vitamin A)<OutboundLink/></a></p>
<p><a href="https://principia-scientific.com/study-covid-19-vaccine-can-destroy-your-immune-system/" target="_blank" rel="noopener noreferrer">How COVID-19 vaccine can destroy your immune system: Informed consent disclosure to vaccine trial subjects of risk of COVID-19 vaccines worsening clinical disease; Cardozo &amp; Veazey; Oct 28, 2020; International Journal of Clinical Practice<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7130854/" target="_blank" rel="noopener noreferrer">Nutraceuticals have potential for boosting the type 1 interferon response to RNA viruses including influenza and coronavirus; Progress in Cardiovascular Diseases; Mark F. McCarty, James J. DiNicolantonio<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7402141/" target="_blank" rel="noopener noreferrer">The Role of Glutathione in Protecting against the Severe Inflammatory Response Triggered by COVID-19; Francesca Silvagno et al.; Antioxidants; July, 2020<OutboundLink/></a></p>
<p><a href="https://covexit.com/dr-henry-ealy-speaks-about-vitamin-d-covid-19-more/" target="_blank" rel="noopener noreferrer">covexit.com: Dr Henry Ealy Speaks about Vitamin D, COVID-19 &amp; More; April 18, 2021<OutboundLink/></a></p>
<p><a href="https://college.acaai.org/covid-19-and-the-use-of-vitamins-and-supplements/" target="_blank" rel="noopener noreferrer">American College of Allergy, Asthma and Immunology: Covid-19 and the use of vitamins and supplements; June 24, 2020<OutboundLink/></a></p>
<p><a href="https://www.uspharmacist.com/article/common-supplements-might-reduce-covid-severity" target="_blank" rel="noopener noreferrer">U.S. Pharmacist: Common Supplements Might Reduce COVID Severity; July 10, 2020<OutboundLink/></a></p>
<p><a href="https://www.authorea.com/users/390404/articles/504772-treatment-of-covid-19-patients-with-quercetin-a-prospective-single-centre-randomized-controlled-trial" target="_blank" rel="noopener noreferrer">Authorea: Treatment of COVID-19 Patients with [QCB- Quercetin, vitamin C, Bromelain]: A Prospective, Single - Centre, Randomized, Controlled Trial; Hasan Onal et al.<OutboundLink/></a></p>
<p><a href="https://www.zrtlab.com/blog/archive/viral-illness-prevention-and-treatment-quercetin/" target="_blank" rel="noopener noreferrer">ZRT Laboratory: Naturopathic Therapy for Prevention and Support of Viral Illness- Part I; Tracy Tranchitella, ND; Dec 4, 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8369961/" target="_blank" rel="noopener noreferrer">Natural Supplements for COVID19—Background, Rationale, and Clinical Trials; Melody Hermel, MD, et al.; Journal of Evidence-Based Integrative Medicine; Aug 13, 2021<OutboundLink/></a></p>
<p><a href="https://www.sciencedirect.com/science/article/pii/S120197122030624X" target="_blank" rel="noopener noreferrer">Vitamin D3 and K2 and their potential contribution to reducing the COVID-19 mortality rate; Simon Goddek; International Journal of Infectious Diseases; Oct, 2020<OutboundLink/></a></p>
<h2 id="_2-acharya-arun-sharma-s-special-recommendations-in-nature-cure-for-prophylactic-and-mitigating-protocols-for-covid-19-and-for-mitigation-of-post-covid-syndrome"><a class="header-anchor" href="#_2-acharya-arun-sharma-s-special-recommendations-in-nature-cure-for-prophylactic-and-mitigating-protocols-for-covid-19-and-for-mitigation-of-post-covid-syndrome">#</a> 2. Acharya Arun Sharma's special recommendations in Nature Cure for prophylactic and mitigating protocols for Covid-19, and for mitigation of post-Covid syndrome</h2>
<h3 id="objective-2"><a class="header-anchor" href="#objective-2">#</a> Objective</h3>
<p>Prophylactic protocol for Covid-19, and recommendations for treatment of disease, especially in the early stages</p>
<h3 id="system-2"><a class="header-anchor" href="#system-2">#</a> System</h3>
<p>Naturopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-2"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-2">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes, recommended to be used alongside, if allopathic protocol is being followed</p>
<h3 id="status-of-authorisation-2"><a class="header-anchor" href="#status-of-authorisation-2">#</a> Status of authorisation:</h3>
<p>The Acharya is the disciple and grandson of the pioneer of naturopathy in India, Acharya Lakshmana Sharma, and uses this prescribed protocol to treat symptomatic Covid-19, and for post-Covid syndrome and recovery at the treatment centres of the pioneering international institute of natural hygiene, International Institute of Mahayoga And Natural Hygiene (IMANAH).</p>
<h3 id="protocol-and-treatment-approach-2"><a class="header-anchor" href="#protocol-and-treatment-approach-2">#</a> Protocol and treatment approach:</h3>
<p><strong>Prophylaxing protocol</strong>:
The protocol recommends a routine maintenance alkalizing or anti-inflammatory diet of a mono-fruit breakfast wth seasonal fruits, lunch of fresh raw / uncooked salads, and early dinner at or before sundown, consisting of whole grain rice or millets with a generous serving of lightly cooked vegetables. It is possible also to have the lightly cooked grain meal at lunch time and make an early dinner of fresh, raw salads.</p>
<p>The physician recommends daily sunbathing and sungazing, wearing minimal or light attire, in relatively cool sunlight, for as long as it takes for the body to heat up and perspire.</p>
<p>It is also important to incorporate 15 minutes or running and a further routine of Yoga into the daily schedule, even when mild symptoms are experienced, if the body is not tired by the exercise.</p>
<p>Pranayama- Anuloma Viloma, Bhastrika- and meditation are essential too.</p>
<p><strong>Mitigation of active infection</strong>:
Active infections can be mitigated through water / citrus juice / coconut water fasting and sunbathing for as long as possible in comfortable sunlight for 2-3 days.</p>
<h3 id="typical-duration-of-treatment-2"><a class="header-anchor" href="#typical-duration-of-treatment-2">#</a> Typical duration of treatment:</h3>
<p>1-2 weeks</p>
<h3 id="outcome-2"><a class="header-anchor" href="#outcome-2">#</a> Outcome:</h3>
<p>A reported zero fatality rate and very good prognosis</p>
<h3 id="significant-side-effects-2"><a class="header-anchor" href="#significant-side-effects-2">#</a> Significant side effects:</h3>
<p>Much progress in overall health</p>
<h3 id="recommended-quantity-for-stocking-2"><a class="header-anchor" href="#recommended-quantity-for-stocking-2">#</a> Recommended quantity for stocking:</h3>
<p>No medicines to be stocked, but need to invest in organic fruits and vegetables in large quantities for a better diet</p>
<h3 id="price-2"><a class="header-anchor" href="#price-2">#</a> Price:</h3>
<p>No additional expenses, other than buying organic</p>
<h3 id="suggested-suppliers-2"><a class="header-anchor" href="#suggested-suppliers-2">#</a> Suggested suppliers:</h3>
<p>Fruits and vegetables to be purchased from local groceries selling organic and fresh produce</p>
<h3 id="further-references-2"><a class="header-anchor" href="#further-references-2">#</a> Further references:</h3>
<p><a href="https://www.youtube.com/watch?v=N-Ztwd2i-Io" target="_blank" rel="noopener noreferrer">Introductory Session on Post Covid Recovery with Nature Cure |5 Sessions Workshop by Dr. Arun Sharma<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7194064/" target="_blank" rel="noopener noreferrer">Light as a potential treatment for pandemic coronavirus infections: A perspective; Chukuka Samuel Enwemeka et al.; Journal of Photochemistry and Photobiology; June, 2020<OutboundLink/></a></p>
<p><a href="https://www.youtube.com/watch?v=CD285r96I04" target="_blank" rel="noopener noreferrer">Nature Cure Dr. Arun Sharma's workshop Part 1 of 5<OutboundLink/></a>
<a href="https://www.youtube.com/watch?v=Yd1N0zetCJ4" target="_blank" rel="noopener noreferrer">Nature Cure Dr. Arun Sharma's workshop Part 2 of 5<OutboundLink/></a></p>
<p><a href="https://www.youtube.com/results?search_query=wellcure+nature+cure+arun+sharma" target="_blank" rel="noopener noreferrer">A list of Acharya Arun Sharma's talks uploaded on YouTube channel WellCure<OutboundLink/></a></p>
<h2 id="_3-dr-jacob-vadakkanchery-s-recommendations-for-prophylactic-and-mitigating-protocols-for-covid-19-and-treatment-of-post-covid-syndrome"><a class="header-anchor" href="#_3-dr-jacob-vadakkanchery-s-recommendations-for-prophylactic-and-mitigating-protocols-for-covid-19-and-treatment-of-post-covid-syndrome">#</a> 3. Dr. Jacob Vadakkanchery's recommendations for prophylactic and mitigating protocols for Covid-19, and treatment of post-Covid syndrome</h2>
<h3 id="objective-3"><a class="header-anchor" href="#objective-3">#</a> Objective</h3>
<p>Prophylactic protocol for Covid-19, and recommendations for treatment of disease, especially in the early stages</p>
<h3 id="system-3"><a class="header-anchor" href="#system-3">#</a> System</h3>
<p>Naturopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-3"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-3">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes, recommended to be used alongside, if allopathic protocol is being followed</p>
<h3 id="status-of-authorisation-3"><a class="header-anchor" href="#status-of-authorisation-3">#</a> Status of authorisation:</h3>
<p>The treatment is not approved by the Government, even though the naturopathic community guided by eminent naturopathic physician Jacob Vadakkanchery is demonstrably benefiting greatly from these Covid-19 prescriptions and dietary and lifestyle regimen.</p>
<h3 id="protocol-and-treatment-approach-3"><a class="header-anchor" href="#protocol-and-treatment-approach-3">#</a> Protocol and treatment approach:</h3>
<p>A breakfast of seasonal fruits is recommended, followed shortly thereafter by a simple millet or other lightly cooked, antiinflammatory breakfast, if necessary. Lunch could consist of a simple meal with organic raw rice and vegetables and a generous amount of uncooked salad. Dinner should preferably be very early in the evening, or before sundown, to permit at least 15-16 hours of fasting before the next meal. It is very important to retire early, between 9 - 10 PM.</p>
<p>The primary approach to treating early symptoms is <strong>to adopt a complete water fast for 3-4 days</strong>.</p>
<p><strong>Method of treatment of breathlessness</strong>:
In addition to the prone position, there are other methods of treating breathlessness. One of them is to use the Camphor-Ajwain-Lavang pouch for smelling to reduce breathlessness. With children, the pouch can be hung around the neck. Also drink hot water. Heat the chest with fomentation or a hot water bag or a hot salt pouch for men, and back for women. Compulsorily wash the head and place a wet cloth on the head, with the patient seated on a stool, when there is breathlessness. Also, immerse the feet in a bucket or tub of hot water, with the temperature of the water being as high as the patient can tolerate, and perform this treatment for about half an hour. In this physician's experience, breathlessness is not a particularly common symptom of Covid.</p>
<p>Completely avoid processed and artificial foods, while eating a wholesome, natural and seasonal diet.</p>
<p><strong>Completely avoid paracetamol for suppressing Covid symptoms.</strong></p>
<p>Drink a decoction of Chukku or Saunth or dried ginger, fresh ginger, pepper, crushed and boiled in water, for a traditional cure.</p>
<p>Drink plenty of water, sipping it a little by little, throughout the day, and urinate.</p>
<p>At start of symptoms, take enema to cleanse the bowel.</p>
<p>Take complete rest, after covering the body in a bedsheet.</p>
<p>Fever higher than 106 degree Celsius indicates a malfunctioning hypothalamus-regulated mechanism to control temperature and can be dangerous. The body should be cooled with ice or wet compresses to reduce core temperature, or usnig a very cold enema.</p>
<p>After fever subsides, drink citrus juices for a few more days. Afterwards, begin the road to normalcy through raw diet, especially of fruits as appetite returns, and slowly reintroduce cooked food.</p>
<p>If any meals are had during the course of treatment, have 1-2 flakes of raw garlic dipped in Inthuppu or rock salt or potassium chloride.</p>
<p>Very important not to fear Covid, and feel stressed.&quot;</p>
<h3 id="typical-duration-of-treatment-3"><a class="header-anchor" href="#typical-duration-of-treatment-3">#</a> Typical duration of treatment:</h3>
<p>Perhaps about 1-2 weeks, in most cases</p>
<h3 id="outcome-3"><a class="header-anchor" href="#outcome-3">#</a> Outcome:</h3>
<p>A reported zero fatality rate and good prognosis</p>
<h3 id="significant-side-effects-3"><a class="header-anchor" href="#significant-side-effects-3">#</a> Significant side effects:</h3>
<p>Overall betterment of whole body wellness, no significant adverse side effects likely. A large community of families in Kerala, following the physician's prescriptions for natural health, are able to live with good health during this pandemic.</p>
<h3 id="recommended-quantity-for-stocking-3"><a class="header-anchor" href="#recommended-quantity-for-stocking-3">#</a> Recommended quantity for stocking:</h3>
<p>No medicines to be stocked, but need to invest in organic fruits and vegetables in large quantities for a better diet</p>
<h3 id="price-3"><a class="header-anchor" href="#price-3">#</a> Price:</h3>
<p>No additional expenses, other than buying organic</p>
<h3 id="suggested-suppliers-3"><a class="header-anchor" href="#suggested-suppliers-3">#</a> Suggested suppliers:</h3>
<p>Fruits and vegetables to be purchased from local groceries selling organic and fresh produce</p>
<h3 id="further-references-3"><a class="header-anchor" href="#further-references-3">#</a> Further references:</h3>
<p>Learnt through personal acquaintance with physician and vernacular language videos.</p>
<h2 id="_4-dr-biswaroop-roy-chowdhury-s-dietary-protocol-allied-with-naturopathy-called-the-dip-disciplined-intelligent-protocol-diet"><a class="header-anchor" href="#_4-dr-biswaroop-roy-chowdhury-s-dietary-protocol-allied-with-naturopathy-called-the-dip-disciplined-intelligent-protocol-diet">#</a> 4. Dr. Biswaroop Roy Chowdhury's dietary protocol, allied with naturopathy, called the DIP (Disciplined Intelligent Protocol) diet</h2>
<h3 id="objective-4"><a class="header-anchor" href="#objective-4">#</a> Objective</h3>
<p>Treatment protocol for Covid-19</p>
<h3 id="system-4"><a class="header-anchor" href="#system-4">#</a> System</h3>
<p>Naturopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-4"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-4">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes, recommended to be used alongside, if allopathic protocol is being followed, even though this is reported to be less effective than the DIP diet al.ongwith a naturopathic treatment protocol</p>
<h3 id="status-of-authorisation-4"><a class="header-anchor" href="#status-of-authorisation-4">#</a> Status of authorisation:</h3>
<p>Authorised by the Central Government in India, the diet is based on published research. Dr. BRC is an Indian medical nutritionist certified by the Indo-Vietnam Medical Board.</p>
<h3 id="protocol-and-treatment-approach-4"><a class="header-anchor" href="#protocol-and-treatment-approach-4">#</a> Protocol and treatment approach:</h3>
<p>The DIP Diet Plan is as follows:</p>
<p><strong>Breakfast:
Eat only fruits till 12 noon. 3-4 types of seasonal fruits, like banana, grapes, papaya, orange etc.</strong> can be chosen.
Minimum quantity of fruits to be consumed =
[(Number of kilograms in body weight) X 10] in grams
For example, if body weight = W kg, then W X 10 grams of fruits should be consumed before 12 noon as breakfast.</p>
<p><strong>Lunch and Dinner</strong>:
Lunch and dinner should each consist of two plates.
<strong>Plate 1 should consist of 3-4 types of raw vegetables like cucumber, tomatoes, capsicum, cauliflower, carrot, spinach etc. The quantity consumed must be as many grams as is equal to 5 times body weight (expressed in kilograms)</strong>. For example, a person weighing 70 kg should consume 70 x 5 = 350 grams of raw vegetables on Plate 1, both for lunch and for dinner.
<strong>Plate 2</strong> can consist of a traditional wholly plant-based or wholly vegan meal, with negligible oil and salt.</p>
<p><strong>Plate 1 should be finished first before commencing Plate 2. One can eat as much as one likes from Plate 2.</strong>
Dinner should be finished by 7 PM.</p>
<p><strong>Snacking:
Between lunch and dinner, fruit juice, sprouts, dry fruits (only after soaking at least 4-5 hours in water), herbal tea, green leaves or coconut water can be consumed as snacks</strong> to ward off hunger. The quantity consumed must not exceed as many grams as kilograms in body weight. For example, a person weighing 70 kilograms should not consume more than 70 grams of such snacks.</p>
<p><strong>Completely avoid all animal protein and unnatural foods, including the following items:</strong>
Animal proteins like eggs, meat, fish etc.
Dairy products like milk, cream, tea, coffee, ghee, butter, paneer, ice cream, rusk etc.
Refined and packaged foods like refined flours and preparations containing them like cakes and biscuits, refined oils, fast foods like pizzas and burgers, cool drinks, refined salt like iodized table salt and refined sugars, and foods containing them
&quot;</p>
<h3 id="typical-duration-of-treatment-4"><a class="header-anchor" href="#typical-duration-of-treatment-4">#</a> Typical duration of treatment:</h3>
<p>A healthy recovery and maintenance diet for patients with diabetes mellitus</p>
<h3 id="outcome-4"><a class="header-anchor" href="#outcome-4">#</a> Outcome:</h3>
<p>According to Dr. BRC's research publications on the DIP Diet, after following the DIP Diet for 72 hours, it is reported that the following outcomes were observed among a group of 55 patients:</p>
<ul>
<li>57 % of type-1 diabetes patients eliminated insulin dependency and achieved a controlled blood glucose level*.</li>
<li>100 % of type-2 diabetes patients were able to regain a healthy blood sugar level without medication.</li>
<li>52 % of patients could free themselves of dependency on many kinds of medications, including those for B.P., cholesterol and acidity.</li>
<li>Patients also experienced an average weight loss of 1.14 kg.</li>
</ul>
<p>*Here, a controlled blood glucose level denoted a blood glucose range of &lt; or = 250 mg / dl without medication and / or insulin requirement, along with the prescribed diet. In the people who achieved such a healthier condition, the diet al.one balanced the blood glucose levels, leading to zero requirement of diabetes medication or insulin.</p>
<p>The study, &quot;&quot;Diabetes Reversal by Plant-Based Diet&quot;&quot;, cited in the references, conducted on 55 diabetes patients, interestingly, showed better efficacy of the diet with older patients with chronic type-2 diabetes. In follow-ups, those who maintained the diet and were still insulin-dependent were able to gradually reduce their dependency, and those who maintained the diet reported sustained benefits from the regimen.&quot;</p>
<h3 id="significant-side-effects-4"><a class="header-anchor" href="#significant-side-effects-4">#</a> Significant side effects:</h3>
<p>&quot;It has been observed that sometimes patients experience loose motion or diarrhoea while following the Three Step Flu Diet. If this happens more than 6-7 times, the patient should completely stop the fruits and salad in the DIP Diet, and consume only coconut water until the loose motion stops.</p>
<p>Patients with Chronic Kidney Disease are advised to adapt the diet to their requirements, as many fruits and vegetables contain relatively high amounts of potassium, oxalates etc. that may not be compatible with a renal diet.
&quot;</p>
<h3 id="recommended-quantity-for-stocking-4"><a class="header-anchor" href="#recommended-quantity-for-stocking-4">#</a> Recommended quantity for stocking:</h3>
<p>The diet uses everyday fruits and vegetables that need not be stocked.</p>
<h3 id="price-4"><a class="header-anchor" href="#price-4">#</a> Price:</h3>
<p>Everyday food items, moderately priced</p>
<h3 id="suggested-suppliers-4"><a class="header-anchor" href="#suggested-suppliers-4">#</a> Suggested suppliers:</h3>
<p>Fruits and vegetables for the diet are best sourced from local stores supplying organic food.</p>
<h3 id="further-references-4"><a class="header-anchor" href="#further-references-4">#</a> Further references:</h3>
<p><a href="https://dipdiet.in/" target="_blank" rel="noopener noreferrer">What is the DIP Diet?<OutboundLink/></a></p>
<p><a href="https://dipdiet.info/wp-content/uploads/2021/02/Diabetes-Reversal-by-Plant-Based-Diet_Dr.-Biswaroop.pdf" target="_blank" rel="noopener noreferrer">Diabetes Reversal by Plant-Based Diet; Journal of Metabolic Syndrome, 2017; Biswaroop Roy Chowdhury, Medical nutritionist, Indo-Vietnam Medical Board<OutboundLink/></a> (<a href="https://drive.google.com/file/d/1AYP0AOcTsRM_rbxIVfw5wwMyywq6hPYS/view" target="_blank" rel="noopener noreferrer">Alternate URL<OutboundLink/></a>)</p>
<p><a href="https://dipdiet.info/wp-content/uploads/2021/02/JETIR1905867_Reduction-in-drug-dosage_Dr.BiswaroopRoyChowdhury.pdf" target="_blank" rel="noopener noreferrer">Reduction in Drugs Dosage: An Insight from Three Days App Based Dietary Intervention; JETIR, 2019; Dr. Biswaroop Roy Chowdhury, Dynamic Memory Pvt. Ltd., Faridabad, India<OutboundLink/></a> (<a href="https://drive.google.com/file/d/1DqfWCwHVK8L7S4hSsp_a0XHVHyih60-G/view" target="_blank" rel="noopener noreferrer">Alternate URL<OutboundLink/></a>)</p>
<p>General public update their recoveries from Covid by the 3-step flu diet and the DIP diet on this Telegram channel: <a href="https://t.me/drbiswarooproychowdhury" target="_blank" rel="noopener noreferrer">Dr. Biswaroop Roy Chowdhury<OutboundLink/></a></p>
<p><a href="https://biswaroop.com/wp-content/uploads/2020/02/RECIPES-To-Cure-Lifestyle-Diseases1.pdf" target="_blank" rel="noopener noreferrer">RECIPES To Cure Lifestyle Diseases, by Neerja Roy Chowdhury<OutboundLink/></a></p>
<h2 id="_5-n-i-c-e-s-three-step-flu-diet"><a class="header-anchor" href="#_5-n-i-c-e-s-three-step-flu-diet">#</a> 5. N.I.C.E.'s Three Step Flu Diet:</h2>
<p>A reportedly highly effective &quot;&quot;N.I.C.E.&quot;&quot; (Network of Influenza Care Experts) protocol published and used by NISA (Natural Immunization Support Alliance) to treat Covid-19 in its treatment camps, especially the Government of Maharashtra Covid Centre</p>
<p><strong>N.I.C.E. helpline number: +91 8587059169&quot;</strong></p>
<h3 id="objective-5"><a class="header-anchor" href="#objective-5">#</a> Objective</h3>
<p>&quot;The mitigation of mild or acute Covid-19 symptoms.</p>
<p>In the book, N.I.C.E. way to Cure COVID-19, Dr. Chowdhury states that in the Covid treatment center managaged by his team, of some 5000+ patients that visited the center, about a 1000 had come there with a Covid-positive result, and the remaining were symptomatic but had not tested. There appeared to be no differential symptomatic markers between the two groups, and therefore Covid-19 can only be characterized as an Influenza-Like Illness, to which 40 - 60 % of the general population are shown to have some 'background' or cellular immunity, according to a study published in Cell, May, 2020.&quot;</p>
<h3 id="system-5"><a class="header-anchor" href="#system-5">#</a> System</h3>
<p>Naturopathy, Ayurveda and Integrative medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-5"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-5">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes, recommended to be used alongside, if allopathic protocol is being followed</p>
<h3 id="status-of-authorisation-5"><a class="header-anchor" href="#status-of-authorisation-5">#</a> Status of authorisation:</h3>
<p>NISA is an alliance of several eminent holistic physcians, including Dr. Biswaroop Roy Chowdhury. They conduct a government-approved Covid camp in Maharashtra, where they have stated that over 50,000 Covid patients, including many with acute symptoms, have all been treated successfully and with zero fatalities in 1-2 weeks. Their very public assertions have not yet been significantly contradicted.</p>
<h3 id="protocol-and-treatment-approach-5"><a class="header-anchor" href="#protocol-and-treatment-approach-5">#</a> Protocol and treatment approach:</h3>
<p><strong>N.I.C.E. helpline number: +91 8587059169</strong></p>
<p><strong>The 3 Steps of the N.I.C.E. Protocol for Covid-19:</strong></p>
<p><strong>Step One: Promoting mucosal immunity with prophylactic vitamin C via diet</strong>
The body has three kinds of immunity to external pathogens- mucosal immunity, background or cellular immunity and herd immunity.</p>
<p>According to a study published in Cell, <strong>40 - 60 % of the populace already had cellular background immunity to Covid-19</strong> even from the time that the novel coronavirus emerged, due to previous infections of this family of viruses. If 60 - 70 % of a population already has a degree of immunity to the virus, then the population could be said to possess a measure of <strong>herd immunity</strong> to the novel coronavirus and its variants.</p>
<p>A third type of external immunity is from the mucus, or Chipchipa Padaarth, as it is known in Ayurveda, which lines the internal walls of the body. <strong>Mucosal immunity is first barrier that a virus encounters upon entering the body.</strong> If one strengthens the mucosal immunity, the virus cannot penetrate and harm the body. <strong>This can be done by consuming 0.2 g vitamin C daily, and by minimizing or avoiding all animal protein (dairy, eggs, fish and meat) and pharmaceutical medication.</strong> The vitamin C should not be ingested in tablet form but through fruits and vegetables, because any tablet- which is ingested directly into the stomach- can impair mucosal immunity.</p>
<p><strong>The following food items are each sufficient to provide the necessary daily requirement of 0.2 g of vitamin C:</strong></p>
<ul>
<li>2 mangoes,</li>
<li>2 sweet limes or oranges</li>
<li>1 guava</li>
<li>four tomatoes</li>
<li>a handful of raw peas</li>
<li>300 - 400 g of different types of fruits</li>
</ul>
<p><strong>Step Two: Three-day curative diet for Influenza-Like Illnesses (ILI)</strong>
General protocol to be followed throughout the days of the treatment, 7-15 days, focuses on strengthening the body's own immunity, and especially the first tier of mucosal immunity:</p>
<p><strong>Day 1 (Liquid diet)- Consume citrus fruit juice and coconut water in the quantity specified below:</strong>
<strong>Body weight (in kg) / 10 glasses of fresh citrus fruit juice + [Body weight (in kg)] / 10 glasses of fresh tender coconut water</strong></p>
<p>Don't consume packed juice, but take fresh citrus fruit without sieving. Take citrus juice and coconut water alternately every hour, sip by sip, spending at least 15 minutes on each glass. This helps to keep temperature under control. The vitamin C in citrus fruit juice supports immunity and helps to eliminate the virus. Tender coconut water helps in hydration and is the best mineral water in the world, made by Nature.</p>
<p><strong>Day 2 (Fluid diet)- Consume the following foods on this day:</strong>
<strong>[Body weight (in kg)] / 20 glasses of fresh citrus fruit juice + [Body weight (in kg)] / 20 glasses of fresh tender coconut water + [Body weight (in kg)] X 5 grams of cucumber and tomatoes</strong></p>
<p>For example, if the body weight is 60 kg, then (60 / 20 =) 3 glasses of citrus juice and 3 glasses of fresh tender coconut water, as well as (60 X 5 =) 300 grams of cucumber and tomatoes should be consumed on Day 2. Patients may be surprised to see that by the end of Day 2, they start feeling better and their temperature is under control. They would have regained some strength.</p>
<p><strong>Day 3 (Solid diet)-</strong></p>
<ul>
<li>
<p><strong>For Breakfast, consume</strong>
<strong>[Body weight (in kg)] / 30 glasses of fresh citrus fruit juice + [Body weight (in kg)] / 30 glasses of fresh tender coconut water</strong>
For example, if the body weight is 60 kg, then (60 / 3 =) 2 glasses of citrus fruit juice and 2 glasses of fresh tender coconut water should be consumed on Day 3.</p>
</li>
<li>
<p><strong>For Lunch, consume</strong>
<strong>[Body weight (in kg)] X 5 grams of cucumber and tomatoes</strong>
For example, if the body weight is 60 kg, then (60 X 5 =) 300 grams of cucumber and tomatoes should be consumed for lunch on Day 3.</p>
</li>
<li>
<p><strong>For Dinner, if the patient has recovered and is feeling fit, they can have normal home-cooked meals prepared according to the dietary principles of naturopathy or the DIP diet, described earlier in this sheet.</strong> With this simple diet, most patients would be back to work on the fourth day after appearance of symptoms.</p>
</li>
</ul>
<p><strong>Step Three: Home management of dyspnoea and Emergency management of severe symptoms</strong>
If the infection migrates from the upper to the lower respiratory tract, more severe symptoms such as breathlessness or dyspnoea would begin to manifest, and the oxygen saturation levels would begin to drop to 90 % or below. In such situations, the patient must be educated to not seek artificial ventilation in hospitals, which are known to be associated with a high mortality, but instead create a ventilator at home with <strong>techniques like prone ventilation and other methods. With the first sign of flu, contact the N.I.C.E. team at <a href="www.biswaroop.com/nice">www.biswaroop.com/nice</a> or +91-8587059169 for free support, guidance and treatment.</strong></p>
<p>SARS-CoV-2 is an RNA human respiratory influenza virus that is quickly mutating, for which reason it is not easy to develop drug treatments to mitigate the virus or vaccine preventatives. (A University College of London, May, 2020, study discovered 198 mutations of the virus in 7500 people.) The disease is dangerous only when the lower respiratory tract is affected, leading to pneumonia, ARDS (Acute Respiratory Distress Syndrome) or even cardiac injury. <strong>This occurs when medications like antipyretic, antibiotic, antimalarial, anti-HIV, or any other medication directly or indirectly lowers the body's immunity. Rather than the novel coronavirus being the culprit, the real contributor to the death toll is the treatment method prescribed by the WHO, with experimental drugs, and the ICMR's death reporting guidelines. Several countries, like Vietnam, that did not follow these protocols suffered negligible deaths and their doctors are simply asked the patients to take complete rest.</strong> About 10 percent of influenza is attributed to the family of four types of coronaviruses (229E, NL63, OC43, HKU1) known to man for long, and patients usually recover within 3-7 days. SARS-CoV-2 too belongs to the family of similar coronaviruses, to which the human body often has background immunity.</p>
<p><strong>Yoga and Praanayaama improve respiratory health and overall immunity, but masks achieve the opposite outcome. Masking for prolonged durations can precipitate Covid-like symptoms</strong>, like hypoxia / low oxygen saturation, increase in pulse rate and slightly elevated body temperature. Interestingly, masks and alcohol-based hand sanitizers were invented by the same individual Dr. Joseph Lister, and both these products reduce the body's natural immunity.</p>
<p><strong>Emergency Management of Covid symptoms, most important:</strong></p>
<ul>
<li>
<p><strong>Breathing management</strong>: If the oxygen saturation is greater than or equal to 88 %, this is manageable. Oxygen therapy is shown in research not to increase a person's life expectancy, and no oxygen is better than some oxygen. The mechanical ventilator, which is the second line of intervention for hypoxia in hospitals, is commonly associated with adverse side effects like Ventilator-Associated Lung Inury (VALI), oxygen toxicity, neurological damage, Ventilator-Associated Pneumonia (VAP). <strong>A handheld or table fan held in front of the patient's nose for 5 minutes usually yields the same benefits as oxygen therapy, and without the toxicity created by inhalation of pure oxygen, especially in higher concentrations. In the minority of cases that the first hypoxia management method of using a handheld fan fails, use the Prone Ventilation method, where the patient is made to lie in a prone position (face down), with the support of pillows under the chest / abdominal-pelvic region for comfort, as required.</strong></p>
</li>
<li>
<p><strong>Cough management: If there is uncontrolled cough, then immediately along with the Three-day Flu Diet, start turmeric therapy. Consume a small piece (0.5 g) of fresh, raw turmeric 3 times a day, before breakfast, lunch and dinner. If there is no relief, double the dose of raw turmeric, i.e., instead of 3 times a day, take it 6 times a day.</strong> The cough will subside in 2-3 days. Motivate the patient not to lose heart, and the cough will subside soon.</p>
</li>
<li>
<p><strong>Fever management</strong>: If fever is less than or equal to 102 deg F, it is acceptable. <strong>If fever crosses 102 deg F, manage the temperature with cold compresses and cold air for 15 minutes. If the patient starts shivering, stop the treatment process. Do not panic if fever reaches 103-104 deg F, and do not use antipyretic medication, which have no proven efficacy or evidence of preventing seizures.</strong> Even if the temperature is very high, do not panic because the body has its own mechanisms fo homeostasis and will not let the temperature rise unduly high. In Dr. BRC's experience of 12 years of treating ILI, this has not happened even once. Continue to follow the Three-day Flu Diet and provide cold compress and cold air.</p>
</li>
<li>
<p><strong>Vomiting management: If there is vomiting, try to make the patient comfortable and stop his eating and drinking for 4 hours. If need be, ordinary water and coconut water can be given.</strong> Vomiting is one of the healing symptoms of the body and usually need not be cause for concern.</p>
</li>
<li>
<p><strong>Management of nausea and extreme weakness: Nausea and weakness are part of the body's healing process and need not cause undue concern. Take a small piece of fresh ginger 3-4 times a day, which gives strength. If the patient refuses to take the pungent ginger in raw form, crush the ginger, boil it in water, and add lemon juice and honey. This ginger decoction should be sipped slowly and gives a little energy and strength.</strong> When the fever subsides, these other symptoms will subside as well.</p>
</li>
<li>
<p><strong>Diarrhoea or loose motion management</strong>: Sometimes patients experience loose motions while on the Three-day Flu Diet or the DIP Diet described earlier. <strong>If the loose motion occurs more than 6-7 times, then the citrus fruit juice in the Three-day Flu Diet should be stopped (or the fruits and salads, in the DIP Diet), and only tender coconut water should be consumed until the loose motions completely stop.</strong></p>
</li>
</ul>
<p><strong>Recommended Treatment Regimen Schedule in the second wave:</strong></p>
<p>6:00 AM: Gargle with 3/4 teaspoonful of salt and 1/2 teaspoonful of turmeric in 1 glass of hot water. <strong>Start sunbathing (<a href="https://healthyeating.sfgate.com/can-vitamin-d-through-light-shirt-10178.html" target="_blank" rel="noopener noreferrer">with minimal / light, preferably white-coloured attire<OutboundLink/></a>) and sungazing (no more than 20 seconds at a stretch).</strong></p>
<p>6:15 AM: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3604064/" target="_blank" rel="noopener noreferrer">Sniff one pinch each of dried ginger<OutboundLink/></a> (Chukku in Tamil, Saunth in Hindi) alternately in each nostril.</p>
<p>6:25 AM: Anuloma Viloma Pranayama for 5 minutes</p>
<p>6:30 AM: <strong>Kadha or Kashaaya (Ayurvedic bitter concoction): Boil 0.5 - 1 teaspoonful of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5388087/" target="_blank" rel="noopener noreferrer">turmeric<OutboundLink/></a> and 2 pinches of black pepper in a glass of water for 5 minutes. Cover and let the decoction cool. Add jaggery and 1/2 teaspoonful of <a href="https://www.imedpub.com/articles/the-versatility-of-cow-ghee-an-ayurvedaperspective.pdf" target="_blank" rel="noopener noreferrer">ghee<OutboundLink/></a> or oil, and sip it.</strong></p>
<p><strong>Note on Turmeric tea</strong>: Turmeric contains about 3-6 % Curcumin. <strong>1 metric teaspoon of turmeric <a href="https://www.aqua-calc.com/calculate/food-volume-to-weight" target="_blank" rel="noopener noreferrer">weighs about 3.2 g<OutboundLink/></a>, and therefore contains at least about 100 mg of Curcumin.</strong> Various researchers have found <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7361299/pdf/CED-9999-na.pdf" target="_blank" rel="noopener noreferrer">turmeric derivatives useful in the management of influenza virus infections, and doses of 6-7 g of turmeric daily are found to be well tolerated<OutboundLink/></a>. In fact, 500 mg of Curcumin (purified extract, containing about 95 % of Curcuminoids) twice a day is recommended by at least 3 highly effective allopathic protocols (namely, The Zelenko protocol, FLCCC's I-MASK+ and the Ivermectin+Doxycycline+Cyproheptadine protocol of Aguirre-Chang, Gustavo et al.).  This protocol prescribes 1-2 teaspoonsful of turmeric, which would contain about 100-200 mg of Curcumin.</p>
<p><a href="https://www.consumerlab.com/reviews/turmeric-curcumin-supplements-spice-review/turmeric/" target="_blank" rel="noopener noreferrer">Turmeric and Curcumin are not well absorbed on their own and it is generally best to take turmeric / Curcumin with food containing some fat in order to increase absorption.<OutboundLink/></a> It is best to combine turmeric / Curcumin with Black pepper, which contains the compound Piperine that has been shown to increase Curcumin absorption by 2,000%. <strong>Thus, this decoction, containing both pepper and ghee is designed to maximize absorption of the Curcumin.</strong></p>
<p><a href="https://www.healthline.com/nutrition/turmeric-dosage#dosage" target="_blank" rel="noopener noreferrer">The World Health Organization (WHO) has determined 1.4 mg per pound (0–3 mg/kg) of body weight to be an acceptable daily intake of Curcumin<OutboundLink/></a>, which would be no more than about 200 mg for an individual weighing about 60 kg.</p>
<p>7:30 AM: <a href="https://www.medicalnewstoday.com/articles/318394" target="_blank" rel="noopener noreferrer">Fresh tender coconut water<OutboundLink/></a></p>
<p>8:00 AM: <a href="https://www.researchgate.net/publication/326127150_Ficus_religiosa_A_wholesome_medicinal_tree" target="_blank" rel="noopener noreferrer">Kadha of peepal leaves<OutboundLink/></a>, only for patients with breathing difficulty</p>
<p>8:30 AM: <a href="https://www.healthline.com/nutrition/green-juice-benefits#downsides" target="_blank" rel="noopener noreferrer">Green juice<OutboundLink/></a>, with cucumber or Lauki (bottlegourd) or ash gourd; <strong>can stop sunbathing and sungazing which were begun at 6:00 AM.</strong></p>
<p>9:30 AM: <strong>Days 1 - 3</strong>: Kadha or Kashaaya (Ayurvedic bitter concoction): 3-4 leaves or 4-inch stem of Giloy, and 15-20 Tulasi leaves to be boiled in a suitable small quantity of water</p>
<p>10:30 AM: <strong>Days 1 - 3</strong>: Coconut water</p>
<p>11:30 AM: <strong>Days 1 - 3</strong>: Fruit juice, of any seasonal fruits; <strong>Subsequent days of the treatment</strong>: Any seasonal fresh fruits to be eaten, 10 g / kg of body weight, as prescribed in the dietary regimen of Dr. Bishwaroop Roy Choudhary</p>
<p>11:45 AM: Keep 1/4 teaspoonful of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3604064/" target="_blank" rel="noopener noreferrer">fresh or dry ginger (Chukku or Saunth) in the mouth<OutboundLink/></a>, let it dissolve there, and then swallow.</p>
<p>1:00 PM: <strong>Days 1 - 3: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8340568/" target="_blank" rel="noopener noreferrer">Kadha or Kashaaya<OutboundLink/></a> (Ayurvedic bitter concoction): Boil 0.5 - 1 teaspoonful of turmeric and 2 pinches of black pepper in a glass of water for 5 minutes.</strong> Cover and let the decoction cool. Add jaggery and 1/2 teaspoonful of ghee or oil, and sip it.</p>
<p>2:00 PM: <strong>Days 1 - 3</strong>: Coconut water</p>
<p>3:00 PM: <strong>Days 1 - 3</strong>: Fruit juice, of any seasonal fruits; <strong>Subsequent days of the treatment</strong>: Fresh raw salad to be eaten, 5 g / kg of body weight, followed by millet Khichdi, as prescribed in the dietary regimen of Dr. Bishwaroop Roy Choudhary (or the regimen prescribed by India's Millet Man and integrative physician Dr. Khadar Vali).</p>
<p>4:00 PM: <strong>Days 1 - 3</strong>: Kadha or Kashaaya (Ayurvedic bitter concoction): 3-4 leaves or 4-inch stem of Giloy, and 15-20 Tulasi leaves to be boiled in a suitable small quantity of water; <strong>Subsequent days of the treatment</strong>: Fresh raw salad to be eaten, 5 g / kg of body weight, followed by millet Khichdi, as prescribed in the dietary regimen of Dr. Bishwaroop Roy Choudhary (or the regimen prescribed by India's Millet Man and integrative physician Dr. Khadar Vali).</p>
<p>4:30 PM: <strong>Massage with Madaar (Aak or Arka, Erukku in Tamil, <a href="https://www.healthbenefitstimes.com/crown-flower-plant/" target="_blank" rel="noopener noreferrer">Calotropis gigantea<OutboundLink/></a> / Giant milkweed / Crown flower) leaves</strong>: Pieces of Madaar / Aak / Arka / Erukku (Calotropis Gigantea) leaves dipped in <a href="https://www.netmeds.com/health-library/post/medicines-and-mother-nature-can-help-combat-asthma" target="_blank" rel="noopener noreferrer">mustard oil<OutboundLink/></a> should be heated till they become lukewarm and to be used for a light massage on chest, back and feet. The treatment should be continued until the cough symptom subsides.</p>
<p>5:00 PM: Coconut water</p>
<p>6:00 PM: <strong>Days 1 - 3</strong>: Fruit juice, of any seasonal fruits; <strong>Subsequent days of the treatment</strong>: Fresh raw salad to be eaten, 5 g / kg of body weight, followed by healthy millet <a href="https://food.ndtv.com/recipe-khameeri-roti-64" target="_blank" rel="noopener noreferrer">Khameer<OutboundLink/></a> (leavened dough / sourdough, without refined sugar or white flour) or <a href="https://www.wholesometales.com/millet-ambali-fermented-daliya-full-recipe/" target="_blank" rel="noopener noreferrer">Khichdi<OutboundLink/></a> as prescribed in the dietary regimen of Dr. Bishwaroop Roy Choudhary</p>
<p>7:00 PM: Adusa juice: 3-4 tender leaves of <a href="https://www.daburchyawanprash.com/immunity-boosting-foods/vasa-ayurvedic-herb-for-boosting-immunity.aspx" target="_blank" rel="noopener noreferrer">Adusa (Justicia adhatoda / Adhatoda vasica / Malabar nut)<OutboundLink/></a>, a small cut piece of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8013177/" target="_blank" rel="noopener noreferrer">ginger<OutboundLink/></a> (not more than 1 cm in length), and 5 leaves of <a href="https://www.longdom.org/open-access/tulsi-the-queen-of-medicinal-herbs-60106.html" target="_blank" rel="noopener noreferrer">Tulasi<OutboundLink/></a> manually crushed and juice mixed with 3 drops of honey</p>
<p>8:00 PM: <a href="https://www.researchgate.net/publication/326127150_Ficus_religiosa_A_wholesome_medicinal_tree" target="_blank" rel="noopener noreferrer">Kadha or Kashaaya of Peepal leaves<OutboundLink/></a>, only for patients with breathing difficulty: Cut pieces of Peepal leaves boiled in about a glass of water until the water is reduced to about half a glass. Filter the water and drink. <strong>For severe breathing problems, use Peepal bark instead of leaves</strong> and repeat every hour.</p>
<p>7 - 9 PM: Repeat the <strong>turmeric + salt water gargling</strong> performed at dawn. (Gargle with 3/4 teaspoonful of salt and 1/2 teaspoonful of turmeric in 1 glass of hot water.) The gargling is <strong>followed by steam inhalation</strong>, which is <strong>followed by <a href="https://www.thehealthsite.com/diseases-conditions/insomnia/tip-for-good-sleep-try-sipping-banana-peel-tea-before-bedtime-x0218-556226/" target="_blank" rel="noopener noreferrer">banana Kashaaya<OutboundLink/></a></strong>, which is <strong>prepared by boiling banana in water along with the peel</strong>. Sip the banana Kashaaya and go to sleep.</p>
<p><strong>General precautions:</strong></p>
<ol>
<li>Three-day Protocol is be used only for treatment when fever and other acute symptoms are there. For prevention and after-treatment, another protocol is to be used.</li>
<li>If acute symptoms persist we can extend 3rd day protocol for a few more days until fever subsides.</li>
<li>Keep yourself in a well-ventilated place where there are many trees and plants and fresh, free-flowing air is available.</li>
<li>You can use a toy fan or table fan so that air in front of your mouth is quickly changing.</li>
<li>Always use vegan whole food. Completely avoid nonvegetarian food.</li>
<li>Don’t lower fever by using antipyretic drugs. If fever crosses 104 degrees Celsius in adult and 102 deg C in kids,it can be lowered to a safe limit by sponging.</li>
<li>Don’t take symptom-suppressive drugs.</li>
<li>Don’t take antibiotics or steroids.</li>
<li>In case of breathing difficulty, adopt the Prone- Ventilation Method, or lying face down, for relief.</li>
<li>This Protocol is tentative for guidance. You can modify it to your convenience, but keeping its basic principles intact.</li>
<li><strong>Keep a watch on your CBC (Complete Blood Count) so that secondary bacterial infection and fall in the platelets count is timely detected.</strong></li>
<li><strong>If there are unexplained symptoms or the breathing difficulty is too severe, consult your family physician and discuss with him / her.</strong></li>
</ol>
<h3 id="typical-duration-of-treatment-5"><a class="header-anchor" href="#typical-duration-of-treatment-5">#</a> Typical duration of treatment:</h3>
<p>1-2 weeks, or less</p>
<h3 id="outcome-5"><a class="header-anchor" href="#outcome-5">#</a> Outcome:</h3>
<p>After 48 hours of following the Three Step Flu Diet, the following outcomes were observed:</p>
<ul>
<li>60 % of Covid-19 patients could reverse the disease and tested negative.</li>
</ul>
<p>After 72 hours of the Three Step Flu Diet on patients, including those who were severely ill with pneumonia, the following outcomes were observed:</p>
<ul>
<li>100 % of the patients were relieved of all the symptoms.</li>
<li>75 % of the patients tested negative for Covid-19.</li>
</ul>
<p>The Director General of Poilice of Indore, Sri Hari Narayan Chari Mishra, found similar outcomes with adopting the Three Step Flu Diet with the policemen of Indore, being able to reverse Covid-19 in 3-5 days. His personal coverage of the outcome in the leading newspaper of Indore, the Dainik Bhaskar, is testimony of his work.&quot;</p>
<h3 id="significant-side-effects-5"><a class="header-anchor" href="#significant-side-effects-5">#</a> Significant side effects:</h3>
<p>It has been observed that sometimes patients experience loose motion or diarrhoea while following the Three Step Flu Diet. If this happens more than 6-7 times, the patient should completely stop the citrus fruit juice in the Three Step Flu Diet, and consume only coconut water until the loose motion stops.</p>
<h3 id="recommended-quantity-for-stocking-5"><a class="header-anchor" href="#recommended-quantity-for-stocking-5">#</a> Recommended quantity for stocking:</h3>
<p>The Ayurvedic medicines that may be used in substitute for the natural herbal decoctions recommended might be procured at nearby trusted Ayurvedic dispensaries.</p>
<h3 id="price-5"><a class="header-anchor" href="#price-5">#</a> Price:</h3>
<p>Most ingredients are likely to be stocked in every kitchen, or  procurable at grocery stores. Ayurvedic decoctions may be purchased at local Ayurvedic dispensaries and are moderately priced.</p>
<h3 id="suggested-suppliers-5"><a class="header-anchor" href="#suggested-suppliers-5">#</a> Suggested suppliers:</h3>
<p>The protocol mostly uses everyday household ingredients, and fruits and vegetables are best sourced from local organic stores. The herbs used may either have to be collected from surrounding Nature, or consumed as Ayurvedic concoctions available at nearby Ayurvedic dispensaries.</p>
<p><a href="https://www.consumerlab.com/reviews/turmeric-curcumin-supplements-spice-review/turmeric/#" target="_blank" rel="noopener noreferrer">Turmeric and Curcumin Supplements and Spices Review<OutboundLink/></a></p>
<h3 id="further-references-5"><a class="header-anchor" href="#further-references-5">#</a> Further references:</h3>
<p><a href="http://www.biswaroop.com/nice" target="_blank" rel="noopener noreferrer">N.I.C.E. helpline number: +91 8587059169<OutboundLink/></a></p>
<p><a href="http://nisa.org.in/treatment-protocol-for-flu-fever-corona/" target="_blank" rel="noopener noreferrer">The N.I.C.E. treatment protocol for influenza, fever and coronavirus can be downloaded at this URL<OutboundLink/></a></p>
<p><a href="https://books.google.co.in/books/about/N_I_C_E_way_to_Cure_COVID_19.html?id=VljzDwAAQBAJ&amp;redir_esc=y" target="_blank" rel="noopener noreferrer">N.I.C.E. way to Cure COVID-19, by Biswaroop Roy Chowdhury, available also in e-book format<OutboundLink/></a></p>
<p><a href="https://biswaroop.com/nice_bk_refs/" target="_blank" rel="noopener noreferrer">N.I.C.E. book references online<OutboundLink/></a></p>
<p><a href="https://blogs.cdc.gov/niosh-science-blog/2020/06/10/ppe-burden/" target="_blank" rel="noopener noreferrer">The Physiological Burden of Prolonged PPE Use on Healthcare Workers during Long Shifts- CDC, June 10, 2020<OutboundLink/></a></p>
<p><a href="https://biswaroop.com/wp-content/uploads/2020/08/Disposable-surgical-face-masks-for-preventing-surg.pdf" target="_blank" rel="noopener noreferrer">Disposable surgical face masks for preventing surgical wound infection in clean surgery  Cochrane Database Syst Rev. 2012;1(CD002929)<OutboundLink/></a></p>
<p><a href="https://www.nature.com/articles/s41598-018-32008-x" target="_blank" rel="noopener noreferrer">Hypercapnia Alters Expression of Immune Response, Nucleosome Assembly and Lipid Metabolism Genes in Differentiated Human Bronchial Epithelial Cells Scientific Reports volume8, Article number: 13508 (2018)<OutboundLink/></a></p>
<p><a href="https://academic.oup.com/annweh/article/56/1/102/166254" target="_blank" rel="noopener noreferrer">Facemask impact on human thermoregulation – The Annals of Occupational Hygiene- Jan 2020<OutboundLink/></a></p>
<p>Put on ventilator, 9 in 10 Covid-19 patients die; Live Science, April 23, 2020</p>
<p><a href="https://www.researchgate.net/publication/46147909_Effect_of_palliative_oxygen_versus_room_air_in_relief_of_breathlessness_in_patients_with_refractory_dyspnoea_A_double-blind_randomised_controlled_trial" target="_blank" rel="noopener noreferrer">Effect of palliative oxygen versus medical (room) air in relieving breathlessness in patients with refractory dyspnoea: A double-blinded randomized control trial; Cochrane Systematic Review; Nov 27, 2019<OutboundLink/></a></p>
<p><a href="https://erj.ersjournals.com/content/50/2/1701383" target="_blank" rel="noopener noreferrer">Relieving breathlessness with hand-held fan; European Respiratory Journal 2017 50: 1701383; DOI:10.1183/13993003.01383-2017<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/31773728/" target="_blank" rel="noopener noreferrer">Higher versus lower fraction of inspired oxygen or targets of arterial oxygenation for adults admitted to the intensive care unit; Cochrane Systematic Review; Nov 27, 2019<OutboundLink/></a></p>
<p><a href="https://www.biswaroop.com/wp-content/uploads/2020/04/coronabook_summary_book_-220420.pdf" target="_blank" rel="noopener noreferrer">CORONA- The scandal of the millennium: Evidence base of the diagnosis of Corona Virus &amp; the treatment of Covid-19<OutboundLink/></a></p>
<p><a href="https://www.sciencedirect.com/science/article/pii/S0092867420306103?via%3Dihub" target="_blank" rel="noopener noreferrer">Targets of T Cell Responses to SARS-CoV-2 Coronavirus in Humans with COVID-19 Disease and Unexposed Individuals; Alba Grifoni, Daniela Weiskopf; Cell<OutboundLink/></a></p>
<p>General public update their recoveries from Covid by the 3-step flu diet and the DIP diet on this Telegram channel: <a href="https://t.me/drbiswarooproychowdhury" target="_blank" rel="noopener noreferrer">Dr. Biswaroop Roy Chowdhury<OutboundLink/></a></p>
<p><a href="https://biswaroop.com/wp-content/uploads/2020/02/RECIPES-To-Cure-Lifestyle-Diseases1.pdf" target="_blank" rel="noopener noreferrer">RECIPES To Cure Lifestyle Diseases, by Neerja Roy Chowdhury<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7194064/" target="_blank" rel="noopener noreferrer">Light as a potential treatment for pandemic coronavirus infections: A perspective; Chukuka Samuel Enwemeka et al.; Journal of Photochemistry and Photobiology; June, 2020<OutboundLink/></a></p>
<p><a href="https://www.thesun.co.uk/news/11660413/coronavirus-scotland-treatment-salt-water/" target="_blank" rel="noopener noreferrer">The Sun: Gargling salt water could kill off coronavirus, say Edinburgh University medics; Katy Pagan; May, 2020<OutboundLink/></a></p>
<p><a href="https://timesofindia.indiatimes.com/city/lucknow/turmeric-neem-effective-against-coronavirus-says-kgmu-study/articleshow/76165100.cms" target="_blank" rel="noopener noreferrer">ToI: Turmeric, neem effective against coronavirus, says KGMU study; Yusra Husain; July, 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7528968/" target="_blank" rel="noopener noreferrer">Do saline water gargling and nasal irrigation confer protection against COVID-19?; Prashant Panta; Elsevier Public Health Emergency Covid-19 Initiative; Mar-Apr, 2021<OutboundLink/></a></p>
<p>In this early study, the direct interaction between certain Ayurvedic herbal compounds like Ashwagandha, black pepper, turmeric and Neem and the viral or host protein were explored, and it was found that these compounds restrict the virus' attachment to the host cell receptor ACE2 by inhibiting the spike glycoprotein of the SARS-CoV-2 virus. In fact, it was found that turmeric and Neem do so better even than HCQ:
<a href="https://timesofindia.indiatimes.com/city/lucknow/turmeric-neem-effective-against-coronavirus-says-kgmu-study/articleshow/76165100.cms" target="_blank" rel="noopener noreferrer">Turmeric, neem [and Tulasi] effective against coronavirus, says KGMU study; Yusra Husain; July, 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5388087/" target="_blank" rel="noopener noreferrer">Biological activities of curcuminoids, other biomolecules from turmeric and their derivatives – A review; Augustine Amalraj et al.; Journal of Traditional and Complementary Medicine; April, 2017<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7361299/" target="_blank" rel="noopener noreferrer">Potential use of Turmeric in COVID‐19; H. Gupta et al.; Clinical and Experimental Dermatology; July 1, 2020<OutboundLink/></a></p>
<p><a href="https://www.jogh.org/documents/issue202001/jogh-10-010332.htm" target="_blank" rel="noopener noreferrer">Hypertonic saline nasal irrigation and gargling should be considered as a treatment option for COVID-19; Sandeep Ramalingam et al.; Journal of Public Health; 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3604064/" target="_blank" rel="noopener noreferrer">Effects of Ginger and Its Constituents on Airway Smooth Muscle Relaxation and Calcium Regulation; Elizabeth A. Townsend et al.; American Journal of Respiratory Cell and Molecular Biology; Feb, 2013<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/23123794/" target="_blank" rel="noopener noreferrer">Fresh ginger (Zingiber officinale) has anti-viral activity against human respiratory syncytial virus in human respiratory tract cell lines; Jung San Chang et al.; Journal of Ethnopharmacology; Jan 9, 2013<OutboundLink/></a></p>
<p>A comprehensive website on turmeric:
<a href="http://turmericforhealth.com/" target="_blank" rel="noopener noreferrer">turmericforhealth.com<OutboundLink/></a>: <a href="https://www.turmericforhealth.com/turmeric-benefits/health-benefits-of-black-pepper-and-turmeric" target="_blank" rel="noopener noreferrer">Health Benefits of Black Pepper and Turmeric<OutboundLink/></a></p>
<p><a href="https://www.lybrate.com/topic/peepal-tree-health-benefits" target="_blank" rel="noopener noreferrer">lybrate.com: Health Benefits Of Peepal Tree, Uses And Its Side Effects<OutboundLink/></a></p>
<p><a href="https://www.youtube.com/watch?v=BYub0gqALYM" target="_blank" rel="noopener noreferrer">(Hindi) YouTube.com: Dr Biswaroop Roy Chowdhury DIP Diet on Dr Khadar Vali's Millet-Based Diet, Gives 110% Benefits | Healthy Food<OutboundLink/></a></p>
<p><a href="https://www.youtube.com/watch?v=S-1xDZYqroI" target="_blank" rel="noopener noreferrer">(Hindi) YouTube.com: Kheti Viraasat Mission | Towards Health with Millets: A talk by Dr Khadar Wali at village Sohangarh Rattewala<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8013177/" target="_blank" rel="noopener noreferrer">Spices and herbs: Potential antiviral preventives and immunity boosters during Covid-19- Curcumin, Cinnamon, Ginger, Clove, Black pepper, Garlic, Neem, Giloy, Holy basil ; Namita Ashish Singh et al.; Phytotherapy Research; Jan 29, 2021<OutboundLink/></a></p>
<p><a href="https://food.ndtv.com/health/8-incredible-mustard-oil-benefits-that-make-it-so-popular-1631993" target="_blank" rel="noopener noreferrer">NDTV - Food: 8 Incredible Mustard Oil Benefits That Make It So Popular; Plavaneeta Borah; March 26, 2018<OutboundLink/></a></p>
<p><a href="https://chemrxiv.org/engage/chemrxiv/article-details/60c74928ee301c3c41c79a03" target="_blank" rel="noopener noreferrer">Treatment of COVID-19 patients: Justicia adhatoda leaves extract is a strong remedy for COVID-19 – Case report analysis and docking based study; Abhrajit &amp; Arijit Bag; Biological and Medicinal Chemistry; May 27, 2020<OutboundLink/></a></p>
<p><a href="https://www.researchgate.net/publication/347978412_Medicinal_plant_vasaka_could_be_a_therapeutic_option_for_the_management_of_COVID-19_symptoms" target="_blank" rel="noopener noreferrer">Medicinal plant vasaka could be a therapeutic option for the management of COVID-19 symptoms; Hari Khanal et al.; Journal of Medicinal Plants Studies; Oct, 2020<OutboundLink/></a></p>
<p><a href="https://senchateabar.com/blogs/blog/banana-tea-for-sleep" target="_blank" rel="noopener noreferrer">Sencha tea bar: Banana Tea For Sleep: Does It Work Plus A Tasty Recipe (A well-researched popular science article)<OutboundLink/></a></p>
<p><a href="https://bjbas.springeropen.com/articles/10.1186/s43088-021-00107-w" target="_blank" rel="noopener noreferrer">Perspectives on plant flavonoid quercetin-based drugs for novel SARS-CoV-2; Manjesh Saakre et al.; Beni-Suef University Journal of Basic and Applied Sciences; Mar 24, 2021<OutboundLink/></a></p>
<h2 id="_6-general-naturopathic-regimen-for-any-active-infection"><a class="header-anchor" href="#_6-general-naturopathic-regimen-for-any-active-infection">#</a> 6. General naturopathic regimen for any active infection</h2>
<h3 id="objective-6"><a class="header-anchor" href="#objective-6">#</a> Objective</h3>
<p>Mitigating treatment, supports the body's natural immunity during other treatments and greatly aids recovery.</p>
<h3 id="system-6"><a class="header-anchor" href="#system-6">#</a> System</h3>
<p>Naturopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-6"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-6">#</a> Can be used alongside other allopathic treatments</h3>
<p>Certainly, if the patient feels comfortable with the regimen while pursuing other treatment options.</p>
<h3 id="status-of-authorisation-6"><a class="header-anchor" href="#status-of-authorisation-6">#</a> Status of authorisation:</h3>
<p>Naturopathy and yoga are systems of treatment that have wide empirical basis, and in India, the support of the governmetn in the form of the Ayush Ministry. Many of their prescriptions and observations have not been ratified by mainstream or allopathic medicine.</p>
<h3 id="protocol-and-treatment-approach-6"><a class="header-anchor" href="#protocol-and-treatment-approach-6">#</a> Protocol and treatment approach:</h3>
<p><strong>Curative dietary principles</strong>:</p>
<ol>
<li>If there is little or no appetite during an illness, undertake a water fast, by withdrawing from food completely, and consuming only water / coconut water and citrus fruit juice.</li>
<li>If there is appetite, consume only fruits like oranges, apples, watermelons, and other easily digestible foods. Bananas may not be advisable, especially the large varieties (like the Kerala banana or Nendra pazham) that are known to be inflammatory and have a higher calorific value.  Capsicum is said to be supportive of immunity as it is high in magnesium, B6 and lycopene, improves immunity and has other health benefits. Capsicum is best consumed raw in salad, or lightly cooked. Pomegranate juice is also found to kill most Covid-19 viruses in vitro and can even be used as a gargle. Tomatoes are rich in the immune-supportive vitamin C.</li>
<li>Animal protein like meat, fish and dairy products, eggs, nuts, hard lentils and other hard proteins must be completely avoided.</li>
<li>Avoid oil, and especially all vegetable oils, and minimize consumption of salt. Avoid white sugar, polished rice, salt, and refined flours like maida, which would exclude all junk and many processed foods from the diet.</li>
<li>During convalescence, can have watery rice gruel with thoroughly soaked / sprouted and cooked whole horsegram (preferred) or green gram lentil gravy, with black pepper, giniger and a little turmeric for seasoning.</li>
<li>Consume the last main meal of the day before 7 PM, and eat nothing after 8:00 PM.</li>
<li>Drink water away from meals, and preferably about 30 minutes before meals, never during or for about 2 hours ater meals. Naturopathy and traditional medicine suggest that drinking water with meals or during the major part of digestion will dilute gastric juices and diminish digestion. However there is not much mainstream research evidence to corroborate this idea. It is important to not consume foods, like very salty foods that aggravate thirst during meals, and to chew food well as a significant amount of digestion is mediated through enzymes in saliva.</li>
</ol>
<p><strong><a href="https://vikaspedia.in/health/ayush/naturopathy" target="_blank" rel="noopener noreferrer">Common and frequently recommended cleansing and detoxifying practices in Naturopathy<OutboundLink/></a>:</strong></p>
<ol>
<li><strong><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4049052/" target="_blank" rel="noopener noreferrer">Hydrotherapeutic techniques<OutboundLink/></a>, including hip bath and colonic irrigation / cleansing or <a href="https://pubmed.ncbi.nlm.nih.gov/19724266/" target="_blank" rel="noopener noreferrer">enema<OutboundLink/></a></strong></li>
<li><strong>Mud baths</strong></li>
<li><strong><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7528968/" target="_blank" rel="noopener noreferrer">Jala neti or Nasal irrigation<OutboundLink/></a></strong></li>
<li><strong><a href="https://www.researchgate.net/publication/339846542_The_Benefits_of_Fasting_to_Improve_Health_Conditions_and_to_Prevent_Cardiovascular_Disease" target="_blank" rel="noopener noreferrer">Periodic fasting<OutboundLink/></a>, consuming only water / coconut water / fruit juice / fruits or in the strictes form, nothing at all, called the dry fast</strong></li>
</ol>
<p><strong>Sleep:</strong>
Sleep before 10 pm, and rest the mind and body as much as possible.</p>
<p><strong>Sunbathing or phototherapy:</strong>
Sunbathe wearing light, white, minimal cotton clothing in the morning and afternoon sun for at least 1-2 hours a day. Sunlight is known to have remarkable healing properties.</p>
<p><strong>Yoga and Pranayama:</strong>
Avoid yoga aasanas, but can practise pranayama exercises for respiratory and viral diseases, provided they do not cause any discomfort. The following are a few Pranayamas that have been recommended by research and by traditional practitioners and teachers of therapeutic yoga, the NCBI and Ayush, to enhance lung health, curb comorbidities and the occasionally severe after effects of the disease, and accelerate recovery: Anuloma Viloma, Kapalbhati, Nadi Shodhana, Bhramari, Udgeeth, Sheetkari.</p>
<p><strong>Prophylaxing diet, healthy diet in naturopathy or nature cure:</strong>
A healthy naturopathic maintenance diet reduces consumption of dairy products and nonvegetarian foods, and emphasizes the consumption of a variety of nutritious and anti-inflammatory fruits and vegetables, especially in their raw form. Chillies, mustard, onion, garlic are foods that must be avoided in the regular diet and consumed only for their medicinal value. It is advisable to consume only simple lentils like green gram, and not the heavier lentils like black gram and Tuvar dal. Refined sugar should be avoided completely, and substituted by unheated, raw honey, or unrefined palm sugar or raw cane juice. Salt too should be minimized, along with the other so-called <a href="http://www.waoy.org/32.html" target="_blank" rel="noopener noreferrer">5 white poisons<OutboundLink/></a>- white or polished rice (but sometimes interpreted as meat containing cholesterol or &quot;&quot;white&quot;&quot; fat), white or refined sugar, white or refined salt (especially iodized salt), milk (especially pasteurized milk from European cows) and white or refined flour or Maida (all-purpose flour). Completely eschew all processed and junk foods, especially those containing manmade chemicals like artificial colours, sweeteners, preservatives and texturizing and flavouring agents.</p>
<p>&quot;</p>
<h3 id="typical-duration-of-treatment-6"><a class="header-anchor" href="#typical-duration-of-treatment-6">#</a> Typical duration of treatment:</h3>
<p>Healing is accelerated through the naturopathic regimen, and recovery time is observed to decrease by 1-3 days at least, in the case of viral illnesses. The regimen can be followed in conjunction with any other treatment.</p>
<h3 id="outcome-6"><a class="header-anchor" href="#outcome-6">#</a> Outcome:</h3>
<p>There is widespread empirical evidence for naturopathy, but little support from mainstream medicine despite the absence of side effects and clearly beneficial and often remarkable outcomes.</p>
<h3 id="significant-side-effects-6"><a class="header-anchor" href="#significant-side-effects-6">#</a> Significant side effects:</h3>
<p>None, as long as the patient feels no significant discomfort while practicing the regimen. Wholly supportive of  health and beneficial.</p>
<h3 id="recommended-quantity-for-stocking-6"><a class="header-anchor" href="#recommended-quantity-for-stocking-6">#</a> Recommended quantity for stocking:</h3>
<p>The naturopathic approach is a wholly diet and nutrition-based approach and the foods prescribed are a subset of the ordinary diet, found in local grocery stores, especially Indian stores.</p>
<h3 id="price-6"><a class="header-anchor" href="#price-6">#</a> Price:</h3>
<p>The prices of organic groceries may be slightly higher.</p>
<h3 id="suggested-suppliers-6"><a class="header-anchor" href="#suggested-suppliers-6">#</a> Suggested suppliers:</h3>
<p>NA</p>
<h3 id="further-references-6"><a class="header-anchor" href="#further-references-6">#</a> Further references:</h3>
<p>There are a vast number of online sources to learn the naturopathic or natural living approach to healthcare. A few of these are shared below:</p>
<p><a href="https://bjbas.springeropen.com/articles/10.1186/s43088-021-00107-w" target="_blank" rel="noopener noreferrer">Perspectives on plant flavonoid quercetin-based drugs for novel SARS-CoV-2; Manjesh Saakre et al.; Beni-Suef University Journal of Basic and Applied Sciences; Mar 24, 2021<OutboundLink/></a></p>
<p><a href="https://www.healthifyme.com/blog/top-10-foods-to-boost-your-immune-system/" target="_blank" rel="noopener noreferrer">healthifyme.com: Top 10 Foods to Build your Immune System; Alpa Momaya; Oct 17, 2021<OutboundLink/></a></p>
<p><a href="https://www.indiatvnews.com/health/yoga-for-common-cold-fever-and-typhoid-swami-ramdev-shows-asanas-and-ayurvedic-remedies-618814" target="_blank" rel="noopener noreferrer">Yoga for common cold, fever and typhoid: Swami Ramdev shows asanas and ayurvedic remedies<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/journals/1415/" target="_blank" rel="noopener noreferrer">Modified Bhramari Pranayama in Covid 19 Infection; M. K. Taneja; May 20, 2020; Indian Journal of Otolaryngology and Head &amp; Neck Surgery<OutboundLink/></a></p>
<p><a href="https://www.indiatvnews.com/health/swami-ramdev-shares-pranayam-to-keep-after-effects-of-coronavirus-away-make-lungs-strong-629844" target="_blank" rel="noopener noreferrer">Yoga for Strong Lungs | Swami Ramdev shares pranayamas to maintain lungs health<OutboundLink/></a></p>
<p><a href="https://www.gqindia.com/live-well/content/covid-19-natural-remedies-thatll-help-you-take-care-of-your-heart-health" target="_blank" rel="noopener noreferrer">COVID 19: 6 natural remedies that'll help you take care of your heart health<OutboundLink/></a></p>
<p><a href="https://www.healthifyme.com/blog/top-9-home-made-drinks-to-strengthen-your-immune-system/" target="_blank" rel="noopener noreferrer">healthifyme.com: Top 9 Home-Made Drinks to Strengthen your Immune System; Alpa Momaya<OutboundLink/></a></p>
<p><a href="https://www.thehindubusinessline.com/news/science/green-tea-pomegranate-juice-and-other-herbs-inhibit-covid-19-study/article33057309.ece" target="_blank" rel="noopener noreferrer">Green tea, pomegranate juice and other herbs inhibit Covid-19: Study<OutboundLink/></a></p>
<p><a href="https://timesofindia.indiatimes.com/city/bhubaneswar/turmeric-green-tea-can-prevent-covid-utkal-university-study/articleshow/80891933.cms" target="_blank" rel="noopener noreferrer">Turmeric, green tea can prevent Covid: Utkal University study<OutboundLink/></a></p>
<p><a href="https://www.express.co.uk/life-style/health/1457345/covid-high-quality-healthy-diet-less-likely-to-catch-disease" target="_blank" rel="noopener noreferrer">People 'significantly less likely to catch Covid' if they have high-quality diet<OutboundLink/></a></p>
<p><a href="https://www.consumerhealthdigest.com/general-health/drinking-water-before-meal-makes-you-fitter.html" target="_blank" rel="noopener noreferrer">Consumer Health Digest: Does Drinking Water Before Meal Makes You Much Fitter<OutboundLink/></a></p>
<p><a href="https://www.mynaturaltreatment.com/natural-anti-inflammatory-supplements/" target="_blank" rel="noopener noreferrer">An article that discusses the pronounced anti-inflammatory properties of several common fruits and herbs; in particular, the fruits, pomegranate, papaya,  pineapple and grapefruit, the spices, turmeric, ginger, Oregano and Cayenne pepper, and other medicinal plants like Willow bark, Nettle and propolis (a resinous substance made by bees, present in raw and unrefined honey, which is found to be of medicinal value): 10 Best Anti-Inflammatory Supplements<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6335834/" target="_blank" rel="noopener noreferrer">Immune's-boosting agent: Immunomodulation potentials of propolis; Mohammed Al-Hariri; Journal of Family &amp; Community Medicine; Jan-Apr, 2019<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7194064/" target="_blank" rel="noopener noreferrer">Light as a potential treatment for pandemic coronavirus infections: A perspective; Chukuka Samuel Enwemeka et al.; Journal of Photochemistry and Photobiology; June, 2020<OutboundLink/></a></p>
<p><strong><a href="https://vikaspedia.in/health/ayush/naturopathy" target="_blank" rel="noopener noreferrer">Vikaspedia: Naturopathy<OutboundLink/></a></strong></p>
<p><a href="https://www.researchgate.net/publication/339846542_The_Benefits_of_Fasting_to_Improve_Health_Conditions_and_to_Prevent_Cardiovascular_Disease" target="_blank" rel="noopener noreferrer">The Benefits of Fasting to Improve Health Conditions and to Prevent Cardiovascular Disease; Wahyu Sukma Samudera et al.; Jurnal NERS; Jan, 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4049052/" target="_blank" rel="noopener noreferrer">Scientific Evidence-Based Effects of Hydrotherapy on Various Systems of the Body; Mooventhan &amp; Nivethitha; North American Journal of Medical Sciences; May, 2014<OutboundLink/></a></p>
<h2 id="_7-dr-eapen-koshy-s-prescription-for-prevention-through-raising-natural-immunity-by-alkalizing-the-body"><a class="header-anchor" href="#_7-dr-eapen-koshy-s-prescription-for-prevention-through-raising-natural-immunity-by-alkalizing-the-body">#</a> 7. Dr. Eapen Koshy's prescription for prevention through raising natural immunity by alkalizing the body</h2>
<h3 id="objective-7"><a class="header-anchor" href="#objective-7">#</a> Objective</h3>
<p>Prophylaxis for and mitigation of Covid</p>
<h3 id="system-7"><a class="header-anchor" href="#system-7">#</a> System</h3>
<p>Naturopathy and indigenous medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-7"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-7">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes</p>
<h3 id="status-of-authorisation-7"><a class="header-anchor" href="#status-of-authorisation-7">#</a> Status of authorisation:</h3>
<p>The protocol is confirmed as effective through extensive clinical trials in Nigeria and around the world. Described in detail by reputed physician in Lagos, Nigeria, Dr. Eapen Koshy, MBBS, MS, FRCS(London), DNB, MBA, in multiple video testimonies, and it has been reported that Dr. Eapen successfully used the remedy to bring Covid mortality to zero in Nigeria during the &quot;first wave&quot; of the pandemic in 2020.Dr.Koshy has long been researching about gaining health through natural food and lifestyle and is the author of the book, &quot;Beyond Modern Medicine&quot;.</p>
<h3 id="protocol-and-treatment-approach-7"><a class="header-anchor" href="#protocol-and-treatment-approach-7">#</a> Protocol and treatment approach:</h3>
<p>&quot;According to Koshy, the pH balance of our body determines our health status more than any other parameter. An alkaline pH of 7.4 is the perfect balance that a human body should maintain to be free of all illnesses.&quot;</p>
<p>With a healthy natural immune system, the body's immune reaction to pathogens would be optimally calibrated to inhibit the pathogen with minimal distress to itself, All natural foods are alkalizing and have an immediate effect on the body, just as caffeine does. It is best to have such vitalizing foods in the morning. <strong>According to Dr. Eapen Koshy's clinically demonstrated principles of preventative lifestyle, the secret to remaining largely free of all ailments, including Covid-19, is to maintain the body consistently in an alkaline condition through a naturally healthy and wholesome lifestyle in tune with the rhythm of nature, adequate use of the body through exercise, sunlight, fresh air, living amidst Nature and greenery, contact with the bare earth, and nourishment only through natural and whole foods. In particular, Dr. Koshy advises a specific alkalizing remedy to be consumed every morning on an empty stomach, described below:</strong></p>
<p><strong>Consume the following ingredients in the given sequence on an empty stomach: 1) a small piece of fresh ginger with skin, 2) a piece of raw, washed lemon with peel, 3) a single raw garlic clove, peeled, 4) a raw gooseberry, 5) a glass of slightly warm turmeric water, sipped slowly over a duration of 10 minutes.</strong> Ginseng root and aloe vera are also highly alkalizing superfoods. Turmeric, in particular, contains relatively large amounts of zinc, which also greatly assists immune function against viral disease.</p>
<p><strong>These ingredients are admittedly very pungent or spicy or sour to the taste, especially to those who lack core strength, a healthy and pH-neutral body and digestive health. However, if they are consumed in the specific sequence described above, the discomfort due to their sharp taste can be minimized, according to Dr. Eapen. Ginger, which is the most alkalizing, and is also the most pungent to the tastebuds, is consumed first raw and whole, along with its skin, which is its most alkalizing feature. Turmeric water, which has the least pungency and alkalinity can be consumed in slightly warm water last, and washes away the sharpness of the previous ingredients consumed. It is recommended to have more turmedic water if needed after half an hour, in order to feel vitalized.</strong></p>
<p><strong>Prescribed principles of a natural and healthy lifestyle for health:</strong></p>
<ol>
<li>The <strong>timings of food are even more important than the type of food.</strong> Awaken, bathe and have breakfast by sunrise, and around 8 AM. Have lunch around 12 PM, when the gastric juices are at their peak of function. Lunch consumed later in the afternoon can even be harmful. Dinner should be consumed by sunset.</li>
<li>It is very important to <strong>consume food that is predominantly (85 %) alkalizing</strong>. If acidifying food is eaten, then alkalizing food must be eaten to offset or neutralize such food. After an acidifying meal like nonvegetarian food with commercial soft drinks like Coca Cola, the body is effectively imprisoned in a subsequent state of impaired immunity for about 12 hours.</li>
<li>It is important to <strong>reduce sugar intake and exercise regularly</strong>.</li>
<li>It is recommended to <strong>emphasize superfoods like gooseberries, avocado, moringa, spirulina etc. in the diet.</strong></li>
<li>Try to <strong>choose a green habitat and communities should plant many trees in the environment that affect the ecosystem in a manner akin to &quot;&quot;alkalizing&quot;&quot; it by producing highly oxygenated &quot;&quot;super air&quot;&quot;.</strong> Though there has not been much research in this direction, maybe the coconut palm is such a tree, growing in abundance in southern India.</li>
<li>It is very important to <strong>avoid excessive exposure to EMF radiation</strong>, such as through wifi. There are <strong>many studies that evidence the paramount importance of intercellular communication, and wifi or EMF exposure interferes with these communication pathways, accelerating the process of ageing.</strong></li>
<li>The doctor observed among healty centenarians in Africa that their habits are <strong>regular and moderate</strong>. Alcohol in moderation is deemed healthy but not when consumed in immoderate amounts. Drinking a Moringa tea everyday might promote good health.</li>
<li>It is advisable to <strong>consume locally growing medicinal plants</strong> like Punarnava (in Sanskrit) in south India, also called Thazhuthama in Malayalam or Boerhavia diffusa, which rejuvenate vital organs like the liver and kidneys and strengthen immunity.</li>
<li>The doctor and several others have observed a Covid-like illness in the months preceding the official recognition of the outbreak. Whether or not the disease is manmade, <strong>the only sustainable antidote to the virus is for mankind to raise their natural immunity.</strong></li>
<li>It is important for the detoxification of the body to <strong>walk without footwear, in order to facilitate grounding and the passage of surcess electrons into the earth.</strong></li>
<li>Milk is a white poison, and its calcium is not well absorbed by the body. <strong>Dairy products are highly acidifying and are best avoided.</strong> It is possible that the cardiovascular problems of lacto-vegetarian communities like the Brahmins are due to their consumption of milk and milk products like curd. <strong>Milk has a strong kapha-producing effect on the body.</strong></li>
<li>The night and darkness are as important for the body as daylight. <strong>Artificial lighting, especially from screens, is best avoided. Sleep can be assisted by an alkalizing diet at dinnertime.</strong> For example, dinner could consist of two bitter gourds lightly cooked with a little rice. This is highly alkalizing food, and would greatly assist proper sleep at night. Another example would be about 4-5 raw ladies' fingers. Yet another suggestion is a salad consisting of finely chopped cucumbers, carrots, two varieties of fruits like pineapples and apples, and a variety of seeds like almonds or peanuts or cashew nuts, consumed before dinner. <strong>Fruits and fruit salads should be consumed before dinner to prepare the digestive ability in advance. The combined effect of these different items exceeds that of these items consumed individually. It is a mistake to use chemical sedatives to treat insomnia.</strong></li>
<li><strong>Fasting is very important for health and should be compulsorily incorporated into one's life. Mahatma Gandhi's fasting was the reason for their inner strength and clarity of intellect. Intermittent fasting is very useful to maintain good health.</strong> When, after the commencement of a fast, the body feels a craving for food, is the point at which the body switches over to utilising the hormone glucagon in drawing on its own stored reserves of energy (from using energy from digested food).</li>
<li><strong>In order to prevent unhealthy bloating and gas formation after food, it is important to maintain the health of the gut biota. This is achieved by having meals at the proper times, completely eschewing from all artificial chemicals, consuming healthy vegetables and alkalizing foods as prebiotics and good probiotics like Yakult, fermented foods and Kefir.</strong></li>
</ol>
<h3 id="typical-duration-of-treatment-7"><a class="header-anchor" href="#typical-duration-of-treatment-7">#</a> Typical duration of treatment:</h3>
<p>Daily regimen for prevention of all disease</p>
<h3 id="outcome-7"><a class="header-anchor" href="#outcome-7">#</a> Outcome:</h3>
<p>It is said that this treatment is an excellent prophylaxis for and mitigation of Covid.</p>
<h3 id="significant-side-effects-7"><a class="header-anchor" href="#significant-side-effects-7">#</a> Significant side effects:</h3>
<p>No adverse effects known, improved overall health and immunity</p>
<h3 id="recommended-quantity-for-stocking-7"><a class="header-anchor" href="#recommended-quantity-for-stocking-7">#</a> Recommended quantity for stocking:</h3>
<p>Everyday foods stocked for the week, 75 g ginger, one pod garlic, 7 lemons for one person each week</p>
<h3 id="price-7"><a class="header-anchor" href="#price-7">#</a> Price:</h3>
<p>Commonly stocked in kitchens, no extra cost</p>
<h3 id="suggested-suppliers-7"><a class="header-anchor" href="#suggested-suppliers-7">#</a> Suggested suppliers:</h3>
<p>Local grocers</p>
<h3 id="further-references-7"><a class="header-anchor" href="#further-references-7">#</a> Further references:</h3>
<p><a href="http://youtube.com/watch?v=B28O9WXS_SE" target="_blank" rel="noopener noreferrer">Covid-19 pandemic Q/A with Dr. Eapen Koshy | Lagos, Nigeria | Sri. P.V Behanan<OutboundLink/></a></p>
<p><a href="https://indianewengland.com/2021/05/fighting-covid-the-alkaline-way-a-doctor-shows-how/" target="_blank" rel="noopener noreferrer">Fighting Covid the alkaline way, a doctor shows how<OutboundLink/></a></p>
<p><a href="https://www.onmanorama.com/lifestyle/news/2021/05/19/doctor-how-to-fight-covid-the-alkaline-way-new-book.html" target="_blank" rel="noopener noreferrer">Doctor shows how to fight Covid the alkaline way in his new book (Survive COVID: By Staying Alkaline); May 19, 2021<OutboundLink/></a></p>
<p><a href="https://www.youtube.com/watch?v=cmqLC1MiJQk" target="_blank" rel="noopener noreferrer">Covid19 | Dr Eapen Koshy | covid19 prevention |corona prevention<OutboundLink/></a></p>
<p><a href="https://www.youtube.com/watch?v=Da1zbQg-xgI" target="_blank" rel="noopener noreferrer">DXN in current times By ECD Dr. Eapen Koshy | Immunity | Alkaline Food<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/23123794/" target="_blank" rel="noopener noreferrer">Fresh ginger (Zingiber officinale) has anti-viral activity against human respiratory syncytial virus in human respiratory tract cell lines; Jung San Chang et al.; Journal of Ethnopharmacology; Jan 9, 2013<OutboundLink/></a></p>
<p><a href="https://www.medicalnewstoday.com/articles/ginger-for-colds#_noHeaderPrefixedContent" target="_blank" rel="noopener noreferrer">medicalnewstoday.com: How ginger can help with a cold | Is it effective? | Properties | How to use | Ginger and honey | Summary; Louisa Richards &amp; Debra Rose Wilson, PhD, RN; May 11, 2020<OutboundLink/></a></p>
<p><a href="https://www.india.com/lifestyle/benefits-of-ginger-in-covid-19-fight-lung-infection-by-adding-ginger-in-kadha-or-tea-4133060/" target="_blank" rel="noopener noreferrer">india.com: Benefits of Ginger in COVID-19: Fight Lung Infection By Adding Ginger in Kadha or Tea Home Remedies: Benefits of Ginger and how it saves you against coronavirus and other lung infections; Sept 6, 2020<OutboundLink/></a></p>
<p><a href="https://www.webmd.com/vitamins/ai/ingredientmono-961/ginger" target="_blank" rel="noopener noreferrer">webmd.com: Ginger- Overview | Uses | Side Effects | Precautions | Interactions | Dosing<OutboundLink/></a></p>
<p><a href="https://www.frontiersin.org/articles/10.3389/fimmu.2020.570122/full" target="_blank" rel="noopener noreferrer">The anti-inflammatory food constituents Allicin and Selenium are found in garlic: Immune-Boosting, Antioxidant and Anti-inflammatory Food Supplements Targeting Pathogenesis of COVID-19 (Zinc, Vitamin D, Vitamin C, Curcumin, Cinnamaldehyde, Allicin, Piperine, Selenium, Propolis, Probiotics, Lactoferrin, Quercetin); M. Mrityunjaya et al.; Frontiers in Immunology; Oct 7, 2020<OutboundLink/></a></p>
<p><a href="https://www.sciencedirect.com/science/article/pii/S0278691513002287" target="_blank" rel="noopener noreferrer">Short-term heating reduces the anti-inflammatory effects of fresh raw garlic extracts on the LPS-induced production of NO and pro-inflammatory cytokines by downregulating allicin activity in RAW 264.7 macrophages; Jung-Hye Shin et al.; Food and Chemical Toxicology; Aug, 2013<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7434784/" target="_blank" rel="noopener noreferrer">Antiviral potential of garlic (Allium sativum) and its organosulfur compounds: A systematic update of pre-clinical and clinical data; Razina Rouf et al.; Trends in Food Science and Technology; Aug, 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8302490/" target="_blank" rel="noopener noreferrer">Targeting COVID-19 (SARS-CoV-2) main protease through active phytocompounds of ayurvedic medicinal plants – Emblica officinalis (Amla), Phyllanthus niruri Linn. (Bhumi Amla) and Tinospora cordifolia (Giloy) – A molecular docking and simulation study; Selvakumar Murugesan et al.; Computational Biology and Medicine; Sep, 2021<OutboundLink/></a></p>
<h2 id="_8-dr-bryan-ardis-natural-protocol-for-covid-19"><a class="header-anchor" href="#_8-dr-bryan-ardis-natural-protocol-for-covid-19">#</a> 8. Dr. Bryan Ardis' Natural Protocol for Covid-19</h2>
<h3 id="objective-8"><a class="header-anchor" href="#objective-8">#</a> Objective</h3>
<p>Prophylactic and treatment of early symptoms</p>
<h3 id="system-8"><a class="header-anchor" href="#system-8">#</a> System</h3>
<p>Allopathic and nutritional medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-8"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-8">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes</p>
<h3 id="status-of-authorisation-8"><a class="header-anchor" href="#status-of-authorisation-8">#</a> Status of authorisation:</h3>
<p>Based on published research, and to be found on Dr. Ardis' PDF report &quot;&quot;The Dangers Of The Covid-19 Vaccine Report&quot;&quot;, accessible from his website.
<a href="https://www.thedrardisshow.com/pages/research-links" target="_blank" rel="noopener noreferrer">https://www.thedrardisshow.com/pages/research-links<OutboundLink/></a></p>
<h3 id="protocol-and-treatment-approach-8"><a class="header-anchor" href="#protocol-and-treatment-approach-8">#</a> Protocol and treatment approach:</h3>
<p><strong>Prophylactic or preventative care</strong>:
Vitamic C (ascorbic acid)- 3000 mg / day
Zinc- 50 mg / day, preferably as zinc gluconate
Selenium- 200 mcg / day</p>
<p><strong>Treatment of Covid symptoms</strong>:
Vitiman C (ascorbic acid)- 10,000 mg / day
Zinc- 100 mg / day, preferably as zinc gluconate
Selenium- 400 mcg / day</p>
<h3 id="typical-duration-of-treatment-8"><a class="header-anchor" href="#typical-duration-of-treatment-8">#</a> Typical duration of treatment:</h3>
<p><strong>VACANT VACANT VACANT</strong></p>
<h3 id="outcome-8"><a class="header-anchor" href="#outcome-8">#</a> Outcome:</h3>
<p>The building of immunity against Covid</p>
<h3 id="significant-side-effects-8"><a class="header-anchor" href="#significant-side-effects-8">#</a> Significant side effects:</h3>
<p>No significant side effects reported of therapeutic dosages of vitamins and other nutrients</p>
<h3 id="recommended-quantity-for-stocking-8"><a class="header-anchor" href="#recommended-quantity-for-stocking-8">#</a> Recommended quantity for stocking:</h3>
<p><strong>VACANT VACANT VACANT</strong></p>
<h3 id="price-8"><a class="header-anchor" href="#price-8">#</a> Price:</h3>
<p><strong>VACANT VACANT VACANT</strong></p>
<h3 id="suggested-suppliers-8"><a class="header-anchor" href="#suggested-suppliers-8">#</a> Suggested suppliers:</h3>
<p>Local and online pharmaceutical suppliers</p>
<h3 id="further-references-8"><a class="header-anchor" href="#further-references-8">#</a> Further references:</h3>
<p><a href="https://ambassadorlove.wordpress.com/2021/05/06/pine-tea-possible-antidote-for-spike-protein-transmission/" target="_blank" rel="noopener noreferrer">PINE TEA: Possible Antidote for Spike Protein Transmission<OutboundLink/></a></p>
<h2 id="_9-camphor-ajwain-carom-seeds-lavang-cloves-eucalyptus-oil-aromatic-pouch-potli-for-inhalation"><a class="header-anchor" href="#_9-camphor-ajwain-carom-seeds-lavang-cloves-eucalyptus-oil-aromatic-pouch-potli-for-inhalation">#</a> 9. Camphor + Ajwain / Carom seeds + Lavang / Cloves + Eucalyptus oil aromatic pouch / Potli for inhalation</h2>
<h3 id="objective-9"><a class="header-anchor" href="#objective-9">#</a> Objective</h3>
<p>Relief from respiratory congestion and breathing difficulty, and increase blood oxygenation</p>
<h3 id="system-9"><a class="header-anchor" href="#system-9">#</a> System</h3>
<p>Traditional medicine, recommended also by naturopaths</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-9"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-9">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes.</p>
<h3 id="status-of-authorisation-9"><a class="header-anchor" href="#status-of-authorisation-9">#</a> Status of authorisation:</h3>
<p>Among the remedies documented here, this remedy may be the least supported by mainstream research evidence, as there are several fact-checking articles online &quot;&quot;debunking the myth&quot;&quot;, such as this article, which nonetheless admits that camphor constitutes 4.8 % of the common decongestant and cough mitigant Vicks VapoRub:
<a href="https://thefederal.com/covid-19/beware-camphor-doesnt-help-improve-bodys-oxygen-level-it-can-be-toxic/" target="_blank" rel="noopener noreferrer">The Federal: Beware: Camphor doesn’t help improve body’s oxygen level, it can be toxic; May 5, 2021<OutboundLink/></a></p>
<p>Dr. Prakash Gyawali, an Ayurvedic physician, explains that Camphor helps to open the nasal passages in case of cold while Cloves dry the phlegm, Eucalyptus oil is a nasal decongestant and Carom seeds / Ajwain are used in many Ayurvedic medicines for their expectorant and drying properties. However, he too believes that the claim that they increase oxygen saturation in blood is not well-founded in existing research:
<a href="https://southasiacheck.org/fact-check/a-supposed-home-remedy-for-boosting-blood-oxygen-levels-is-unfounded/" target="_blank" rel="noopener noreferrer">South Asia Check | Fact Check: A supposed home remedy for boosting blood oxygen levels is unfounded; Deepak Adhikari; April 29, 2021<OutboundLink/></a></p>
<p>It has also been <a href="https://www.stylecraze.com/articles/natural-remedies-for-loss-of-taste-and-smell/" target="_blank" rel="noopener noreferrer">reported<OutboundLink/></a> that anosmia or loss of taste and smell, one of the common and peculiar symptoms of Covid-19, especially in the first wave and earlier variants, <a href="https://vitamindwiki.com/Loss+of+smell+may+be+related+to+low+Zinc+or+perhaps+low+vitamin+D" target="_blank" rel="noopener noreferrer">attributed also to vitamin D deficiency and Zinc deficiency<OutboundLink/></a>, can be reversed through steam inhalation with <a href="https://pubmed.ncbi.nlm.nih.gov/12645832/" target="_blank" rel="noopener noreferrer">eucalyptus oil<OutboundLink/></a>. Ajwain has been known to have a bronchodilatory effect and be useful in the treatment of asthma:
<a href="https://www.researchgate.net/publication/6433734_Bronchodilatory_Effect_of_Carum_copticum_in_Airways_of_Asthmatic_Patients" target="_blank" rel="noopener noreferrer">Bronchodilatory Effect of Carum copticum in Airways of Asthmatic Patients; Mohammad Hossein Boskabady et al.; Therapie; Jan, 2007<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/12645832/" target="_blank" rel="noopener noreferrer">Anti-inflammatory activity of 1.8-cineol (eucalyptol) in bronchial asthma: a double-blind placebo-controlled trial; U R Juergens et al.; Respiratory Medicine; Mar, 2003<OutboundLink/></a></p>
<p>In fact, Carom seeds (active agents, thymol oil, terpine and linonene) and Eucalyptus oil (active agents, cineole and eucalyptol) <a href="https://www.tatanutrikorner.com/blogs/nutrikorner/home-remedies-to-combat-shortness-of-breath" target="_blank" rel="noopener noreferrer">are often prescribed<OutboundLink/></a> in traditional home remedies to combat shortness of breath, especially for those suffering from asthma, where it is recommended that the oil of Eucalyptus be added to hot water for steam inhalation or that Carom seeds be slightly roasted to release the vapours that are sniffed to dilate the bronchial passages.</p>
<p>In this video, the well-known Ayurveda and Yoga physician and spiritual teacher <a href="https://www.thehindu.com/news/national/pm-modi-pays-tributes-to-ayurveda-proponent-balaji-tambe/article35849021.ece" target="_blank" rel="noopener noreferrer">Dr. Balaji Tambe<OutboundLink/></a>, prescribes the <a href="https://ijatm.org/index.php/ijatm/article/view/88" target="_blank" rel="noopener noreferrer">Camphor + Ajwain + Abhyang oil Potli<OutboundLink/></a> for those suffering from hypoxia and breathing difficulty, and mentions the customary use of this breathing aid by unaccustomed travellers to higher altitudes like Amarnath or Badrinath or Ladakh in the Himalayas. <strong>Acharya Tambe recommended that the chest be massaged with the Ayurvedic medicated oil Abhyang before the inhalation of vapours from the Ajwain-Camphor Potli, containing mostly Ajwain and only a pinch of pure camphor.</strong> It should be noted that the camphor used should prefefrably be <a href="https://en.wikipedia.org/wiki/Camphor" target="_blank" rel="noopener noreferrer">natural camphor (obtained from a tree bark)<OutboundLink/></a> very pure and is the more expensive, expensive variety, which is not toxic even if ingested in very small quantities <a href="https://en.wikipedia.org/wiki/Camphor" target="_blank" rel="noopener noreferrer">(whereas synthetic camphor is inexpensive, and manufactured from oil of turpentine)<OutboundLink/></a>:
<a href="https://vnclip.net/video/7IV8kZ-k2SU/%E0%A4%85%E0%A4%9C%E0%A4%B5%E0%A4%BE%E0%A4%87%E0%A4%A8-%E0%A4%95%E0%A4%B0%E0%A5%8D%E0%A4%AA%E0%A5%82%E0%A4%B0-%E0%A4%95%E0%A5%80-%E0%A4%AA%E0%A5%8B%E0%A4%9F%E0%A4%B2%E0%A5%80-camphor-ajwain-for-breath.html" target="_blank" rel="noopener noreferrer">Shreeguru Dr. Balaji Tambe: Camphor-Ajwain for Breath; 2020<OutboundLink/></a></p>
<p>There is also much <a href="https://trvid.com/video/camphor-a-remedy-of-covid-19-fitness-vibes-by-dr-shilpa-dane-hQeAHI1QPHA.html" target="_blank" rel="noopener noreferrer">anecdotal evidence from clinicians<OutboundLink/></a> and patients who have used the technique to mitigate breathing difficulty in Covid-19 patients. <a href="https://theseersecret.com/products/seer-secrets-ayurvedic-breath-easy-potli" target="_blank" rel="noopener noreferrer">Ayurvedic Breathe Easy Potli<OutboundLink/></a> is a commercial product that uses this technique to alleviate cough, respiratory distress and improve overall respiratory health and immunity.</p>
<h3 id="protocol-and-treatment-approach-9"><a class="header-anchor" href="#protocol-and-treatment-approach-9">#</a> Protocol and treatment approach:</h3>
<p>A pinch of camphor, a spoon of Ajwain / Carom seeds (perhaps roasted to release more vapours), Lavang / Clove, a few drops of Eucalyptus oil, mixed and tied together in a cotton Potli / Kizhi or small pouch, and sniffed in 10-15 deep breaths every 1-2 hours. This treatment can be preceded by a topical massage of the chest with Ayurvedic Abhyang oil.</p>
<h3 id="typical-duration-of-treatment-9"><a class="header-anchor" href="#typical-duration-of-treatment-9">#</a> Typical duration of treatment:</h3>
<p>About 24 hours</p>
<h3 id="outcome-9"><a class="header-anchor" href="#outcome-9">#</a> Outcome:</h3>
<p>Patients who have used the Potli therapy report immediate symptomatic relief.</p>
<h3 id="significant-side-effects-9"><a class="header-anchor" href="#significant-side-effects-9">#</a> Significant side effects:</h3>
<p>None known. Camphor, even the natural variety, is known to be toxic if ingested in large quantities. All therapeutic medicines can be toxic if consumed in immoderate amounts.</p>
<h3 id="recommended-quantity-for-stocking-9"><a class="header-anchor" href="#recommended-quantity-for-stocking-9">#</a> Recommended quantity for stocking:</h3>
<p>Household supplies, 1-2 packets of pure natural Camphor and about 200g Ajwain.</p>
<h3 id="price-9"><a class="header-anchor" href="#price-9">#</a> Price:</h3>
<p>Ordinary household commodities could be used to make this home remedy.</p>
<h3 id="suggested-suppliers-9"><a class="header-anchor" href="#suggested-suppliers-9">#</a> Suggested suppliers:</h3>
<p>Local grocery or supermarket</p>
<h3 id="further-references-9"><a class="header-anchor" href="#further-references-9">#</a> Further references:</h3>
<p>A great deal of anecdotal evidence from clinicians, such as <a href="https://trvid.com/video/camphor-a-remedy-of-covid-19-fitness-vibes-by-dr-shilpa-dane-hQeAHI1QPHA.html" target="_blank" rel="noopener noreferrer">cardiologist Dr. Shilpa Dane's video testimony<OutboundLink/></a>. For example, &quot;&quot;Sharing an Incident that happened with Mr. Pramod Malkan. His daughter-in-law was tested positive for Covid and oxygen level went down to 80-85 and immediate hospitalization was recommended. Being skeptical abt the treatments at hospitals, Mr. Pramod decided to use a home remedy instead. He mixed a cube of camphor with a spoon of carom seeds and tied it in a piece of cotton cloth. He then made her smell it 10-15 times with deep breaths and repeat the same action every two hours. Within 24 hrs her oxygen level went to 98-99 without any hospitalization. After this, he helped one of his friends who was hospitalized for covid with the same remedy and as a result, his friend was released from the hospital. Carom seeds is - ajwain अजवाइन (ओवा)&quot;&quot;</p>
<p>Reported to be stocked in ambulances, used to reoxygenate climbers and travellers in high altitude pilgrimage centers like Badrinath and Amarnath, and other Himalayan heights like Ladakh.</p>
<p><a href="https://vnclip.net/video/7IV8kZ-k2SU/%E0%A4%85%E0%A4%9C%E0%A4%B5%E0%A4%BE%E0%A4%87%E0%A4%A8-%E0%A4%95%E0%A4%B0%E0%A5%8D%E0%A4%AA%E0%A5%82%E0%A4%B0-%E0%A4%95%E0%A5%80-%E0%A4%AA%E0%A5%8B%E0%A4%9F%E0%A4%B2%E0%A5%80-camphor-ajwain-for-breath.html" target="_blank" rel="noopener noreferrer">Ayurveda Acharya Dr. Balaji Tambe: Camphor-Ajwain for Breath<OutboundLink/></a></p>
<p>A few other (indirect) references from research are cited in the &quot;Status of Authorization&quot; section.</p>
<h2 id="_10-prof-dileep-kumar-s-phd-ayurveda-pharmacology-recommended-protocol-for-covid-19-aiard"><a class="header-anchor" href="#_10-prof-dileep-kumar-s-phd-ayurveda-pharmacology-recommended-protocol-for-covid-19-aiard">#</a> 10. Prof. Dileep Kumar's (PhD, Ayurveda Pharmacology) recommended protocol for Covid-19, AIARD</h2>
<h3 id="objective-10"><a class="header-anchor" href="#objective-10">#</a> Objective</h3>
<p>Treatment to prevent cytokine storm in Covid-19 and SPO2 level maintenance. To be only taken by people who have symptoms; it does not matter whether they test positive or not. It is not a preventative medicine.</p>
<h3 id="system-10"><a class="header-anchor" href="#system-10">#</a> System</h3>
<p>Ayurveda, Naturopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-10"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-10">#</a> Can be used alongside other allopathic treatments</h3>
<p>Recommended to be used exclusively, before commencing or after stopping allopathic medication</p>
<h3 id="status-of-authorisation-10"><a class="header-anchor" href="#status-of-authorisation-10">#</a> Status of authorisation:</h3>
<p>Sourced from apparently official video documenting Expert guidance from Prof. Dr. Dileep Kumar P. P., MD, PhD (Dravyaguna), Ayurveda Pharmacology, Ambuja Institute of Ayurvedic Research and Documentation, Udayamperoor P.O., Ernakulam, Kerala, Prepared for SIIMSAR Doctors School of Swasthavritta (Social and Preventative Medicine), Navi Mumbai</p>
<h3 id="protocol-and-treatment-approach-10"><a class="header-anchor" href="#protocol-and-treatment-approach-10">#</a> Protocol and treatment approach:</h3>
<p>&quot;Ingredients: 2 pieces of shallots or small onions, 2 star anise, 20 black pepper, 4 tsp coriander seeds, 1/2 tsp fenugreek seeds, 1/2 tsp turmeric powder,</p>
<p>Preparation and dosage: Coarsely crush and add these six ingredients to 2 glasses of water, boil and reduce it to 1 glass of the decoction. Filter the decoction and drink it piping hot 3 times a day, freshly prepared for 5 days.&quot;</p>
<h3 id="typical-duration-of-treatment-10"><a class="header-anchor" href="#typical-duration-of-treatment-10">#</a> Typical duration of treatment:</h3>
<p>5 days</p>
<h3 id="outcome-10"><a class="header-anchor" href="#outcome-10">#</a> Outcome:</h3>
<p>Treatment of Covid-19, including prevention of cytokine storm and SPO2 level maintenance in symptomatic patients who are not on allopathic medication.</p>
<h3 id="significant-side-effects-10"><a class="header-anchor" href="#significant-side-effects-10">#</a> Significant side effects:</h3>
<p>None known, natural remedy</p>
<h3 id="recommended-quantity-for-stocking-10"><a class="header-anchor" href="#recommended-quantity-for-stocking-10">#</a> Recommended quantity for stocking:</h3>
<p>1/2 kg shallots, 250 g star anise, 200 g black pepper, 250 g coriander seeds, 200 g fenugreek seeds, 100 g gram organic turmeric powder</p>
<h3 id="price-10"><a class="header-anchor" href="#price-10">#</a> Price:</h3>
<p>Common Indian kitchen ingredients</p>
<h3 id="suggested-suppliers-10"><a class="header-anchor" href="#suggested-suppliers-10">#</a> Suggested suppliers:</h3>
<p>Local (Indian) grocery stores</p>
<h3 id="further-references-10"><a class="header-anchor" href="#further-references-10">#</a> Further references:</h3>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8013177/" target="_blank" rel="noopener noreferrer">Spices and herbs: Potential antiviral preventives and immunity boosters during COVID‐19; Namita Ashish Singh et al.; Phytotherapy Research; Jan 29, 2021<OutboundLink/></a></p>
<p><a href="https://www.thehindu.com/sci-tech/health/immunity-boosters-you-can-make-at-home/article31083337.ece" target="_blank" rel="noopener noreferrer">The Hindu: COVID-19: Immunity boosters you can make at home; Mar 16, 2020<OutboundLink/></a></p>
<h2 id="_12-a-variety-of-anti-inflammatory-herbal-teas-and-other-home-remedies-containing-nutrients-and-other-properties-that-are-potently-beneficial-to-the-immune-system"><a class="header-anchor" href="#_12-a-variety-of-anti-inflammatory-herbal-teas-and-other-home-remedies-containing-nutrients-and-other-properties-that-are-potently-beneficial-to-the-immune-system">#</a> 12. A variety of anti-inflammatory herbal teas and other home remedies, containing nutrients and other properties that are potently beneficial to the immune system</h2>
<h3 id="objective-11"><a class="header-anchor" href="#objective-11">#</a> Objective</h3>
<p>The mitigation of inflammation in the body through herbal decoctions based on scientific / empirical evidence, and thereby supporting the immune system</p>
<h3 id="system-11"><a class="header-anchor" href="#system-11">#</a> System</h3>
<p>Naturopathy / Nutritional medicine / Ayurveda</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-11"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-11">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes</p>
<h3 id="status-of-authorisation-11"><a class="header-anchor" href="#status-of-authorisation-11">#</a> Status of authorisation:</h3>
<p>Supported by scientific evidence / empirical knowledge / traditional validity / widespread anecdotal evidence</p>
<h3 id="protocol-and-treatment-approach-11"><a class="header-anchor" href="#protocol-and-treatment-approach-11">#</a> Protocol and treatment approach:</h3>
<p>How to brew a better cup of tea:</p>
<ul>
<li><strong>To brew the best cup of tea, it is important to use fresh ingredients, as plants lose their potency over time. In general, a fresh leaf tea is more potent than a dried leaf tea, and a loose leaf tea is more potent than a tea bag. It is important to be careful about the quality of the ingredients to avoid pesticides, herbicides, or mould.</strong></li>
<li><strong>Also, it is important to be aware that compounds in some teas may interact with medications, especially if consumed in excess.</strong></li>
<li><strong>A study on pesticides in tea imported from China found residues in 198 of 223 samples. In fact, 39 had residues that were over the European Union’s maximum limits.</strong></li>
<li><strong>A study on antioxidants in tea found that loose-leaf teas tend to contain more anti-inflammatory antioxidants than tea bags.</strong></li>
<li><strong>The same study noted that when steeping tea, 5 minutes is long enough to extract 80–90% of its antioxidant content. A longer steeping time doesn’t extract much more.</strong></li>
<li><strong>It is possible to be creative and combine different teas and other anti-inflammatory herbs, spices like cinnamon and cardamom, or even fruits like lemon or orange slices. Many of these ingredients work together to provide even more health benefits.</strong></li>
<li><strong>It is also healthful to add 1-2 drops of peppermint oil, rich in Menthol, to a herbal tea, for its anticoagulant property, though those using blood-thinning drugs like Warfarin must be cautious in its use.</strong></li>
</ul>
<p>CAUTION: It is important to recognize that while they are generally nontoxic and very safe to consume, even more so than most other pharmaceutical products, these commonly used medicinal herbs may nonetheless be unsuitable for pregnant or lactating mothers, and may be likely to interact adversely with other drugs. Such adverse effects should be investigated and ruled out before they are consumed on a regular basis.</p>
<p><a href="http://iahas.com/" target="_blank" rel="noopener noreferrer">A traditional, reportedly effective recipe, recommended by Ayurvedic and naturopathic physicians that was used as prophylactic by the holistic health community in South India:<OutboundLink/></a>
Ginger + pepper + honey + lemon tea:
Make decoction with crushed ginger, pepper and sweetener like honey. Add lemon juice  after a while, after taking out from the stove. The decoction can be drunk once or twice a day.</p>
<p><a href="iahas.com">iahas.com</a>:</p>
<ul>
<li><strong>Cloves and banana mixture</strong>:
Mix 7 to 8 cloves with a banana. Keep it overnight and have it in the morning. The remedyis said to be very useful for asthma and wheezing.</li>
<li><strong>Ajwain + Tulasi + Pepper + Ginger Tea:</strong>
Herbal tea made by mixing Ajwain, Tulasi, pepper, and ginger is effective organic cough medicine for asthma patients. Drink this tea twice daily for best results.</li>
<li><strong>Ginger and Turmeric milk:</strong>
Ginger and Turmeric are full of antioxidants, rich in anti-inflammatory properties and very useful in treating Asthma. Mix 1 tbsp of turmeric powder and a little amount of grounded ginger in a cup of hot milk and drink it twice a day. To add flavour and sweetness, use honey and black pepper.</li>
<li><strong>Curative Ayurvedic herbs for wheezing and asthma:</strong>
Black raisin, Honey and Cloves, Ginger, Turmeric, Cinnamon, Liquorice, Mustard oil</li>
</ul>
<p><strong>Amla / Lemon + Cinnamon + Turmeric + Black pepper + Jaggery tea: (Recipe by Raw Food Healer and Nutritionist, Crystal Caisa)</strong>
Fill a large glass with warm wate, not much above body temperature but comfortable to sip. (The temperature must not be too warm because Ayurveda recommends against heating honey.) Add 1 Amla or Gooseberry blended or freshly squeezed Lemon, 1/4 teaspoon Cinnamon, 1/4 tspn Turmeric, 1/4  tspn Black pepper, 1 tspn Jaggery. The proportions of the ingredients can be adjusted to taste.</p>
<p><a href="http://thealternativedaily.com/:" target="_blank" rel="noopener noreferrer">thealternativedaily.com/<OutboundLink/></a>: 6 teas that reduce chronic inflammation:</p>
<ul>
<li><strong>Green tea: Green tea contains the highest concentration of powerful antioxidants called polyphenols, since it’s made from unfermented leaves. Of these polyphenols, Epigallocatechin-3-gallate (EGCG) is the most potent. Green tea may help fight inflammatory conditions like Crohn’s disease, ulcerative colitis, inflammatory bowel disease and certain cancers.</strong></li>
<li><strong>Ginger tea: Ginger is widely known for its anti-oxidative and anti-inflammatory properties, and its ability to alleviate symptoms of gastrointestinal distress by relaxing and soothing the intestinal tract. Ginger is extensively used by many traditional or indigenous systems of medicine.</strong>
(Serves 1.) Boil 1 and 1/2 cups of water and simmer 6 thin slices of raw ginger in the water for 10 minutes. Switch off the burner and allow the ginger pieces to steep in the water as they cool. When the temperature has cooled to slightly above body temperature, add freshly squeezed lemon juice and raw honey or Stevia to flavour the tea. As Ayurveda recommends against heating honey, the temperature must not be too warm.</li>
<li><strong>Turmeric + Pepper tea: Turmeric contains more than two dozen anti-inflammatory compounds, the most important of which is Curcumin.</strong>
(Serves 4.) Boil 4 cups water. Add 1 teaspoon ground turmeric. Simmer for 10 minutes before straining into a cup and allowing to cool. Flavour with the fresh juice of 1 lemon and raw honey to taste. As Ayurveda recommends against heating honey, the temperature must not be too warm. Add a pinch of freshly ground pepper to increase the absorption of the Curcumin in the turmeric.</li>
<li><strong>Tart cherry tea: Tart cherries have been shown to anti-inflammatory properties comparable to Ibuprofen and Naproxen, but without the adverse effects.</strong>
(Serves 4.) Boil 3 parts, like 3/4 cup or 3 cups of water for 1-4 servings. Allow to cool a little before adding 1 part (1/4 or 1 cup, for 1 or 4 servings, respectively) of freshly prepared tart cherry juice. Allow to cool to slightly above body temperature and add the juice of 1/2 lemon and raw honey to taste.</li>
<li><strong>Pineapple + Ginger + Cinnamon tea: The Bromelain in pineapple reduces chronic inflammation. Some studies concluded that this enzyme was comparable to or even more effective than NSAID painkiller drugs for managing the pain of osteoarthritis. Other studies have also found that Bromelain could be even more effective than prescription anti-inflammatory drugs for various types of pain.</strong>
(Serves 2.) Place the peel of 1 Pineapple (with crown and scraps), 1 stick of good Cinnamon and 1 small piece of Ginger into a pot and cover with water. Heat on medium / low and let simmer for about 25 minutes. Turn off the burner, cover the pot with a lid and allow the infusion to steep for about 20 more minutes. Strain into a jar and drink the tea warm or refrigerate the tea if it is preferred cold.</li>
<li><strong>Dandelion tea: Dandelions can detoxify the body, relieve constipation, reverse type-2 diabetes, soothe an upset stomach, help reduce water weight and help fight inflammation. Dandelion tea is made from the roots or leaves of the plant and has been used in ancient Native American and Chinese medicine for thousands of years. Studies have established that the leaves of the common dandelion plant Taraxacum officinale efficiently blocks the interaction between ACE2 cell surface recceptor and the SARS-CoV-2 spike protein in the original virus and in many mutants.</strong>
Boil water and pour the water over dried dandelion leaves. (Dandelion tea can be mildly laxative, so first-timers had better sip it at home until they adapt to the effects.)</li>
</ul>
<p><RouterLink to="/healthline.com/">healthline.com/</RouterLink>: <strong>More ideas for antiinflammatory teas with common kitchen ingredients:</strong></p>
<ul>
<li><strong>Holy basil or Tulasi tea: 'Tulasi' means “The Incomparable” and is also known as the “Queen of Herbs” due to its wide range of health-promoting properties. Tea prepared from Holy basil or Tulasi may fight inflammation and reduce pain from gout, arthritis, or other inflammatory conditions. It may also lower cholesterol, blood sugar, and blood pressure levels. In a 4-week study in 24 healthy adults, supplementing with 300 mg of holy basil extract significantly increased levels of helper T cells and natural killer cells, both of which are immune cells that help protect and defend the body from viral infections.</strong>
To brew Tulasi tea, steep a few leaves of Tulasi in boiling water for a few minutes.</li>
<li><strong>Rose hip tea: Rose hips are the the coral-red, round, edible pseudo-fruits that are left after a rose bush loses its flowers. Studies show that rose hips reduce pro-inflammatory chemicals and inhibit cox-1 and 2 enzymes, which trigger inflammation and pain. They have been used as an herbal medicine for more than 2,000 years, as they have a high concentration of antioxidants, including beta carotene and vitamins C and E (14).</strong>
(Serves 1-2.) To make rosehip tea, use about 10 whole, fresh or dried rose hips and mash or crumble them. Mix them with about 1 1/2 cups (355 ml) of very hot (not boiling) water and let them steep for 6–8 minutes. Strain the drink to remove the solids and add honey if desired, after the misture has cooled sufficiently. Rosehip tea has a deep red-coral color and floral notes.</li>
<li><strong>Fennel tea: This liquorice-flavoured common spice is full of anti-inflammatory phenolic compounds. Some of the most active ones are Caffeoylquinic acid, Rosmarinic acid, Quercetin, and Kaempferol. Some research indicates that Fennel may reduce pain, especially menstruation-related pain, which may be due to its powerful anti-inflammatory compounds.</strong>
(Serves 1.) To prepare fennel tea, pour 1 cup (240 ml) of boiling water over 2 teaspoons of crushed fennel seeds and let them steep for about 10 minutes.</li>
</ul>
<p><strong>&quot;Covid Tea&quot;, from the <a href="lifestyle.inquirer.net">lifestyle.inquirer.net</a>: Shared by Dr. Christine Gonzalez, who is one of the many who are fighting COVID-19 from the front lines.</strong>
<strong>Turmeric + Ginger + Garlic + Calamansi (also called Calamondin or Philippine lime) tea: This drink rebuilds immunity and is the best anti-inflammatory remedy. It is proven effective for cough, cold, fever, flu-like symptoms, sore throat, etc.</strong>
Wash 25 pcs small or 13 pcs large fresh organic turmeric root, 3 inches ginger root, 1 bulb garlic (preferably native), peeled and crushed, 25 pcs calamansi or two organic lemons, juiced. Thinly slice or grate turmeric and ginger with the skin on. Boil 3 cups of distilled water. Add turmeric, ginger and garlic. Turn off heat and add the calamansi. Cover and infuse / steep for 15 minutes. Let it cool. Take 1 cup, three times a day if possible.</p>
<p><strong>Other medicinal teas that are likely to help promote immunity while prophylaxing against Covid-19:</strong></p>
<ul>
<li><strong>Richly spiced Indian immunity-building tea, recommended by fitness-conscious celebrities: Turmeric contains a compound called curcumin, which is credited for most of the potent health benefits of this yellow spice. Curcumin has anti-inflammatory properties that can help to boost immunity. Studies suggest that black pepper can inhibit the growth of several bacteria. Its anti-inflammatory, antioxidant and anti-bacterial can lower down body temperature and boost the immune system. Tulasi is rich in Vitamin C and zinc, both the nutrient acts as an immunity booster and keeps infections at bay. Tulsi leaves extract increases the Helper-T cells and natural killer cells activity, which can help to boost the immune health.The aromatic spice Cinnamon is a rich source of antioxidants like polyphenols and proanthocyanidins. It is also known for its antiviral, antibacterial and antifungal properties that help reduce the chances of infections. Cloves are loaded with essential elements such as Vitamin E, Vitamin C, Folate, Riboflavin, Vitamin A, Thiamine, Vitamin D, Omega 3 fatty acids. It also has anti-inflammatory and anti-bacterial properties that can be beneficial in fighting infection. The antioxidant properties of ginger may combat inflammation and enhance your immunity. <a href="https://www.naturalfoodseries.com/11-benefits-star-anise/" target="_blank" rel="noopener noreferrer">Star anise<OutboundLink/></a> is one of the richest sources of Shikimic acid, and is rich in a number of other anti-inflammatory compounds, like Quercetin, Coumaric acid, Anethol, and Kaempferol. <a href="https://www.healthline.com/nutrition/cardamom-benefits#TOC_TITLE_HDR_10" target="_blank" rel="noopener noreferrer">Cardamom<OutboundLink/></a> too is known to confer many benefits to health, including its antibacterial, anti-inflammatory and anti-cancer properties. It may improve improve breathing and blood flow to the lungs, lower blood sugar and promote weight loss, among other benefits.</strong>
Pour water into a deep pan and put it on gas in medium flame. Add all the following ingredients in it one by one, in desired quantities- fresh turmeric, fresh black pepper powder, Tulasi, Cinnamon, Cloves, fresh ginger, and Star anise Cardamom pods too may be added. Simmer for 5-10 minutes and switch off the flame. When the mixture is cooled to slightly above body temperature, or is slightly warm to the touch, add fresh lemon juice and later, raw honey to taste. (It is <a href="https://lifespa.com/heated-honey-ayurveda/" target="_blank" rel="noopener noreferrer">recommended<OutboundLink/></a> in Ayurveda <a href="https://www.thehealthyhomeeconomist.com/is-cooking-honey-unhealthy/" target="_blank" rel="noopener noreferrer">not to heat honey above about 40 degrees C<OutboundLink/></a>. Charaka, the ancient sage of Ayurveda, wrote over 500 years ago that “nothing is so troublesome as ama caused by the improper intake of honey.”)</li>
<li><strong>Liquorice root tea: Licorice (Mulethi / Yashtimadhu / Atimadhuram / Irattimadhuram) root tea is commonly used as a gastrointestinal (stomach-related) remedy and to soothe a sore throat. Recent studies have suggested that licorice root is useful in treating liver disease and severe acute respiratory syndrome (SARS ) infections, and is also helpful in treating gum disease and preventing cavities. Both Ayurveda and Chinese traditional medicine have long known and valued the medicinal properties of Liquorice.</strong>
(Serves 1.) To make licorice root tea, boil 1 cup of water and pour over one licorice root. Allow Licorice root to steep for 5 minutes. Strain and serve.</li>
<li><strong>American Ginseng root tea: American ginseng (Panax quinquefolius, different from Korean red ginseng or Panax ginseng) is a root used in herbal medicine. Both Native American healers and traditional Chinese medicine (TCM) have utilized it. Research suggests it may boost energy, stimulate the immune system, and lower blood sugars. American ginseng may offer protection against viral respiratory tract infections, including influenza, flu-like illnesses, and the common cold, according to a 2017 review. (Ashwagandha, Withania somnifera, is often called the &quot;&quot;Indian Ginseng&quot;&quot;, though the two are not related botanically.)</strong>
(Serves 1.) Slice the fresh ginseng root using a sharp knife or a vegetable peeler. Place 1 tablespoon of finely chopped ginseng root into a mug. Boil a large glass of water (about 250 mL) in a kettle. Once the water has come to a boil, take it off of the heat, and let it cool for 2 minutes. High levels of heat can destroy the beneficial properties of many herbs, including Ginseng. Pour 1 cup (240 mL) of the water into the mug with the chopped Ginseng root, cover the cup and let the tea steep for at least 5-10 minutes.The longer the tea is steeped, the stronger it will be. Strain the tea. Another method of preparation is to put a tablespoon of dried Ginseng root powder in a cup (240 mL) of water and to heat the water to just below the boiling point, and let steep at that tempeerature for a little longer, about 20 minutes.</li>
<li><strong>Nettle leaf tea: The Nettle plant is high in polyphenols and antioxidants. A review of the research on polyphenols suggests that these powerful compounds may play a role in the prevention and management of chronic diseases related to inflammation, such as diabetes, obesity, cancer, and heart disease. Antioxidants are substances that protect the body from aging and cell damage. The leaves, stem and root of the Nettle plant have been used for centuries in herbal medicine, to treat ailments ranging from urinary tract infection, joint pain and arthritis and blood sugar management.</strong>
Combine Nettle leaves and water in a saucepan and bring to a boil. If preferred, some Cinnamon powder could be added as well for flavour. Turn off the heat and let the mixture steep for at least 10 minutes. When it has cooled to slightly above body temperature anad is just pleasantly warm, strain the tea and add a little honey or Stevia to taste.</li>
<li><strong>Sage tea: Sage / Salvia officinalis / Neelamulli / Salvi Tulasi / Salvia / Kamrkash is a commonly used spice in cuisines across the world, and hails from the mint family, like Rosemary, Thyme and Basil. Sage has proven antiviral properties and has been used across many cultures for its medicinal value.</strong>
Boil a cup of water, and add a teaspoon of dried or a tablespoon of fresh sage leaves. Allow the mixture to steep for 5-7 minutes and leave to cool. Add freshly squeezed lemon juice to taste when the tea is cool enough to be sipped.</li>
<li><strong>Hunza tea: This is a herbal decoction specially recommended by Dr. Biswaroop Roy Chowdhury. Hunza tea is from Hunza valley in Pakistan, where the native people are remarkably healthy and long-lived. The tea is reputed for its anti-ageing properties, promotes skin health and counters diabetes.</strong>
(Serves 4.) Bring a little oveer 4 cups of water to boil in a saucepan and add to it the following ingredients: 12 pieces of Mint leaves, 8 pcs Holy basil or Tulasi leaves, 4 pcs green cardamom, 2 g cinnamon, and 20 g fresh ginger. Simmer for 5-7 minutes and switch off the heat. Allow the decoction to steep while cooling, and then add about 20 g organic jaggery and freshly squeezed lemon juice to taste before serving.&quot;</li>
</ul>
<h3 id="typical-duration-of-treatment-11"><a class="header-anchor" href="#typical-duration-of-treatment-11">#</a> Typical duration of treatment:</h3>
<p>Prophylactic treatment for regular use, mitigates infections without any known adverse effects, immune-supportive</p>
<h3 id="outcome-11"><a class="header-anchor" href="#outcome-11">#</a> Outcome:</h3>
<p>Prophylactic, mitigates infections without any known adverse effects, immune-supportive</p>
<h3 id="significant-side-effects-11"><a class="header-anchor" href="#significant-side-effects-11">#</a> Significant side effects:</h3>
<p>None known, supportive of overall health</p>
<h3 id="recommended-quantity-for-stocking-11"><a class="header-anchor" href="#recommended-quantity-for-stocking-11">#</a> Recommended quantity for stocking:</h3>
<p>Uses household ingredients available in ordinary Indian grocery cuisine and stores. There may be no need to stock at this early stage.</p>
<h3 id="price-11"><a class="header-anchor" href="#price-11">#</a> Price:</h3>
<p>Ordinary kitchen ingredients</p>
<h3 id="suggested-suppliers-11"><a class="header-anchor" href="#suggested-suppliers-11">#</a> Suggested suppliers:</h3>
<p>Kitchen ingredients that are regularly used in Indian cooking.</p>
<p><a href="https://www.gaiaherbs.com/blogs/seeds-of-knowledge/herbs-for-lungs" target="_blank" rel="noopener noreferrer">Gaia Herbs: 11 Best Herbs to Support Lung and Respiratory Health<OutboundLink/></a></p>
<h3 id="further-references-11"><a class="header-anchor" href="#further-references-11">#</a> Further references:</h3>
<p>An earnest but informal personal blog on Ayurvedic remedies (iahas.com):
<a href="https://iahas.com/asthma-and-wheezing/" target="_blank" rel="noopener noreferrer">Asthma and Wheezing<OutboundLink/></a></p>
<p><a href="https://www.thealternativedaily.com/teas-that-reduce-inflammation-in-the-body/" target="_blank" rel="noopener noreferrer">thealternativedaily.com: 6 Teas That Reduce Inflammation In The Body<OutboundLink/></a></p>
<p><a href="https://www.healthline.com/nutrition/anti-inflammatory-tea" target="_blank" rel="noopener noreferrer">healthline.com: 6 Powerful Teas That Fight Inflammation<OutboundLink/></a></p>
<p><a href="https://www.mdpi.com/2306-5710/4/1/15/htm" target="_blank" rel="noopener noreferrer">Total Polyphenol Content and Antioxidant Capacity of Tea Bags: Comparison of Black, Green, Red Rooibos, Chamomile and Peppermint over Different Steep Times; Riley Cleverdon et al.; Beverages; Feb, 2018<OutboundLink/></a></p>
<p><a href="https://www.tandfonline.com/doi/full/10.1080/10807039.2014.894443" target="_blank" rel="noopener noreferrer">Monitoring and Risk Assessment of Pesticide Residues in Tea Samples from China; Jie Feng et al.; Human and Ecological Risk Assessment; Aug, 2014<OutboundLink/></a></p>
<p><a href="https://www.eatthis.com/news-turmeric-tea-covid19-immunity/" target="_blank" rel="noopener noreferrer">Some Doctors Are Serving This Kind of Tea to Fight COVID-19: Another hint about what to drink to help boost immunity against COVID-19.<OutboundLink/></a></p>
<p><a href="https://lifestyle.inquirer.net/359887/immunity-booster-vs-covid-19-turmeric-ginger-garlic-tea/" target="_blank" rel="noopener noreferrer">Immunity booster vs COVID-19: Turmeric-ginger-garlic tea<OutboundLink/></a></p>
<p><a href="https://www.webmd.com/diet/supplement-guide-ginseng#1" target="_blank" rel="noopener noreferrer">WebMD: Ginseng<OutboundLink/></a></p>
<p><a href="https://www.verywellhealth.com/american-ginseng-health-benefits-89218" target="_blank" rel="noopener noreferrer">Verywellhealth.com: What Is American Ginseng? This medicinal root may fight fatigue and prevent colds<OutboundLink/></a></p>
<p><a href="https://www.webmd.com/diet/licorice-root-tea-is-it-good-for-you#1" target="_blank" rel="noopener noreferrer">WebMD: Licorice Root Tea: Is It Good For You?<OutboundLink/></a></p>
<p><a href="https://www.webmd.com/diet/nettle-leaf-tea-good-for-you#1" target="_blank" rel="noopener noreferrer">WebMD: Nettle leaf tea<OutboundLink/></a></p>
<p><a href="https://www.wikihow.com/Make-American-Ginseng-Tea" target="_blank" rel="noopener noreferrer">WikiHow: How to Make American Ginseng Tea<OutboundLink/></a></p>
<p><a href="https://www.healthline.com/health/food-nutrition/nettle-tea" target="_blank" rel="noopener noreferrer">healthline.com: The Health Benefits of Nettle Tea<OutboundLink/></a></p>
<p><a href="https://www.mdpi.com/2072-6643/10/11/1618/htm" target="_blank" rel="noopener noreferrer">The Immunomodulatory and Anti-Inflammatory Role of Polyphenols; Nour Yahfoufi et al.; Nutrients; 2018<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7260602/" target="_blank" rel="noopener noreferrer">Dietary therapy and herbal medicine for COVID-19 prevention: A review and perspective; Suraphan Panyod et al.; Journal of Traditional Complementary Medicine; 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7891076/" target="_blank" rel="noopener noreferrer">Corona-Cov-2 (COVID-19) and [Korean Red] Ginseng: Comparison of possible use in COVID-19 and influenza; Wok Sik Lee et al.; Journal of Ginseng Research; 2021<OutboundLink/></a></p>
<p><a href="https://www.healthline.com/nutrition/antiviral-herbs" target="_blank" rel="noopener noreferrer">healthline.com: 15 Impressive Herbs with Antiviral Activity<OutboundLink/></a>: Includes the commonly used spices of European Continental cuisine, Rosemary, Sage, Oregano, Basil, Ginger, Garlic, Fennel and Peppermint, as well as Liquorice, Lemon balm, Dandelion, Ginseng, Echinacea (i.e. Green chiretta / Kaalamegha / Nilavempu), Astragalus and Sambucus.</p>
<p><a href="https://biswaroop.com/wp-content/uploads/2020/02/RECIPES-To-Cure-Lifestyle-Diseases1.pdf" target="_blank" rel="noopener noreferrer">RECIPES To Cure Lifestyle Diseases, by Neerja Roy Chowdhury<OutboundLink/></a></p>
<p><a href="https://www.researchgate.net/publication/350195367_Common_dandelion_Taraxacum_officinale_efficiently_blocks_the_interaction_between_ACE2_cell_surface_receptor_and_SARS-CoV-2_spike_protein_D614_mutants_D614G_N501Y_K417N_and_E484K_in_vitro" target="_blank" rel="noopener noreferrer">researchgate.net: Common dandelion (Taraxacum officinale) efficiently blocks the interaction between ACE2 cell surface receptor and SARS-CoV-2 spike protein D614, mutants D614G, N501Y, K417N and E484K in vitro; Hoai Thi Thu Tran; March, 2021<OutboundLink/></a></p>
<p><a href="https://www.news-medical.net/news/20201122/Sage-and-perilla-herbal-teas-could-help-to-prevent-or-treat-COVID-19.aspx" target="_blank" rel="noopener noreferrer">news-medical.net: Sage and perilla herbal teas could help to prevent or treat Covid-19; Sally Robertson, B.Sc.; Nov 22, 2020<OutboundLink/></a></p>
<p><a href="https://www.sciencedirect.com/science/article/pii/S2210803321000312" target="_blank" rel="noopener noreferrer">Appropriate use of essential oils and their components in the management of upper respiratory tract symptoms in patients with COVID-19; Marco Valussi; Journal of Herbal Medicine; Aug, 2021<OutboundLink/></a></p>
<p><a href="https://gosumitup.com/all-about-sage-know-your-fine-spice-salvia-or-sage" target="_blank" rel="noopener noreferrer">gosumitup.com: All About Sage- Know Your Spice Salvia Officinalis<OutboundLink/></a></p>
<p><a href="https://www.news-medical.net/news/20201122/Sage-and-perilla-herbal-teas-could-help-to-prevent-or-treat-COVID-19.aspx" target="_blank" rel="noopener noreferrer">news-medical.net: Sage and perilla herbal teas could help to prevent or treat COVID-19; Sally Robertson, B. Sc.; Nov, 2020<OutboundLink/></a></p>
<p><a href="https://www.eatthis.com/news-turmeric-tea-covid19-immunity/" target="_blank" rel="noopener noreferrer">Eat This, Not That!: Some Doctors Are Serving This Kind of Tea (Turmeric Tea) to Fight COVID-19; Krissy Gasbarre; April 5, 2021<OutboundLink/></a></p>
<p>In this early study, the direct interaction between certain Ayurvedic herbal compounds like Ashwagandha, black pepper, turmeric and Neem and the viral or host protein were explored, and it was found that these compounds restrict the virus' attachment to the host cell receptor ACE2 by inhibiting the spike glycoprotein of the SARS-CoV-2 virus. In fact, it was found that turmeric and Neem do so better even than HCQ:
<a href="https://timesofindia.indiatimes.com/city/lucknow/turmeric-neem-effective-against-coronavirus-says-kgmu-study/articleshow/76165100.cms" target="_blank" rel="noopener noreferrer">Turmeric, neem [and Tulasi] effective against coronavirus, says KGMU study; Yusra Husain; July, 2020<OutboundLink/></a></p>
<p><a href="https://timesofindia.indiatimes.com/life-style/health-fitness/home-remedies/expert-approved-turmeric-immunity-boosting-concoction-that-you-must-drink-daily/photostory/82086915.cms" target="_blank" rel="noopener noreferrer">Times Of India: Expert-Approved Turmeric Immunity-Boosting Concoction That You Must Drink Daily; April 15, 2021<OutboundLink/></a></p>
<p><a href="https://www.hindustantimes.com/lifestyle/health/why-drinking-warm-water-with-honey-can-be-harmful-for-you-as-per-ayurveda-101633932561171.html" target="_blank" rel="noopener noreferrer">Hindustan Times: Why drinking warm water with honey can be harmful for you as per Ayurveda; Nov 24, 2021<OutboundLink/></a></p>
<h2 id="_13-honey-and-nigella-sativa-hns-or-nigella-sativa-seed-oil-nso"><a class="header-anchor" href="#_13-honey-and-nigella-sativa-hns-or-nigella-sativa-seed-oil-nso">#</a> 13. Honey and Nigella sativa (HNS) OR Nigella sativa seed oil (NSO)</h2>
<h3 id="objective-12"><a class="header-anchor" href="#objective-12">#</a> Objective</h3>
<p>The mitigation of Covid-19 infection as well as prophylaxing using Nigella sativa</p>
<h3 id="system-12"><a class="header-anchor" href="#system-12">#</a> System</h3>
<p>Natural medicine, herbal and nutritional medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-12"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-12">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes.</p>
<h3 id="status-of-authorisation-12"><a class="header-anchor" href="#status-of-authorisation-12">#</a> Status of authorisation:</h3>
<p><strong>HNS therapy</strong>:</p>
<p>Evidence-based research, by a team of researchers from various institutes across Pakistan, Chile, Canada and the USA, led by Dr. Sohaib Ashraf, a research fellow at the Massachussetts General Hospital, Harvard Medical School. <strong>The team reported that in a search through the scientific literature for a miracle drug that was globally accessible, with wide ranging efficacy against viruses and other microbes, along with anti-inflammatory, immune-modulatory and anticoagulant properties, as well as with a robust safety profile, they found that honey and Nigella sativa were a perfect fit.</strong> The researchers said that both honey and Nigella sativa showed similar pharmacological profiles, with antiviral, antimicrobial and anti-inflammatory effects, especially in upper respiratory tract infections.</p>
<p>The study was conducted on 313 patients recruited from 4 medical centres in Pakistan, of which 210 were classified as moderate cases, identified by cough, fever, sore throat, nasal congestion and dyspnoea, and 103 were severe cases in the pulmonary phase of the disease, with fever, cough, pneumonia and respiratory distress. It was a Randomized Control Trial, but could not be wholly double-blinded due to the sweet and distinctive flavour of honey, which could not be adequately replicated through a neutral placebo. The Nigella sativa was administered as capsules, and the control group received empty capsules.</p>
<p><strong>A research study investigating the prophylactic potential of Nigella sativa is underway, led by the principal investigator of the HNS study, Dr. Sohaib Ashraf. It is expected to be completed by Feb 15, 2022.</strong></p>
<p><strong>NSO therapy</strong>:</p>
<p><strong>In another study, all adult patients, with average age 36 years, with mild COVID-19 symptoms (defined as upper respiratory tract infection symptoms in the absence of clinical or radiological signs of pneumonia or hypoxia) presented to King Abdulaziz University Hospital, Jeddah, Saudi Arabia, were recruited for an open label randomized clinical trial (RCT) with Nigella seed oil, whereas the control group received only standard of care. Symptoms were daily monitored via telecommunication. Of these patients, 183 eligible patients were eventually recruited into the RCT with their consent.</strong> The primary outcome focused on the percentage of patients who recovered (symptom-free for 3 days) within 14-days.&quot;</p>
<h3 id="protocol-and-treatment-approach-12"><a class="header-anchor" href="#protocol-and-treatment-approach-12">#</a> Protocol and treatment approach:</h3>
<p>N. sativa L., a well-known food spice with a high medicinal value, originates from different historical backgrounds. Several active compounds have been identified in N. sativa L. including thymoquinone, and the antiviral, anti-inflammatory and immunomodulatory properties of the seed are well explored in clinical research.</p>
<p><strong>Honey + Nigella sativa (HNS) used in the treatment of moderate to severe Covid-19 infection:</strong>
The study used HNS as an adjunct therapy to standard care therapy as advised by their physician, comprising of antipyretics, antibiotics, supplemental oxygen and mechanical ventilation, if required.</p>
<p><strong>The Honey + Nigella sativa adjunct therapy involved administering patients 1 g / kg / day of honey and 80 mg / kg / day of Nigella sativa for up to 13 days in each dose. These were given 2-3 times a day, depending on the patient's comfort with the dosage. The honey was dissolved in 1 large cup or 250 mL of warm water, while the Nigella sativa was provided in capsules. (A tablespoon of honey weighs approximately 21 g. A metric teaspoon of Black cumin seeds weighs about 5 g.)</strong>*</p>
<p><strong>Nigella seed oil (NSO) therapy:</strong>
<strong>The treatment adopted in the research study involved administering 500 mg NSO (MARNYS® Cuminmar) twice daily for 10 days to adult patients with mild Covid-19 symptoms, as adjunct therapy to standard of care.</strong></p>
<p>Research published in the journal Vascular Pharmacology shows that a molecule found in Nigella sativa, also known as Black seed or Black cumin, binds to ACE2 receptors in the lungs, potentially stopping spike protein particles from inducing inflammation and vascular damage. The molecule is being studied for possible drug development. Researchers out of India investigated the effects of Nigellidine, an indazole alkaloid of black seed, using molecular docking for binding to different Angiotensin-binding proteins, as well as the spike glycoprotein. They found that nigellidine “strongly binds” to the spike protein at what is known as the hinge region or active site opening, which may in turn hamper its binding to ACE2 receptor surfaces.</p>
<p>In a related study that was published last year in the journal Europe PMC, researchers learned that Nigellidine may potentially inhibit infection in several other ways. It was discovered early on that some people may suffer “Cytokine storms,” in which their immune systems are over-responding and causing more damage, or even death. Nigellidine was then studied and discovered to possess certain properties that may inhibit Cytokine storms, as well as impede infection, potentially making it an ideal drug candidate for further research. It is also hepato- and reno-protective, meaning it may help protect against liver and kidney damage. Furtthermore, Nigellidine was determined to possess unique immunomodulatory and anti-inflammatory characteristics, as well as antioxidant potential strong enough to inhibit some pathogenic proteins. In their quest to uncover possible drug candidates to protect patients against hyperinflammation and other associated problems, the researchers learnt that Nigellidine may help with preventing such adverse effects.</p>
<p>Besides Nigellicine, Nigellidine is found in the seed coat of Nigella sativa. Both of these constituents in their sulfated forms are extremely bioavailable, and along with Thymoquinone and Dithymoquinone, two other Black seed components, they show strong antioxidant, antibacterial, anti-hypertensive, anti-inflammatory and immunomodulatory effects that may be found useful with further clinical research.</p>
<p>Black seed is also recognized as a metabolic protector, helping to improve lipid and blood sugar levels.</p>
<h3 id="typical-duration-of-treatment-12"><a class="header-anchor" href="#typical-duration-of-treatment-12">#</a> Typical duration of treatment:</h3>
<p>1-2 weeks, in a research study that used HNS as adjunct therapy to mainstream treatment</p>
<p>A research study reported that <strong>Honey + Nigella Sativa therapy (HNS), used as an adjunct therapy alongside mainstream treatment, was found to alleviate Covid-19 symptoms in 4 and 6 days in moderate and severe cases, respectively, compared to 7 and 13 days, respectively, in the control group. Viral clearance also occurred 4 days earlier for both moderate and severe cases in the HNS group, compared to the control group.</strong></p>
<h3 id="outcome-12"><a class="header-anchor" href="#outcome-12">#</a> Outcome:</h3>
<p><strong>Outcome of Honey + Nigella Sativa (HNS) therapy as adjunct to Standard Of Care in its first clinical trial on 313 patients in Pakistan with moderate to severe Covid-19:
The intervention was found to alleviate Covid-19 symptoms in 4 and 6 days in moderate and severe cases, respectively, compared to 7 and 13 days, respectively, in the control group. Viral clearance also occurred 4 days earlier for both moderate and severe cases in the HNS group, compared to the control group. In addition, HNS reduced mortality among the severe patients. 30-day mortality was reported as 18.87 % in the control group, and 4 %, i.e., over four-fold lower in the HNS treatment group.</strong></p>
<p>The study results show that HNS promotes viral clearance, reduces severity of the disease and mortality, and is a safe and effective therapy for moderate to severe Covid-19 cases, say researchers. Thus, HNS represents an affordable over the counter therapy and can either be used alone or in combination with other treatments to achieve potentiating effects against COVID-19.</p>
<p><strong>Outcome of Nigella Seed Oil (NSO) therapy as adjunct to SOC in the recent clinical on 183 patients in Saudi Arabia with mild Covid-19 symptoms:</strong>
<strong>The percentage of patients recovered in the NSO group during the 14-day study period was significantly higher than that in the control group (57 patients [63 %] versus 32 patients [35 %], respectively). Additionally, the average number of days required for recovery in the NSO group was significantly less, by about 2 days, compared with those in the control group receiving Standard Of Care (10.7 ± 3.3 days versus 12.4 ± 2.9 days, respectively).</strong> Specifically, NSO treatment had a pronounced effect on the duration of anosmia and runny nose.</p>
<h3 id="significant-side-effects-12"><a class="header-anchor" href="#significant-side-effects-12">#</a> Significant side effects:</h3>
<p>The safety profile of thymoquinone has been documented in many clinical trials, including our previous trial with asthmatic patients.A recent systematic review of randomized clinical trials (RCTs) that used N. sativa L. showed no serious adverse effects on hepatic and renal function.</p>
<h3 id="recommended-quantity-for-stocking-12"><a class="header-anchor" href="#recommended-quantity-for-stocking-12">#</a> Recommended quantity for stocking:</h3>
<p>Both honey are common cooking ingredients found in Indian kitchens, and if not, 100-200 g of Nigella sativa and 250 mL of honey could be stocked.</p>
<h3 id="price-12"><a class="header-anchor" href="#price-12">#</a> Price:</h3>
<p><strong>HNS (Honey + Nigella sativa) therapy</strong>:</p>
<p>The whole treatment course is reported to have cost less than $ 5. Online stores sell Nigella sativa at about INR 200 for 250 g. Honey can cost between INR 350 to INR 1500 per kg, depending on quality.&quot;</p>
<h3 id="suggested-suppliers-12"><a class="header-anchor" href="#suggested-suppliers-12">#</a> Suggested suppliers:</h3>
<p>Local groceries and Indian groceries</p>
<h3 id="further-references-12"><a class="header-anchor" href="#further-references-12">#</a> Further references:</h3>
<p><a href="https://www.nutraingredients-asia.com/Article/2020/11/25/Covid-19-RCT-Honey-and-black-cumin-seed-help-speed-up-recovery-in-Covid-19-patients" target="_blank" rel="noopener noreferrer">nutraingredients-asia.com: Covid-19 RCT: Honey and Black cumin seeds help speed up recovery in Covid-19 patients; Nov 25, 2020<OutboundLink/></a></p>
<p>Preprint article on HNS therapy:
<a href="https://www.researchgate.net/publication/347798649_Honey_and_Nigella_sativa_against_COVID-19_in_Pakistan_HNS-COVID-PK_A_multi-center_placebo-controlled_randomized_clinical_trial" target="_blank" rel="noopener noreferrer">Honey and Nigella sativa against COVID-19 in Pakistan (HNS-COVID-PK): A multi-center placebo-controlled randomized clinical trial; Sohaib Ashraf, Shoaib Ashraf et al.; Nov, 2020<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8364675/" target="_blank" rel="noopener noreferrer">Nigella sativa for the treatment of COVID-19: An open-label randomized controlled clinical trial; Abdulrahman E. Koshak, Emad A. Koshak et al.; Complementary Therapies in Medicine; Sept, 2021<OutboundLink/></a></p>
<p>Research underway on the prophylactic potential of Nigella sativa:
<a href="https://pubmed.ncbi.nlm.nih.gov/34526081/" target="_blank" rel="noopener noreferrer">Prophylactic potential of honey and Nigella sativa L. against hospital and community-based SARS-CoV-2 spread: a structured summary of a study protocol for a randomised controlled trial; Sohaib Ashraf, Shoaib Ashraf et al.; Trials; Sept 15, 2021<OutboundLink/></a></p>
<p><a href="https://www.news-medical.net/news/20201108/Study-suggests-honey-and-Nigella-sativa-expedites-viral-clearance-in-COVID-19-patients.aspx" target="_blank" rel="noopener noreferrer">news-medical.net: Study suggests honey and Nigella sativa expedites viral clearance in COVID-19 patients; Nov 8, 2020<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/33746069/" target="_blank" rel="noopener noreferrer">In silico Nigellidine (N. sativa) bind to viral spike/active-sites of ACE1/2, AT1/2 to prevent COVID-19 induced vaso-tumult/vascular-damage/comorbidity; Smarajit Maiti et al.; Vascular Pharmacology; June, 2021<OutboundLink/></a></p>
<p><a href="https://www.alternativemedicine.news/2021-07-27-nigella-sativa-black-seed-prevents-covid-damage.html" target="_blank" rel="noopener noreferrer">AlternativeMedicine.news: Molecule in Nigella sativa (black seed) may prevent spike protein-induced vascular damage, scientists conclude in published paper indexed by NIH (updated); Ethan Huff; July 27, 2021<OutboundLink/></a></p>
<p><a href="https://onedaymd.aestheticsadvisor.com/2021/08/black-seed-and-covid-19-australian.html" target="_blank" rel="noopener noreferrer">onedaymd.aestheticadvisor.com: Black Seed and COVID-19: Australian Researchers found Nigella Sativa may help in treatment for COVID-19 infection; October 18, 2021<OutboundLink/></a></p>
<p><a href="https://onlinelibrary.wiley.com/doi/10.1111/1440-1681.13553" target="_blank" rel="noopener noreferrer">The role of thymoquinone, a major constituent of Nigella sativa, in the treatment of inflammatory and infectious diseases; Kaneez Fatima Shad et al.; Clinical and Experimental Pharmacology and Physiology; July 23, 2021<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8106451/" target="_blank" rel="noopener noreferrer">Thymoquinone: A Promising Natural Compound with Potential Benefits for COVID-19 Prevention and Cure; Osama A Badary et al.; Drug Design, Development and Therapy; May 3, 2021<OutboundLink/></a></p>
<p><a href="https://c19early.com/" target="_blank" rel="noopener noreferrer">COVID-19 early treatment: real-time analysis of 1,057 studies<OutboundLink/></a></p>
<h2 id="_14-miscellaneous-traditional-and-scientific-home-remedies-for-ailments-associated-with-covid-19"><a class="header-anchor" href="#_14-miscellaneous-traditional-and-scientific-home-remedies-for-ailments-associated-with-covid-19">#</a> 14. Miscellaneous traditional and scientific home remedies for ailments associated with Covid-19</h2>
<h3 id="objective-13"><a class="header-anchor" href="#objective-13">#</a> Objective</h3>
<p>The treatment of miscellaneous symptoms of Covid-19 using home remedies, the identification of miscellaneous herbs and kitchen ingredients that mitigate symptoms of Covid-19</p>
<h3 id="system-13"><a class="header-anchor" href="#system-13">#</a> System</h3>
<p>Naturopathy, indigenous medicine like Traditional Chinese Medicine and Ayurveda</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-13"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-13">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes, but discretion is advised, and physician's guidance, while pharmaceutical products like prescription blood thinners.</p>
<h3 id="status-of-authorisation-13"><a class="header-anchor" href="#status-of-authorisation-13">#</a> Status of authorisation:</h3>
<p>Long known to and used by traditional or indigenous medical systems like Ayurveda. Some pharmaceutical medications (like Warfarin, used as a blood-thinning agent) are derived from common herbs listed here (like Cinnamon, containing the powerful blood-thinning agent Coumarin).</p>
<p>Many other herbs and herbal decoction described here are long known to be effective and have come to be commonly used in traditional systems of medicine or fold remedies.</p>
<h3 id="protocol-and-treatment-approach-13"><a class="header-anchor" href="#protocol-and-treatment-approach-13">#</a> Protocol and treatment approach:</h3>
<p><strong>Prophylaxing with Cannabidiol (CBD) oil</strong>:</p>
<p>A preprint research <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7987002/" target="_blank" rel="noopener noreferrer">study<OutboundLink/></a> reported that Cannabidiol (CBD), a compound produced by the Cannabis plant, whose medicinal properties are well recognized in holistic medicine, inhibits SARS-CoV-2 infection. CBD and its metabolite, 7-OH-CBD, but not congeneric Cannabinoids, potently block SARS-CoV-2 replication in lung epithelial cells. CBD acts after cellular infection, inhibiting viral gene expression and reversing many effects of SARS-CoV-2 on host gene transcription. CBD induces Interferon expression and up-regulates its antiviral signaling pathway. A cohort of human patients previously taking CBD had significantly lower SARSCoV-2 infection incidence of up to an order of magnitude relative to matched pairs or the general population. The study highlighted CBD, and its active metabolite, 7-OH-CBD, as potential preventative agents and therapeutic treatments for SARS-CoV-2 at early stages of infection. Here is a reference page with <a href="https://www.hempurecbd.com/articles/cbd-oil-dosage-chart-how-much-cbd-oil-should-i-take/" target="_blank" rel="noopener noreferrer">dosing information on prophylactic CBD.<OutboundLink/></a></p>
<p><a href="https://www.medicalnewstoday.com/articles/322384#_noHeaderPrefixedContent" target="_blank" rel="noopener noreferrer">11 scientifically validated natural blood thinners to mitigate thrombocytopenia<OutboundLink/></a>:</p>
<ol>
<li><strong><a href="https://www.healthline.com/nutrition/turmeric-dosage" target="_blank" rel="noopener noreferrer">Raw turmeric root<OutboundLink/></a></strong>, well-known and used for its anti-inflammatory and antiviral effect as well (with active ingredient, Curcumin)</li>
<li><strong>Raw ginger root</strong>, also commonly used for its anti-inflammatory effect (Contains Salicylate, of which Aspirin is a synthetic derivative)</li>
<li><strong>Cayenne pepper seeds</strong>, grown in subtropical regions, including in parts of India (with active ingredient Salicylate, reduces blood pressure, improves blood circulation)</li>
<li><strong>Vitamin E</strong>, of which <strong>almonds and sunflower seeds and oil</strong> are a common food source</li>
<li><strong>Garlic</strong>, which is well-known to have a powerful antithrombotic effect, as well as anti-inflammatory and antibiotic effect</li>
<li><strong>Cassia Cinnamon or Chinese Cinnamon bark</strong> (with active ingredient, Coumarin)</li>
<li><strong>Gingko Biloba (or maidenhair tree) leaves</strong>, used commonly in Chinese traditional medicine, which was shown in a study to have fibrinolytic effects similar to Streptokinase</li>
<li><strong><a href="https://www.organicfacts.net/grape-seed-extract.html" target="_blank" rel="noopener noreferrer">Grape seed extract<OutboundLink/></a></strong>; the antioxidants in this extract are, in fact, considered 30-50 times more potent than vitamin C in terms of protecting the body from pathogens.</li>
<li><strong>Dong Quai, or Female Ginseng</strong> (with active ingredient, Coumarin)</li>
<li><strong>Feverfew leaves and flowerheads</strong>, a medicinal herb from the same family as daisies or Asteraceae, commonly used in fold medicine to treat fever, arthritis, migraine and topical inflammation like insect bites, and is also an anticoagulant</li>
<li><strong>Bromelain</strong>, anti-inflammatory and anticoagulant, commonly found in <strong>pineapples</strong></li>
</ol>
<p><strong>Miscellaneous recommendations by a practising naturopath, Sh. Albert Y Zacharia :</strong></p>
<p><strong>An anticoagulant tea- ginger + raw garlic + turmeric:</strong>
Boil 2 teaspoonsful of ginger with 1 teaspoonful each of raw garlic and turmeric in half a cup of water, simmer for 5 minutes. Sip while warm. Consume this tea while warm, after dinner.</p>
<p><strong>Home remedies for cough:</strong></p>
<ol>
<li>4 teaspoonsful of <strong>liquorice root or root powder with honey</strong>, 3-6 times a day, according to severity</li>
<li>5g <strong>raw turmeric</strong> had on an empty stomach before meals, or 1 teaspoonful organic turmeric powder in a glass of warm water, sipped slowly. Warm turmeric water could also be used for gargling.</li>
</ol>
<p><strong>A herbal decoction or Kashaya for fever and headache:</strong>
3-4 <strong>black pepper corns</strong>, 2 inches <strong>Giloy</strong> (Amrutavalli / Guduchi) <strong>stem</strong> crushed, 1 <strong>clove</strong>, 1 <strong>Cardamon</strong> or Elaichi, 10-12 <strong>Tulasi or Holy basil leaves</strong>, 4 g <strong>fresh ginger root</strong>, 4 g <strong>raw turmeric</strong>, boiled in 400 ml or around 1 and 1/2 cups of water till the water is reduced to half. Sip slowly while warm.</p>
<p><strong>Home remedies for stomach ache and indigestion:</strong>
Fast on coconut water. Consume 1 teaspoonful each of ginger root juice and mint juice in 50 ml, or less than a quarter cup of water. Place a cool or cold wet cloth on the stomach.</p>
<p><strong>Kadukkai / Haritaki / Chebulic myrobalan nut powder in warm water:</strong>
Mix a quarter or half teaspoon powdered dried nut of Haritaki / Chebulic myrobalan / Kadukkai / Terminalia chebula, a bitter nut of tremendous medicinal potency in Ayurveda, in warm water and sip slowly. Sometimes purgative, this treatment greatly assists detoxification of the digestive tract and eventual relief in about an hour. The powder can also be consumed as such, mixed with a little honey for taste and added benefit.&quot;</p>
<h3 id="typical-duration-of-treatment-13"><a class="header-anchor" href="#typical-duration-of-treatment-13">#</a> Typical duration of treatment:</h3>
<p>Can be used as supplementary treatment for prophylaxis and cure</p>
<h3 id="outcome-13"><a class="header-anchor" href="#outcome-13">#</a> Outcome:</h3>
<p>The anti-inflammatory and anticoagulant properties of these herbs have been empirically proven in traditional medicine for many centuries or millennia, and in many cases, have been proven in evidence-based research as well.</p>
<h3 id="significant-side-effects-13"><a class="header-anchor" href="#significant-side-effects-13">#</a> Significant side effects:</h3>
<p>None reported.</p>
<h3 id="recommended-quantity-for-stocking-13"><a class="header-anchor" href="#recommended-quantity-for-stocking-13">#</a> Recommended quantity for stocking:</h3>
<p>Stock the food supplements for regular use, for their immune-suppoortive benefits.</p>
<h3 id="price-13"><a class="header-anchor" href="#price-13">#</a> Price:</h3>
<p>Most ingredients are commonly found in Indian kitchens</p>
<h3 id="suggested-suppliers-13"><a class="header-anchor" href="#suggested-suppliers-13">#</a> Suggested suppliers:</h3>
<p>Online and local stores</p>
<h3 id="further-references-13"><a class="header-anchor" href="#further-references-13">#</a> Further references:</h3>
<p><a href="https://www.medicalnewstoday.com/articles/322384#_noHeaderPrefixedContent" target="_blank" rel="noopener noreferrer">Medical News Today: Blood-thinning foods, drinks, and supplements<OutboundLink/></a></p>
<p><a href="https://www.netmeds.com/health-library/post/haritaki-amazing-ways-the-miraculous-herb-benefits-you" target="_blank" rel="noopener noreferrer">Haritaki: Amazing Ways The Miraculous Herb Benefits You<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3251648/" target="_blank" rel="noopener noreferrer">Handbook For Health, a compilation of tried and tested home remedies by Kerala naturopath, Albert Y. Zacharia (Inner Expansion Coach, +91 8921697928)<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7987002/" target="_blank" rel="noopener noreferrer">Preprint, bioRxiv.org: Cannabidiol Inhibits SARS-CoV-2 Replication and Promotes the Host Innate Immune Response; Long Chi Nguyen et al.; Mar, 2021<OutboundLink/></a></p>
<p><a href="https://www.hempurecbd.com/articles/cbd-oil-dosage-chart-how-much-cbd-oil-should-i-take/" target="_blank" rel="noopener noreferrer">hempurecbd.com: CBD Oil Dosage Chart- How Much CBD Oil Should I Take?; Sabina King<OutboundLink/></a></p>
<p>In this early study, the direct interaction between certain Ayurvedic herbal compounds like Ashwagandha, black pepper, turmeric and Neem and the viral or host protein were explored, and it was found that these compounds restrict the virus' attachment to the host cell receptor ACE2 by inhibiting the spike glycoprotein of the SARS-CoV-2 virus. In fact, it was found that turmeric and Neem do so better even than HCQ:
<a href="https://timesofindia.indiatimes.com/city/lucknow/turmeric-neem-effective-against-coronavirus-says-kgmu-study/articleshow/76165100.cms" target="_blank" rel="noopener noreferrer">Turmeric, neem [and Tulasi] effective against coronavirus, says KGMU study; Yusra Husain; July, 2020<OutboundLink/></a></p>
<p><a href="https://www.healthline.com/nutrition/turmeric-dosage" target="_blank" rel="noopener noreferrer">healthline.com: Turmeric Dosage: How Much Should You Take Per Day?- Benefits, Dosage, Who Shouldn't Take It, Adverse Effects, Buying the Right Kind, Bottom Line; Makayla Meixner, MS, RDN; June 11, 2018<OutboundLink/></a></p>
<p><a href="https://www.turmericforhealth.com/turmeric-benefits/health-benefits-of-black-pepper-and-turmeric" target="_blank" rel="noopener noreferrer">A relatively comprehensive website about turmeric: Turmeric For Health<OutboundLink/></a></p>
<h2 id="_15-proposed-evidence-based-natural-therapies-to-mitigate-adverse-effects-and-inflammation-caused-by-the-covid-vaccines"><a class="header-anchor" href="#_15-proposed-evidence-based-natural-therapies-to-mitigate-adverse-effects-and-inflammation-caused-by-the-covid-vaccines">#</a> 15. Proposed / evidence-based natural therapies to mitigate adverse effects and inflammation caused by the Covid vaccines</h2>
<h3 id="objective-14"><a class="header-anchor" href="#objective-14">#</a> Objective</h3>
<p>Naturopathic protocols to protect those who have been injected with the mRNA / DNA producing spike proteins, and to minimize damage from the spike protein and its derivatives, or other toxins due to injection and to protect from spike protein shedding by vaccinated contacts</p>
<h3 id="system-14"><a class="header-anchor" href="#system-14">#</a> System</h3>
<p>Natural and herbal medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-14"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-14">#</a> Can be used alongside other allopathic treatments</h3>
<p>Yes</p>
<h3 id="status-of-authorisation-14"><a class="header-anchor" href="#status-of-authorisation-14">#</a> Status of authorisation:</h3>
<p>Most assertions in these recommendations of natural medicine appear to be supported by adequate research evidence and substantial empirical data from centuries of use by traditional and folk therapies.</p>
<h3 id="protocol-and-treatment-approach-14"><a class="header-anchor" href="#protocol-and-treatment-approach-14">#</a> Protocol and treatment approach:</h3>
<p><strong>Fasting, water and coconut fasting:</strong>
<strong>Water fasting for 7 days (or as many days as feels comfortable, under a naturopath's guidance), and drinking a lot of water</strong>, are both potent and highly evidence-based naturopathic therapies to detoxify the body at any time, and especially post vaccination. Prolonged and rigorous fasting is best not undertaken more than once an year. <strong>Tender coconut water</strong> is abundant in nourishing electrolytes and is considered a good detoxifying drink.</p>
<hr>
<p><strong><a href="https://deeprootsathome.com/3-foods-that-contain-shikimic-acid-to-halt-transmission/" target="_blank" rel="noopener noreferrer">Pine needle tea<OutboundLink/></a> (with pine, fir, cedar and spruce needles), recommended by Dr. Judy Mikovits:</strong></p>
<p><strong>Dr. Judy Mikovits recommended pine needle tea from pine, fir, cedar and spruce needles, for its evidence-based active ingredient <a href="https://www.news-medical.net/news/20201012/Suramin-shows-promise-as-COVID-19-treatment.aspx" target="_blank" rel="noopener noreferrer">Suramin<OutboundLink/></a>, as a spike protein neutralizing agent. (If foraging pine needles oneself, must bear in mind that the yew is not really a pine and its needle, though of certain therapeutic value, are also known to possess toxicity.)</strong></p>
<p><strong>Dosage:</strong>
<strong>3 cups per day or more of any desired strength</strong> (based on the quantity of needles added to a french press or teapot) with an approximate 1-3 tablespoons of needles per cup of near boiling water. This is a maintenance health-building dose.</p>
<p>Stronger amounts of needles to water can be used therapeutically. If it feels too acidic (due to the vitamin C) for your system, moderate the quantity and complement the tea with alkalizing food and dark green herbs or sea vegetables.</p>
<hr>
<p><strong><a href="https://tryblue.org/blogs/news/summary-of-the-spike-protein-protocol" target="_blank" rel="noopener noreferrer">Summary of David Wolfe's Spike Protein Protocol<OutboundLink/></a></strong></p>
<p><strong>A number of herbs and herbal formulations containing high concentrations of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3251648/" target="_blank" rel="noopener noreferrer">Shikimic acid<OutboundLink/></a>, Hesperidin and other beneficial antiviral and anti-inflammatory compounds:</strong>
<strong>The focus on Shikimic acid has increased for its potent antiviral properties, since it is the the starting material in the commercial synthesis of Oseltamivir phosphate, commonly known as Tamiflu, the only drug effective against various flu viruses.</strong> This has led to tremendous increase in the demand of Shikimic acid worldwide. Currently, it is sourced principally from the seeds of the Chinese plant Star anise (Illicium verum) known to contain about 2 – 7% of Shikimic acid, which is one of the highest reported concentrations in plants.</p>
<ul>
<li><a href="https://deeprootsathome.com/3-foods-that-contain-shikimic-acid-to-halt-transmission/" target="_blank" rel="noopener noreferrer">Star anise and fennel<OutboundLink/></a> are reported to be good sources of Shikimic acid, available in Indian stores. <strong>Star anise + Fennel tea</strong> could be made with freshly powdered or crushed Star anise prepared into an extract or decoction with water.</li>
<li><a href="https://getbetterwellness.com/blockspike/" target="_blank" rel="noopener noreferrer">Dandelion leaves<OutboundLink/></a>: Studies have established that the leaves of the common dandelion plant Taraxacum officinale efficiently blocks the interaction between ACE2 cell surface recceptor and the SARS-CoV-2 spike protein in the original virus and in many mutants. Dandelion leaves can be consumed as aqueous decoction / tea.</li>
<li><strong><a href="https://pubmed.ncbi.nlm.nih.gov/33746069/" target="_blank" rel="noopener noreferrer">Nigella sativa<OutboundLink/></a> / Krishnajeera / Karumjeerakaam / Kalonji</strong>: Published research establishes that Nigellidine strongly binds to the spike protein, which in turn hampers its binding to the ACE2 cell receptors.</li>
<li><strong><a href="https://www.rxlist.com/schisandra/supplements.htm" target="_blank" rel="noopener noreferrer">Schizandra berry<OutboundLink/></a> / Fructus schisandrae tea, <a href="https://pubmed.ncbi.nlm.nih.gov/24415683/" target="_blank" rel="noopener noreferrer">rich in Shikimate<OutboundLink/></a></strong>, among other highly beneficial properties such as being protective of the liver, and ranked as one of the most potent superherbs; a herb used in Traditional Chinese Medicine</li>
<li><a href="http://jddtonline.info/index.php/jddt/article/view/4153/3222" target="_blank" rel="noopener noreferrer">Triphala formulations<OutboundLink/></a>: In Sanskrit, the word Triphala means &quot;&quot;three fruits”: a combination of Indian gooseberry (Emblica officinalis), Black myrobalan (Terminalia chebula) and Belleric myrobalan (Terminalia belerica). The Terminalia fruits are rich in Shikimate, as is Indian gooseberry.</li>
<li><strong>St. John’s Wort / Hypericum Perforatum / <a href="https://www.ayurtimes.com/st-johns-wort-hypericum-perforatum/" target="_blank" rel="noopener noreferrer">Choli phulya<OutboundLink/></a> / Vettai pakku</strong>: Shikimate is found throughout the entire plant and in the flowers.</li>
<li><strong>Comfrey leaf / Symphytum officinale</strong>, long recognized in traditional medicine for its <a href="https://cdn.mdedge.com/files/s3fs-public/Document/September-2017/CT091050225_0.pdf" target="_blank" rel="noopener noreferrer">wonderful curative qualities<OutboundLink/></a>, is rich in Shikimate.</li>
<li><a href="https://deeprootsathome.com/discover-no-side-effect-migraine-remedy/" target="_blank" rel="noopener noreferrer">Feverfew leaves and flowers<OutboundLink/></a> are rich in Shikimate, and help the body to remove the prions introduced through the vaccines' spike proteins. Feverfew is available as capsules as well.</li>
<li><a href="https://pubmed.ncbi.nlm.nih.gov/21869955/" target="_blank" rel="noopener noreferrer">Gingko biloba / Maidenhair tree / Baalkumari leaf<OutboundLink/></a>, available as well in capsules, is also rich in Shikimate.</li>
<li><strong><a href="https://www.freepatentsonline.com/y2016/0176799.html" target="_blank" rel="noopener noreferrer">Giant hyssop<OutboundLink/></a> / Horsemint / Agastache urtifolia</strong>, rich in Shikimate, commonly used in Traditional Chinese Medicine as well</li>
<li><a href="https://www.sciencedirect.com/science/article/pii/S0040403908003791" target="_blank" rel="noopener noreferrer">Liquid ambar<OutboundLink/></a> / <a href="https://deeprootsathome.com/sweetgum-a-medicine-tree-w-shikimic-acid-to-halt-viral-replication/" target="_blank" rel="noopener noreferrer">Sweet gum tree<OutboundLink/></a>: Tea brewed from the spiky seed pods is rich in Shikimate.</li>
<li><a href="https://www.news-medical.net/news/20210105/Glycyrrhizin-in-licorice-root-neutralizes-SARS-CoV-2-in-vitro-by-inhibiting-the-main-protease-Mpro.aspx" target="_blank" rel="noopener noreferrer">Glycyrrhiza glabra / Liquorice / Yashtimadhu / Mulethi<OutboundLink/></a>: The root of liquorice is commonly used in indigenous medicine, particularly in Ayurveda and Traditional Chinese Medicine. Glycyrrhizic acid, exttracted from the root of the Liquorice plant, is found to inhibit the spike protein.</li>
<li><a href="https://www.researchsquare.com/article/rs-27151/v1" target="_blank" rel="noopener noreferrer">Neem oil and capsules<OutboundLink/></a>: Neem is a powerful immuno-supportive herb, with over 130 active agents that help mitigate viral and bacterial illnesses, including compounds that have a high binding affinity to the spike protein.</li>
<li><a href="https://www.researchsquare.com/article/rs-27151/v1" target="_blank" rel="noopener noreferrer">Tulasi / Holy basil / Ocimum sanctum<OutboundLink/></a>:  A study found several compounds in Tulasi, methyl eugenol, oleanolic acid and ursolic acid to have a high degree of binding affinity to both surface spike glycoprotein and RNA polymerase of SARS-CoV-2, higher even than the mainstream therapeutic Remdesivir for Covid-19.</li>
<li><a href="https://innovareacademics.in/journals/index.php/ajpcr/article/view/41575" target="_blank" rel="noopener noreferrer">Wheatgrass juice<OutboundLink/></a>: Aqueous extract of wheatgrass blades have been claimed by some sources to be high in Shikimate. However their immensely potent anti-inflammatory and vitalizing benefits are well-known to traditional, folk and nutritional medicine.</li>
<li><a href="https://www.preprints.org/manuscript/202006.0321/v1/download" target="_blank" rel="noopener noreferrer">Organic citrus fruits, especially blood oranges<OutboundLink/></a>, have a higher concentration of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7465267/" target="_blank" rel="noopener noreferrer">Hesperidin<OutboundLink/></a>, which is a Chalcone like Quercetin, that neutralizes the spike protein.</li>
<li><strong>Medicinal Mushrooms like Shitake, Lion's mane, Chaga, Turkey tail etc.</strong></li>
<li><a href="https://news.ksu.edu.sa/en/node/103234" target="_blank" rel="noopener noreferrer">Ajwah dates<OutboundLink/></a>, the dark brown, almost black, soft dates from the Al-Madinah Al-Munawarah region of Saudi Arabia and <a href="https://islamhashtag.com/ajwa-dates-immense-medicinal-benefits/" target="_blank" rel="noopener noreferrer">praised by the Prophet Muhammad<OutboundLink/></a> for its nutritious and vitalizing qualities, which are renowned in the Middle East for their curative powers</li>
<li><a href="https://www.academia.edu/23928154/Prospecting_Germinating_Sprouts_as_Potential_Sources_for_Shikimic_Acid_Production" target="_blank" rel="noopener noreferrer">Plant sprouts<OutboundLink/></a> are generally considered to be rich in Shikimate, especially of <strong>Red kidney, Moth, Soya, Moong beans. A study revealed that maximum acid concentration was attained at 4 days from the start of germination, after which the content either reached a plateau or started to diminish. <a href="https://www.academia.edu/23928154/Prospecting_Germinating_Sprouts_as_Potential_Sources_for_Shikimic_Acid_Production" target="_blank" rel="noopener noreferrer">Green gram (Mung)<OutboundLink/></a> was found to yield ~ 8 mg of Shikimic acid per gram of sprouts (on dry weight basis) which was highest amongst the studied sprouts.</strong></li>
<li><strong>Full-spectrum hemp extract, or <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7987002/" target="_blank" rel="noopener noreferrer">full-spectrum Cannabidiol (CBD) oil<OutboundLink/></a></strong> is known to have very powerful beneficial <a href="https://pubchem.ncbi.nlm.nih.gov/compound/cannabidiol" target="_blank" rel="noopener noreferrer">effects on the endocannabinoid system<OutboundLink/></a>, which regulates almost every internal function.</li>
</ul>
<hr>
<p><strong>Food sources of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7402141/" target="_blank" rel="noopener noreferrer">Glutathione<OutboundLink/></a>-precursors:</strong></p>
<ul>
<li><strong><a href="https://www.healthline.com/nutrition/milk-thistle-benefits#TOC_TITLE_HDR_6" target="_blank" rel="noopener noreferrer">Milk thistle<OutboundLink/></a> / Silybum marianum</strong> helps to prevent Glutathione depletion in the liver. It is also a natural liver detoxifier and liver protectant.</li>
<li><strong>Asparagus / Shataavari</strong> is the best plant source of Glutathione.</li>
<li><strong>Okra</strong> is also naturally high in Glutathione and assists in the elimination of the mucoid plaque in the small intestines.</li>
<li><strong>Rice bran</strong>, high in Alpha Lipoic Acid (ALA) promotes the synthesis of Glutathione in the body.</li>
<li>Several spices commonly used in Indian cuisine including <strong>Turmeric, Cinnamon, Cardamom and Black cumin / Nigella sativa</strong> contain Glutathione.</li>
<li>Rosemary herb</li>
<li><strong>Sulfur-containing, cruciferous vegetables, like kale, broccoli, Brussels sprouts, cabbage, onions, garlic, cauliflower, bok choy, watercress, mustard, horseradish, turnips, rutabagas, kohlrabi etc.</strong>, assist in the making of Glutathione in the body, as Glutathione is a sulfur-containing molecule.</li>
<li><strong>Sulfurous black salt, Saindhava salt / Lavana</strong> in Sanskrit</li>
<li><strong>Bilberry</strong></li>
<li><strong>Avocado</strong></li>
<li><strong>Red beets</strong> (available as capsules)</li>
<li><strong>Aloe vera</strong> (available as capsules)</li>
<li><strong>Peaches and Watermelon</strong>, among fruits</li>
<li><strong>Spinach and Parsley</strong></li>
<li>Pycnogenol, from <strong>pine bark</strong></li>
<li>The <strong>Brazil nut</strong> is one of the highest natural sources of Selenium. Selenium is a cofactor for the enzyme Glutathione peroxidase.</li>
</ul>
<p><strong>To get the most glutathione out of raw, uncooked foods, the gut must be healthy. Therefore, it is important to have probiotics daily, and modify diet to eliminate candida, achieve heavy metal detoxification and improve gut health to maximize absorption.</strong></p>
<hr>
<p><strong>Other nutraceutical supplements to neutralize the inflammatory spike proteins:</strong></p>
<ul>
<li><strong>Chlorine Dioxide Solution (CDS) aka Miracle Mineral Supplement (MMS)</strong></li>
<li><strong>Coated Silver</strong> (1-6 drops per day, depending on degree of exposure) (Coated silver blocks the sulfur-bearing protein on the spikes from entering the cell. Sulfur-rich amino acids on the spike protein interact with silver causing them to fold incorrectly).</li>
<li><strong>NAC (N-acetyl cysteine)</strong> (accelerates detoxification and is considered a precursor of the super-detoxifier Glutathione in the body) Dosage: 1200-2400 mg per day on an empty stomach. NAC is recommended to detoxify Graphene oxide and SM-102. NAC is tough to find after the FDA recently made it illegal to purchase over the counter in the USA.</li>
<li><strong>Zinc</strong> (30-80 mg per day depending on immunological pressure)</li>
<li><strong>Vitamin D3</strong> (10,000 IU per day), and simultaneously <strong>supplementing also with <a href="https://www.sciencedirect.com/science/article/pii/S120197122030624X" target="_blank" rel="noopener noreferrer">vitamin K2<OutboundLink/></a>, and <a href="https://www.sciencedirect.com/science/article/pii/S037851222030284X" target="_blank" rel="noopener noreferrer">Calcium and Magnesium<OutboundLink/></a> if these are deficient</strong></li>
<li><strong>Lypospheric Vitamin C</strong> (30 ml, twice daily)</li>
<li><strong>Quercetin</strong> (500-1000 mg, twice daily)</li>
<li><strong>Iodine</strong> (dosage depends on brand, more is not better. Iodine is a product you have to start with small dosages and build up over time.</li>
<li><strong>Pyrroloquinoline Quinone (PQQ) (20-40 mg per day)</strong></li>
<li><strong>C60 (1-3 droppers full per day)</strong></li>
<li><strong>Charcoal (2-4 capsules a day)</strong></li>
</ul>
<p><strong>Enzymes</strong>:</p>
<ul>
<li><strong>Nattokinase (enzyme)</strong>: <a href="https://www.healthline.com/nutrition/natto" target="_blank" rel="noopener noreferrer">Natto<OutboundLink/></a> is a traditional Japanese food made from soybeans that have been fermented with Bacillus subtilis var. natto. Natto (also rich in vascular protective Vitamin K2) and Nattokinase have a history of being used to prevent blood clots. The idea is here is that the enzyme Nattokinase aids in dissolving clots. Dosage: 2000-4000 Fibrinolytic Units per day (2-4 capsules) with or without food.</li>
<li><strong>Serrapeptase (enzyme)</strong>: Serrapeptase is an anti-inflammatory proteolytic enzyme in the Trypsin family. Like other proteolytic enzymes, Serrapeptase helps break down proteins into smaller particles. It can promote healing by reducing fluid and debris accumulation that occur around necrotic or injured tissue. Dosage: 100-200 mg on an empty stomach per day.</li>
</ul>
<p><strong>Oxygen Therapies</strong>:
Ozone and Oxygen therapies are effective at degrading spike proteins and Graphene oxide. All forms may be recommended, according to one source, from consuming MMS (Miracle Mineral Solution / Chlorine Dioxide Solution) to drinking ozonated water, or using ozonated water for enemas, and even ozone injections by a trained health professional.</p>
<p><strong>Chlorine Dioxide Solution (CDS) / ClO2 / Miracle Mineral Solution (MMS):</strong>
CDS / ClO2 was carefully researched for over 13 years by <a href="https://andreaskalcker.com/en/coronavirus/clinical-study-with-chlorine-dioxide.html" target="_blank" rel="noopener noreferrer">Andreas Kalcker<OutboundLink/></a>, a German biochemist. The great efficacy of the treatment, though not acknowledged by mainstream scientific platforms, is reported to have been extensively established in wide clinical trials in Central and South America, and especially in Bolivia.</p>
<h3 id="typical-duration-of-treatment-14"><a class="header-anchor" href="#typical-duration-of-treatment-14">#</a> Typical duration of treatment:</h3>
<p>The proposed medicinal herbs are prophylactic, and may be recommended to be used for at least 6 months post vaccination, and possibly longer, in addition to adopting anti-inflammatory and immune-supportive lifestyles.</p>
<h3 id="outcome-14"><a class="header-anchor" href="#outcome-14">#</a> Outcome:</h3>
<p>There is substantial research and empirical evidence for the medicinal value of these herbs, which have been commonly prescribed to treat various ailments in traditional systems of medicine across the world. Some of this research is cited here in embedded links in the Protocol and other columns, and in the References.</p>
<h3 id="significant-side-effects-14"><a class="header-anchor" href="#significant-side-effects-14">#</a> Significant side effects:</h3>
<p><strong>Pregnant and lactating mothers are advised to use herbal remedies with caution, and only after appropriate research and consultation with a knowledgeable physician. Some exotic herbal compounds may provoke allergic reaction in some, and it is always advisable to first test for such allergies on skin, and by consuming small amounts to begin with to note any adverse reactions.</strong></p>
<p>An equivocal review of existing rigorous research about the beneficial versus adverse effects of a few of these medicinal plants suggests significant potential for interaction with conventional medications, and the need for caution in using them as adjunct therapy: <a href="https://pubmed.ncbi.nlm.nih.gov/11777363/" target="_blank" rel="noopener noreferrer">The risk-benefit profile of commonly used herbal therapies: Ginkgo, St. John's Wort, Ginseng, Echinacea, Saw Palmetto, and Kava; Edzard Ernst; Annals of Internal Medicine; Jan, 2002<OutboundLink/></a></p>
<h3 id="recommended-quantity-for-stocking-14"><a class="header-anchor" href="#recommended-quantity-for-stocking-14">#</a> Recommended quantity for stocking:</h3>
<p>The more efficacious and cost effective supplements could be stocked for regular / prophylactic use as well. However, most registered dietitians recommend getting nutrients from whole foods rather than supplements whenever possible.</p>
<h3 id="price-14"><a class="header-anchor" href="#price-14">#</a> Price:</h3>
<p><strong>VACANT VACANT VACANT</strong></p>
<h3 id="suggested-suppliers-14"><a class="header-anchor" href="#suggested-suppliers-14">#</a> Suggested suppliers:</h3>
<p>Online pharmacies and local stores</p>
<h3 id="further-references-14"><a class="header-anchor" href="#further-references-14">#</a> Further references:</h3>
<p><a href="https://www.researchgate.net/publication/350195367_Common_dandelion_Taraxacum_officinale_efficiently_blocks_the_interaction_between_ACE2_cell_surface_receptor_and_SARS-CoV-2_spike_protein_D614_mutants_D614G_N501Y_K417N_and_E484K_in_vitro" target="_blank" rel="noopener noreferrer">researchgate.net: Common dandelion (Taraxacum officinale) efficiently blocks the interaction between ACE2 cell surface receptor and SARS-CoV-2 spike protein D614, mutants D614G, N501Y, K417N and E484K in vitro; Hoai Thi Thu Tran; March, 2021<OutboundLink/></a></p>
<p><a href="https://www.news-medical.net/news/20201012/Suramin-shows-promise-as-COVID-19-treatment.aspx" target="_blank" rel="noopener noreferrer">news-medical.net: Suramin shows promise as COVID-19 treatment; Dr. Liji Thomas, MD; Oct, 2020<OutboundLink/></a></p>
<p><a href="https://www.bitchute.com/video/9JPCaD4awC4t/" target="_blank" rel="noopener noreferrer">JUDY MICKOVITZ ON POTENTIAL ANTIDOTE TO VACCINE (SURAMIN)<OutboundLink/></a></p>
<p><a href="https://www.bitchute.com/video/cSp0VjOP0OKq/" target="_blank" rel="noopener noreferrer">Dr. Judy Mikovits discusses the SARS-CoV-2 pandemic with Dr. Joseph Mercola; May 1, 2020<OutboundLink/></a></p>
<p><a href="https://www.brighteon.com/7c129e86-7e2b-47a7-bc74-dd19621e4042" target="_blank" rel="noopener noreferrer">Health Ranger Report: Is pine needle tea the answer to covid vaccine shedding? Suramin, shikimic acid and science; May, 2021<OutboundLink/></a></p>
<p><a href="https://whitehatauxiliaries.files.wordpress.com/2021/09/how-to-neutralize-potential-damage-from-mrna-vaine-deactivate-neutralize-g.pdf" target="_blank" rel="noopener noreferrer">An informal blog page compiling much of this information, and more, from a variety of sources: How to neutralize potential toxicity from mRNA vaccines<OutboundLink/></a></p>
<p><a href="https://www.alternativemedicine.news/2021-07-27-nigella-sativa-black-seed-prevents-covid-damage.html" target="_blank" rel="noopener noreferrer">alternativemedicine.news: Molecule in Nigella sativa (black seed) may prevent spike protein-induced vascular damage, scientists conclude in published paper indexed by NIH (updated); Ethan Huff; July, 2021<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/33746069/" target="_blank" rel="noopener noreferrer">In silico Nigellidine (N. sativa) bind to viral spike/active-sites of ACE1/2, AT1/2 to prevent COVID-19 induced vaso-tumult/vascular-damage/comorbidity; Smarajit Maiti et al.; Vascular Pharmacology; June, 2021<OutboundLink/></a></p>
<p><a href="https://getbetterwellness.com/blockspike/" target="_blank" rel="noopener noreferrer">Get Better Wellness / Health News: Black seed and Dandelion leaf extract block spike protein from binding to ACE-2 receptors; Sept 14, 2021<OutboundLink/></a></p>
<p><a href="https://www.academia.edu/23928154/Prospecting_Germinating_Sprouts_as_Potential_Sources_for_Shikimic_Acid_Production" target="_blank" rel="noopener noreferrer">Prospecting Germinating Sprouts as Potential Sources for Shikimic Acid Production; Snehal Menon et al.; 1st International Congress on Environmental, Biotechnology, and Chemistry Engineering; 2014<OutboundLink/></a></p>
<p><a href="https://deeprootsathome.com/3-foods-that-contain-shikimic-acid-to-halt-transmission/" target="_blank" rel="noopener noreferrer">deeprootsathome.com: 3 Foods That Contain Shikimic Acid to Halt Spike Protein Transmission; Jacqueline; Sept 24, 2021<OutboundLink/></a></p>
<p><a href="https://pubmed.ncbi.nlm.nih.gov/21869955/" target="_blank" rel="noopener noreferrer">(Efficient) extraction and isolation of shikimic acid from Ginkgo biloba leaves utilizing an ionic liquid that dissolves cellulose; Toyonobu Usuki et al.; Chemical Communications (Cambridge, England); Oct, 2011<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3251648/" target="_blank" rel="noopener noreferrer">Shikimic acid: review of its analytical, isolation, and purification techniques from plant and microbial sources; Denis V. Bochkov et al.; Journal of Chemical Biology; Jan, 2012<OutboundLink/></a></p>
<p><a href="https://deeprootsathome.com/a-foreshadowing-buried-82-miscarriage-data-in-new-nejm-study/" target="_blank" rel="noopener noreferrer">deeprootsathome.com: An informal article analysing a NEJM study of impact of Covid-19 vaccine on pregnant women: Shedding &amp; Breastfeeding, Buried Miscarriage Data in New NEJM Study; Jacqueline; Oct 6, 2021<OutboundLink/></a></p>
<p><a href="https://deeprootsathome.com/3-foods-that-contain-shikimic-acid-to-halt-transmission/" target="_blank" rel="noopener noreferrer">deeprootsathome.com: 3 Foods That Contain Shikimic Acid to Halt Spike Protein Transmission; Jacqueline; Oct, 2021<OutboundLink/></a></p>
<p><a href="https://deeprootsathome.com/foods-superherbs-high-in-shikimic-acid/" target="_blank" rel="noopener noreferrer">deeprootsathome.com: 15 Foods/Herbs High in Shikimic Acid to Help Disable Spike Protein &amp; GOx; Jacqueline; July 27, 2021<OutboundLink/></a></p>
<p><a href="https://www.mms-supplement.com/" target="_blank" rel="noopener noreferrer">Master Mineral Solution, MMS or WPS Solution - Why has this Product Become so Popular?<OutboundLink/></a></p>
<p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7402141/" target="_blank" rel="noopener noreferrer">The Role of Glutathione in Protecting against the Severe Inflammatory Response Triggered by COVID-19; Francesca Silvagno et al.; Antioxidants; July, 2020<OutboundLink/></a></p>
<p><a href="https://www.everydayhealth.com/diet-nutrition/diet/glutathione-definition-uses-benefits-more/#:~:text=Those%20have%20a%20lot%20of,squash%2C%20spinach%2C%20and%20melons." target="_blank" rel="noopener noreferrer">everydayhealth.com: What Is Glutathione? A Detailed Guide to the Antioxidant and Supplement; Sheryl Huggins Salomon, Medically reviewed by Kelly Kennedy, RDN<OutboundLink/></a></p>
<p><a href="https://www.eatthis.com/news-drink-this-after-covid-19-vaccine/" target="_blank" rel="noopener noreferrer">Eat This, Not That!: Drink This [Green Tea] After Getting the COVID-19 Vaccine, Says the CDC; Cheyenne Buckingham; March 2, 2021<OutboundLink/></a></p>
<p>In this early study, the direct interaction between certain Ayurvedic herbal compounds like Ashwagandha, black pepper, turmeric and Neem and the viral or host protein were explored, and it was found that these compounds restrict the virus' attachment to the host cell receptor ACE2 by inhibiting the spike glycoprotein of the SARS-CoV-2 virus. In fact, it was found that turmeric and Neem do so better even than HCQ:
<a href="https://timesofindia.indiatimes.com/city/lucknow/turmeric-neem-effective-against-coronavirus-says-kgmu-study/articleshow/76165100.cms" target="_blank" rel="noopener noreferrer">Turmeric, neem [and Tulasi] effective against coronavirus, says KGMU study; Yusra Husain; July, 2020<OutboundLink/></a></p>
<h2 id="ctyy"><a class="header-anchor" href="#ctyy">#</a> CTYY</h2>
<p>/<em>Objective:
System:
Can be used alongside other allopathic treatments:
Status of authorisation:
Protocol and treatment approach:
Typical duration of treatment:
Outcome:
Significant side effects:
Recommended quantity for stocking:
Price:
Suggested suppliers:
Further references:</em>/</p>
<p>[270]:</p>
</ContentSlotsDistributor>
"},null]}