{"remainingRequest":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/x/repos/covidcures/docs/src/allopathic.md?vue&type=template&id=ea5986d2&","dependencies":[{"path":"/Users/x/repos/covidcures/docs/src/allopathic.md","mtime":1640947850722},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640777136396},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js","mtime":1640777136291},{"path":"/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1640777135896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><h1 id="allopathic-treatments"><a class="header-anchor" href="#allopathic-treatments">#</a> Allopathic Treatments</h1>
<p><strong>DISCLAIMER</strong>: This information is for educational purposes only. It is not intended to serve as a substitute for diagnosis, treatment, or advice from a qualified, licensed medical professional. Any treatment you undertake should be discussed with your physician or other licensed medical professional.</p>
<p><strong>NOTE</strong>: The information in this tabulation about dosages is primarily for adults. The dosages for children have been mentioned in the case of a few over-the-counter remedies where the data was available.</p>
<h2 id="_1-zelenko-protocol-one-of-the-earliest-protocols-discovered-by-dr-vladimir-zev-zelenko"><a class="header-anchor" href="#_1-zelenko-protocol-one-of-the-earliest-protocols-discovered-by-dr-vladimir-zev-zelenko">#</a> 1. Zelenko Protocol: One of the earliest protocols, discovered by Dr. Vladimir &quot;Zev&quot; Zelenko</h2>
<p><strong>Also, allied protocol developed by Dr. George Fareed</strong>, a Harvard-trained medical doctor with a distinguished career spanning half a century and <strong>Brian Tyson, MD</strong> (Family Medicine), with 14 years experience in ER and hospital medicine&quot;</p>
<h3 id="objective"><a class="header-anchor" href="#objective">#</a> Objective:</h3>
<p>Curative, especially found in effective in early stage treatment in high risk patients</p>
<h3 id="system"><a class="header-anchor" href="#system">#</a> System:</h3>
<p>Repurposed allopathic</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments">#</a> Can be used alongside other allopathic treatments:</h3>
<p>As a thumb rule, allopathic treatment protocols can not be intermixed.</p>
<h3 id="status-of-authorisation"><a class="header-anchor" href="#status-of-authorisation">#</a> Status of authorisation:</h3>
<p>Unauthorised but evidence-based and presently mainstream, clinical study accepted for publication, reported by Dr. Zelenko and other physicians to be significantly more effective than mainstream therapy. Dr. Zelenko has demonstrated a 99 % survival rate of high risk patients with this Zinc + HCQ / Quercetin protocol, of which Zinc is cited as the most important ingredient.</p>
<h3 id="protocol-and-treatment-approach"><a class="header-anchor" href="#protocol-and-treatment-approach">#</a> Protocol and treatment approach:</h3>
<p>(Some of the most effective protocols for Covid-19 use both Hydroxychloroquine and Ivermectin.)</p>
<p><strong>The Zelenko Protocol - Treatment Plan for Patients with Covid-19 symptoms:</strong></p>
<p><strong>Fundamental Principles (Dr Zelenko Protocol- When to Start)</strong>:
<strong>Treat patients based on clinical suspicion as soon as possible, preferably within the first 5 days of symptoms. Perform PCR testing, but do not withhold treatment pending results.</strong></p>
<p><strong>Patient Categories:</strong>
<strong>Low risk patient - Younger than 45, no co-morbidities, and clinically stable</strong>
<strong>High risk patient - Older than 45, younger than 45 with co-morbidities, or clinically unstable</strong></p>
<p><strong>Treatment Options:</strong></p>
<p><strong>Low risk patients - over the counter options:</strong></p>
<p><strong>Supportive care with fluids, fever control, and rest</strong></p>
<ol>
<li>Elemental Zinc 50mg 1 time a day for 7 days (<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7365891/" target="_blank" rel="noopener noreferrer">PubMed<OutboundLink/></a>) (<a href="https://amzn.to/2PdHG9T" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)</li>
<li>Quercetin 500mg 2 times a day for 7 days (<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7318306/" target="_blank" rel="noopener noreferrer">PubMed<OutboundLink/></a>) (<a href="https://amzn.to/3ttJv2x" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)</li>
<li>Vitamin C 1000mg 1 time a day for 7 days (<a href="https://amzn.to/2KZYpvN" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)</li>
<li>Vitamin D3 5000 IU 1 time a day for 7 days (<a href="https://amzn.to/3aHen6G" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)</li>
</ol>
<p>(Note: Vitamin D supplementation is better accompanied by <a href="https://www.sciencedirect.com/science/article/pii/S120197122030624X" target="_blank" rel="noopener noreferrer">vitamin K2<OutboundLink/></a> and <a href="https://pubmed.ncbi.nlm.nih.gov/29480918/" target="_blank" rel="noopener noreferrer">Magnesium<OutboundLink/></a> for better function and absorption.)
<strong>Alternative for Quercetin: Epigallocatechin-gallate (EGCG) 400mg 1 time a day for 7 days (<a href="https://pubs.acs.org/doi/10.1021/jf5014633" target="_blank" rel="noopener noreferrer">J. Agric. Food Chem<OutboundLink/></a>) (<a href="https://amzn.to/3AVKcFo" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)</strong></p>
<p><strong>Moderate / High risk patients:</strong>
Zinc (Elemental) 50-100mg once a day for 7 days
Vitamin C 1000mg 1 time a day for 7 days
Vitamin D3 10,000iu once a day for 7 days or 50,000iu once a day for 1-2 days
Azithromycin 500mg 1 time a day for 5 days (<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7290142/#" target="_blank" rel="noopener noreferrer">Clin. Drug. Investig.<OutboundLink/></a>) OR Doxycycline 100mg 2 times a day for 7 days
Hydroxychloroquine (HCQ) 200mg 2 times a day for 5-7 days (<a href="https://www.sciencedirect.com/science/article/pii/S0924857920304258" target="_blank" rel="noopener noreferrer">ScienceDirect<OutboundLink/></a>) (<a href="https://www.aestheticsadvisor.com/2021/02/find-doctor-prescribe-hydroxychloroquine-ivermectin.html" target="_blank" rel="noopener noreferrer">Find a doctor<OutboundLink/></a>) AND /OR
Ivermectin 0.4-0.5mg/kg/day for 5-7 days (<a href="http://ivmmeta.com/" target="_blank" rel="noopener noreferrer">ivmmeta.com<OutboundLink/></a>) (<a href="https://www.aestheticsadvisor.com/2021/02/find-doctor-prescribe-hydroxychloroquine-ivermectin.html" target="_blank" rel="noopener noreferrer">Find a Doctor<OutboundLink/></a>)</p>
<ul>
<li><strong>Hydroxychloroquine and ivermectin combined? Either or both HCQ and IVM can be used, and if one only, the second agent may be added after about 2 days of treatment if obvious recovery has not yet been observed etc.</strong></li>
<li><strong>If HCQ is not available, Quercetin 500mg 3 times a day for 7 days OR EGCG 400mg 2 times a day for 7 days</strong></li>
</ul>
<p><strong>Both protocols can be viewed from Dr. Zelenko's website.</strong></p>
<p><strong>Other treatment options:</strong>
Dexamethasone 6-12mg 1 time a day for 7 days OR Prednisone 20mg twice a day for 7 days, taper as needed (not suitable during viral phase)
Budesonide 1mg/2cc solution via nebulizer twice a day for 7 days (not suitable during viral phase)
Blood thinners (i.e. Lovenox, Eliquis, Xarelto, Pradaxa, Aspirin) (<a href="https://amzn.to/3wt68nG" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)
Colchicine 0.6mg 2-3 times a day for 5-7 days (<a href="https://www.medrxiv.org/content/10.1101/2021.01.26.21250494v1" target="_blank" rel="noopener noreferrer">MedRxiv 2021<OutboundLink/></a>)
Monoclonal antibodies
Home IV fluids and <a href="https://www.consumerlab.com/reviews/turmeric-curcumin-supplements-spice-review/turmeric/" target="_blank" rel="noopener noreferrer">oxygen<OutboundLink/></a>
<a href="https://www.consumerlab.com/reviews/turmeric-curcumin-supplements-spice-review/turmeric/" target="_blank" rel="noopener noreferrer">Curcumin<OutboundLink/></a>: 500 mg twice a day (<a href="https://c19curcumin.com/" target="_blank" rel="noopener noreferrer">Ref<OutboundLink/></a>) (<a href="https://amzn.to/3zSQ1mm" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)
<a href="https://onedaymd.aestheticsadvisor.com/2021/04/fluvoxamine-COVID-19.html" target="_blank" rel="noopener noreferrer">Fluvoxamine<OutboundLink/></a>: 50 mg twice daily for 10–14 days. Add to ivermectin if: 1) minimal response after 2 days of ivermectin; 2) in regions with more aggressive variants; 3) treatment started on or after day 5 of symptoms or in pulmonary phase; or 4) numerous co-morbidities/risk factors. Avoid if patient is already on an SSRI (selective serotonin reuptake inhibitor).
If you can’t get fluvoxamine (Luvox), using 30mg once a day of fluoxetine (Prozac) is equally effective (equivalent to 50mg twice a day of fluvoxamine).
<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5359817/" target="_blank" rel="noopener noreferrer">Bromhexine<OutboundLink/></a> 8 mg three times a day (<a href="https://c19bromhexine.com/" target="_blank" rel="noopener noreferrer">Ref<OutboundLink/></a>) (<a href="https://invol.co/cl5htvl" target="_blank" rel="noopener noreferrer">Lazada Malaysia<OutboundLink/></a>, not available on Amazon)
Pulse Oximeter: Monitoring your oxygen saturation with a pulse oximeter and to go to the hospital if you get below 94%. (<a href="https://amzn.to/3k4uIZp" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)
Mouthwash: 3 x daily – gargle (do not swallow) antiseptic mouthwash with cetylpyridinium chloride (e.g. <a href="https://amzn.to/37cTGOH" target="_blank" rel="noopener noreferrer">Crest, Scope mouthwash<OutboundLink/></a>), ListerineTM with essential oils, or povidone/iodine 1 % solution as alternative (<a href="https://amzn.to/37bPI99" target="_blank" rel="noopener noreferrer">Betadine®<OutboundLink/></a> Antiseptic Sore Throat Gargle). (<a href="https://covid19criticalcare.com/wp-content/uploads/2020/12/FLCCC-Protocols-%E2%80%93-A-Guide-to-the-Management-of-COVID-19.pdf" target="_blank" rel="noopener noreferrer">Reference<OutboundLink/></a>, page 13)
Nasal Spray: Xlear Nasal Spray with Xylitol (<a href="https://www.biospace.com/article/releases/new-study-concludes-xlear-kills-and-or-deactivates-sars-cov-2-efficacy-against-new-variants/" target="_blank" rel="noopener noreferrer">Ref<OutboundLink/></a>) (<a href="https://amzn.to/2WIMCHB" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>)
Aspirin: 325 mg/day <a href="https://www.drugs.com/aspirin.html" target="_blank" rel="noopener noreferrer">unless contraindicated<OutboundLink/></a>. (<a href="https://amzn.to/3k5HZkq" target="_blank" rel="noopener noreferrer">Amazon<OutboundLink/></a>) (not suitable during viral phase)</p>
<p><strong>Fareed/Tyson COVID-19 Treatment Protocol, derived from the Zelenko Protocol:</strong></p>
<p><strong>Requirements</strong>:
<strong>HCQ</strong> 200 mg tabs #16 (HCQ = hydroxychloroquine);
<strong>Zinc sulfate</strong> 22O mg (or elemental Zinc 50 mg) # 15;
<strong>Azithromycin</strong> 500 mg # 5 (or Z pack) or Doxycycline 100 mg # 14);
<strong>Ivermectin</strong> 3 mg tabs # 12-20;
<strong>Aspirin</strong> 325 mg tabs # 30
<strong>D3</strong> 5000 IU # 30</p>
<p><strong>Start on day 1 of symptom onset.</strong>
<strong>Day 1:</strong>
HCQ 2 tablets twice a day
Zinc capsule or tab twice a day with food
Doxycycline capsule twice a day with food <strong>OR</strong> Azithromycin tab one per day
Ivermectin 12-18 mg on day 1 and on day 3, away from food (i.e., on empty stomach, at least 30 minutes before or 2 hours after food)
Acetyl Salicylic Acid (Aspirin, ASA) 325 mg and
D3 5000 IU daily</p>
<p><strong>Days 2-5:</strong>
HCQ tab 3 times a day;
Zinc capsule or tab 3 times a day with food;
Doxycycline capsule twice a day with food <strong>OR</strong> Azithromycin tab one per day,
Aspirin (ASA) 325 mg daily;
<strong>If symptoms warrant</strong>, Ivermectin 12 mg on day 3, away from food.</p>
<p><strong>Covid-19 MAbs infusion</strong> from an ER / hospital or infusion center, only once, and no later than 7 days after symptoms began.
(Eli Lilly or Regeneron dual Covid-19 monoclonal antibodies used.)</p>
<p><strong>If respiratory symptoms increase:</strong>
<strong>Prednisone</strong> 60 mg daily x 5-7 days <strong>OR</strong> Dexamethasone 4 mg twice a day if oxygen saturation &lt; 94 % or wheezing / shortness of breath;
<strong>Budesonide</strong> 0.5-1 mg / 2 ml vía nebulizer, twice a day;
<strong>Colchicine</strong> 0.6 mg twice a day x 3 days then 0.6 mg daily x 10 days;
<strong>Fluvoxamine</strong> 50 mg twice a day x 5 days;
<strong>Vitamin D3</strong> 5000 IU daily;
Pepcid 20 mg daily;
Continue daily Aspirin 325 mg</p>
<p><strong>Alternative C19 Early Treatment Regimen (Drs. Fareed &amp; Tyson):</strong></p>
<p><strong>Start on day 1 of symptom onset.</strong>
<strong>Days 1-5:</strong>
HCQ tab (200 mg) twice a day for 5 days
IVM 3 mg tabs take 12-18 mg (5-6 tabs) by mouth daily for 2 days minimum and continue the same dose (12-18 mg) daily until recovered for up to maximum 5 days (Take no more than 5 total doses of IVM.)
Fluvoxamine 50 mg bid x 5 days
C19 MAbs infusion from an ER/hospital or infusion center
(Eli Lilly or Regeneron dual Covid-19 monoclonal antibodies used.)</p>
<p><strong>Take HCQ 1 tab every week on the same day until pandemic is over.</strong></p>
<p><strong>If respiratory symptoms increase (worsen):</strong>
Prednisone 40 - 60 mg daily x 5-7 days
<strong>OR</strong> Dexamethasone 4 mg twice a day if Oxygen saturation less than 94% or wheezing or shortness of breath worsening.
Budesonide 0.5-1 mg / 2 ml vía nebulizer twice a day
Colchicine 0.6 mg twice a day x 3 days then 0.6 mg daily x 10 days</p>
<p>D3 5000 IU daily
Pepcid 20 mg daily
Continue daily ASA 325 mg.
Zinc 50 mg daily</p>
<p><strong>Over the counter prevention:</strong></p>
<p><strong>Elemental Zinc</strong> 25 mg once a day;
<strong>Vitamin D</strong> 4000 IU once a day;
<strong>Vitamin C</strong> 1000 mg once a day;
<strong>Quercetin</strong> 500 mg once a day;
if Quercetin is unavailable, then use <strong>Epigallocatechin-gallate (EGCG)</strong> 400 mg once a day</p>
<p><strong>Risk Stratification in patients:</strong></p>
<p><strong>Low Risk Patients</strong>
Young healthy people do not need prophylaxis against COVID-19. In young and healthy people, this infection causes mild cold-like symptoms. It is advantageous for these patients to be exposed to COVID-19, build up their antibodies and have their immune system clear the virus. This will facilitate the development of herd immunity and help prevent future COVID-19 pandemics. However, if these patients desire prophylaxis against COVID-19, then they should take the protocol noted below.</p>
<p><strong>Moderate-Risk Patients</strong>
Patients from this category are healthy but have high potential viral-load exposure. This group includes medical personnel, caregivers of high-risk patients, people who use public transportation, first responders and other essential personnel who are crucial to the continued functioning of society. These patients should be encouraged to take prophylaxis against COVID-19 in accordance with the protocol noted below.</p>
<p><strong>High-Risk Patients</strong>
Patients are considered high risk if they are over the age of 60, or if they are younger than 60 but they have comorbidities, that is, they have other health conditions that put them at risk. These patients have between a 5 to 10 percent mortality rate if they are infected with COVID-19. These patients should be strongly encouraged to take prophylaxis against COVID-19 in accordance with the protocol noted below.</p>
<p><strong>Protocol for Low and Moderate Risk Patients:</strong>
Elemental Zinc 25 mg once a day
Vitamin C 1000 mg once a day
Quercetin 500 mg once a day
If Quercetin is unavailable, then use Epigallocatechin-gallate (EGCG) 400 mg once a day</p>
<p><strong>Protocol for High-Risk Patients:</strong>
Elemental Zinc 25 mg once a day
Hydroxychloroquine (HCQ) 200 mg once a day for five days, then once a week
If HCQ is unavailable, then use the Protocol for Low and Moderate Risk Patients.</p>
<p>In fact, Dr. Zev Zelenko recently clarified that the <strong>zinc and quercetin in the prophylactic diet are the key nutritional ingredients that were found to combat Covid</strong> in his clinical trials.</p>
<p><strong>Fareed/Tyson Prevention and Early Treatment Protocol for Nursing Homes:</strong></p>
<p><strong>Pre-Exposure Prophylaxis:</strong>
This protocol is prescribed for routine adoption, before any resident or staff has been suspected or confirmed to have C19 in the nursing home. This is the regimen that is <strong>recommended, as a preventative measure</strong>, for all residents and staff.</p>
<p><strong>Vitamin D</strong> 4000 IU Daily
<strong>Zinc elemental</strong> 25 mg Daily
<strong>Ivermectin</strong>: Dose 1 of 0.2 mg / kg (body weight) on Day 1, and then a weekly maintenance dose of 0.05 mg / kg or monthly maintenance dose of 0.2 mg / kg.
<strong>Vitamin C</strong> and / or a <strong>quality multivitamin supplement</strong> and possibly <strong>Quercetin</strong> also recommended.</p>
<p><strong>Post-Exposure Prophylaxis:</strong>
This protocol is recommended to be compulsorily adopted when there is even one confirmed case in the nursing home, as this implies that the virus is present and may infect several, many or all the elderly residents. Therefore post-exposure prophylaxis should be provided immediately for all residents and all the staff. The recommended regimen is as follows:</p>
<p>Vitamin D – 4000 iu Daily
Zinc elemental – 25 mg Daily
Ivermectin:  Dose 1 of 0.2 mg / kg (body weight) on Day 1; Dose 2 of 0.2 mg / kg (body weight) on Day 3; Weekly maintenance dose of 0.05 mg / kg (body weight), or a monthly maintenance dose of 0.2 mg / kg.
Vitamin C and / or a quality multivitamin supplement, and possibly Quercetin also recommended.</p>
<p><strong>Early Outpatient Treatment:</strong>
For the residents having tested positive, or with suspected COVID-19, even before the confirmatory test result is known, an early outpatient treatment protocol needs to be immediately provided, within 2 days of first symptoms:</p>
<p>Ivermectin – Dose 1 of 0.2 mg / kg (body weight) on Day 1 - Dose 2 of  0.2 mg / kg (body weight) on Day 3 and Dose 3 of 0.2 mg / kg on Day 5
Doxycycline monohydrate 100 mg twice a day for Days 1 - 5
Continuation of Vitamin D, Zinc and possibly other supplements.</p>
<p><strong>Note that the combination of Ivermectin, Doxycycline and Zinc is the protocol that is recommended for C19, including in nursing homes, by the esteemed and internationally recognized Professor Thomas Borody from Australia.</strong></p>
<h3 id="typical-duration-of-treatment"><a class="header-anchor" href="#typical-duration-of-treatment">#</a> Typical duration of treatment:</h3>
<p>5 days, after commencement of the mitigating therapy</p>
<h3 id="outcome"><a class="header-anchor" href="#outcome">#</a> Outcome:</h3>
<p>&quot;Reduced hospitalizations by 84% and five-fold reduction in mortality when used in early stages with high risk patients in Dr. Zelenko's clinic.</p>
<p>Drs. Fareed &amp; Tyson's protocol too has demonstrated excellent outcomes, reducing CFR to less than 3 %. &quot;</p>
<h3 id="significant-side-effects"><a class="header-anchor" href="#significant-side-effects">#</a> Significant side effects:</h3>
<p>HCQ, Ivermectin, and other drugs and artificial nutrients can cause significant side effects if used without the expert supervision or counsel of a knowledgeable physician.  In particular, there are no studies cited of safety in pregnant women, lactating mothers and in children weighing less than 15 kg.</p>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the <a href="http://c19study.com/" target="_blank" rel="noopener noreferrer">c19study.com<OutboundLink/></a> website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.&quot;</p>
<h3 id="recommended-quantity-for-stocking"><a class="header-anchor" href="#recommended-quantity-for-stocking">#</a> Recommended quantity for stocking:</h3>
<p>Commonly available drugs, need not be stocked. Treatment with HCQ / Ivermectin and other prescription drugs must be undertaken under doctor's supervision.</p>
<p><strong>Note on fraction of elemental zinc in different zinc compounds in supplements:</strong>
Zinc picolinate contains 20% of elemental zinc, zinc ascorbate contains 15% elemental zinc, zinc chloride (48%), zinc carbonate (52%), zinc citrate (31%), zinc bisglycinate and zinc gluconate (14%) and zinc oxide (80%)</p>
<h3 id="price"><a class="header-anchor" href="#price">#</a> Price:</h3>
<p>Rs. 60-100 for 10 200 mg HCQ tablets; significantly cheaper than treatment with the FDA-approved and WHO-recommended Remdesivir, which costs Rs. 15,000-30,000 for a five-day treatment).</p>
<h3 id="suggested-suppliers"><a class="header-anchor" href="#suggested-suppliers">#</a> Suggested suppliers:</h3>
<p>Most ingredients should be readily available in local pharmacies, and many online suppliers such as Amazon are linked in the protocol section here itself.</p>
<p><a href="https://www.amazon.com/Quercetin-Zinc-Picolinate-Vitamin-Supplement/dp/B08FHGLYX8" target="_blank" rel="noopener noreferrer">Quercetin 700mg, Zinc, Vitamin C &amp; D3 Supplement - Immune &amp; Health Support Vitamins, by Zenrenu (100 vegetarian capsules) Rs. 2194<OutboundLink/></a></p>
<p>Some quercetin supplement brands, which are cited to contain quercetin dihydrate, which is said to be a highly bioavailable form of quercetin:</p>
<p><a href="https://www.amazon.com/gp/product/B00S59NYT2/ref=as_li_tl?ie=UTF8&amp;tag=superfoodly-com-20&amp;camp=1789&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=B00S59NYT2&amp;linkId=7591fa69628dbd75a96c56cfdbdb13e5" target="_blank" rel="noopener noreferrer">Amazing Formulas - Quercetin 500 Mg, 120 VCaps(Vegetarian Capsules) (Non-GMO,Gluten Free, Vegan) * Supports Cardiovascular Health, Helps Improve Anti-Inflammatory &amp; Immune Response<OutboundLink/></a> ($ 20.98)</p>
<p><a href="https://www.amazon.com/Quercetin-Seasonal-Supplements-Cardiovascular-Capsules/dp/B087YLTR4G/ref=pd_sbs_7/136-3146586-8975113?pd_rd_w=fhu2v&amp;pf_rd_p=3676f086-9496-4fd7-8490-77cf7f43f846&amp;pf_rd_r=537NE4C56RH20RS23TH4&amp;pd_rd_r=b7482e79-e343-4fcf-a5b2-1834e7982acd&amp;pd_rd_wg=xlpGO&amp;pd_rd_i=B087YLTR4G&amp;psc=1" target="_blank" rel="noopener noreferrer">Zinc Quercetin 120 Vegetarian  Capsules<OutboundLink/></a> ($ 19.50)</p>
<p><a href="https://www.amazon.com/Life-Extension-Bio-Quercetin-30-Capsules/dp/B07JZHSNZF/ref=pd_sbs_3/136-3146586-8975113?pd_rd_w=fhu2v&amp;pf_rd_p=3676f086-9496-4fd7-8490-77cf7f43f846&amp;pf_rd_r=537NE4C56RH20RS23TH4&amp;pd_rd_r=b7482e79-e343-4fcf-a5b2-1834e7982acd&amp;pd_rd_wg=xlpGO&amp;pd_rd_i=B07JZHSNZF&amp;psc=1" target="_blank" rel="noopener noreferrer">Life Extension Bio-Quercetin – Supports Immune &amp; Cardiovascular Health – Gluten-Free, Once Daily, Non-GMO – 30 Vegetarian Capsules<OutboundLink/></a> ($ 10.46)</p>
<p><a href="https://c19protocols.com/" target="_blank" rel="noopener noreferrer">Telemedicine portals for Covid-19 prescriptions like Ivermectin<OutboundLink/></a></p>
<h3 id="further-references"><a class="header-anchor" href="#further-references">#</a> Further references:</h3>
<p>&quot;Research articles evidencing efficacy of the protocol's therapeutic recommendations are embedded in the protocol itself.</p>
<p>Zelenko Protocols against Covid-19</p>
<p>A webpage that is a veritable Rosetta Stone of information about effective and evidence-based allopathic treatment protocols for Covid-19: The Zelenko Protocol</p>
<p>Vladimir Zelenko, MD</p>
<p>Dr. Zelenko's Z-Stack Vitamin Cocktail: Review 2021</p>
<p>Chloroquine is a potent inhibitor of SARS coronavirus infection and spread; Virology Journal, 2005; Martin J. Vincent, Eric Bergeron, et al.</p>
<p>Quercetin and Zinc: Zelenko Treatment Protocol</p>
<p>Dr. Zelenko's Covid-19 Related Writings</p>
<p>covexit.com: Interviews with Dr. Zelenko and a number of informative articles pertaining to the protocol</p>
<p>COVID-19 Outpatients - Early Risk-Stratified Treatment with Zinc plus Low-Dose Hydroxychloroquine and Azithromycin: A Retrospective Case Series Study</p>
<p>Hydroxychloroquine and Zinc With Either Azithromycin or Doxycycline for Treatment of COVID-19 in Outpatient Setting</p>
<p>thedesertreview.com: Dr. George Fareed and Dr. Brian Tyson share early treatment protocol (updated); April 6, 2021</p>
<p>covexit.com: Prophylaxis &amp; Early Treatment in Nursing Homes – a Webinar with Dr Robin Armstrong and Dr George Fareed; Nov 10, 2020</p>
<p>Drs. Fareed and Tyson: A Protocol for the Prevention and Early Treatment of COVID-19 in Nursing Homes</p>
<p>Local frontline doctors modify COVID treatment based on results (The Protocol of Drs. Fareed and Tyson)</p>
<p>Stew Peters interviews Dr. Vladimir Zelenko</p>
<p>Covid Outpatient Care - Because Prevention &amp; Early Treatment are Best!</p>
<p>Ivermectin: Top 15 Articles &amp; Interviews</p>
<p>Prophylaxis and Early Therapies for Covid-19 in Nursing Homes: Highlights With Robin Armstrong, MD, Texas, George Fareed, MD, California, Prof. Thomas Borody, MD, Australia, Prof. Christian Peronne, MD, France</p>
<p>covexit.com: A Protocol for the Prevention and Early Treatment of COVID-19 in Nursing Homes; Dr. George Fareed; Dec 9, 2020</p>
<p>C19Protocols: Early Treatment Protocols</p>
<p>covexit.com: A number of articles and videos about the Fareed &amp; Tyson Protocol and recommendations for Covid care in nursing homes</p>
<p>Prospective Cohort of Fluvoxamine for Early Treatment of Coronavirus Disease 19; Seftel &amp; Boulware; Open Forum Infectious Diseases; Feb, 2021</p>
<p>Do Zinc Supplements Enhance the Clinical Efficacy of Hydroxychloroquine?: a Randomized, Multicenter Trial; Sherief Abd-Elsalam et al.; Biological Trace Element Research; Nov 27, 2020</p>
<p>Immunopharmacological perspective on zinc in SARS-CoV-2 infection; Sima Heydarzadeh Asl et al.; International Immunopharmacology; July, 2021</p>
<p>University of Minnesota: Covid-19: Evidence-Based Medicine- Zinc; Feb 13, 2021</p>
<p>U.S. Pharmacist- Affordable Medicines: Common Supplements Might Reduce COVID Severity; July 10, 2020-
The Eastern Virginia Medical School (EVMS) and other health organizations recommend a prophylactic combination of the following supplements: vitamin C (500 mg) and quercetin (250 mg-500 mg twice a day) with zinc (75 mg-100 mg per day), melatonin (0.3 mg-2 mg) each night, and vitamin D3 (1,000-4,000 IU per day). Famotidine (20 mg-40 mg per day). (For patients with mild symptoms, EVMS recommends the same combination, with optional additions of ivermectin (150 ug-200 ug per kg as a single dose), and one low-dose or regular aspirin per day.)</p>
<p>Perspectives on plant flavonoid quercetin-based drugs for novel SARS-CoV-2; Manjesh Saakre et al.; Beni-Suef University Journal of Basic and Applied Sciences; Mar 24, 2021</p>
<p>&quot;</p>
<h2 id="_2-math-i-mask-i-recover-protocol-first-developed-by-dr-paul-e-marik-ivermectin-based-prevention-and-early-outpatient-treatment-inpatient-hospital-treatment-and-long-haul-treatment-and-management-of-covid-19-syndrome-prescribed-by-flccc-front-line-covid-19-critical-care-alliance-founded-by-drs-pierre-kory-and-paul-marik"><a class="header-anchor" href="#_2-math-i-mask-i-recover-protocol-first-developed-by-dr-paul-e-marik-ivermectin-based-prevention-and-early-outpatient-treatment-inpatient-hospital-treatment-and-long-haul-treatment-and-management-of-covid-19-syndrome-prescribed-by-flccc-front-line-covid-19-critical-care-alliance-founded-by-drs-pierre-kory-and-paul-marik">#</a> 2. MATH+, I-MASK+, I-RECOVER Protocol, first developed by Dr. Paul E. Marik: Ivermectin-based prevention and early outpatient treatment, inpatient hospital treatment and long haul treatment and management of Covid-19 syndrome prescribed by FLCCC (Front Line Covid-19 Critical Care) Alliance, founded by Drs. Pierre Kory and Paul Marik</h2>
<h3 id="objective-2"><a class="header-anchor" href="#objective-2">#</a> Objective:</h3>
<p>Prevention and early outpatient treatment of Covid-19</p>
<h3 id="system-2"><a class="header-anchor" href="#system-2">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-2"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-2">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Drugs like Ivermectin may interact adversly with other drugs.</p>
<h3 id="status-of-authorisation-2"><a class="header-anchor" href="#status-of-authorisation-2">#</a> Status of authorisation:</h3>
<p>&quot;The medical evidence to support each drug and nutrient can be found under “Medical Evidence” on the FLCCC’s website. It was Dr. Pierre Kory who worked tirelessly to bring information about ivermectin to the international stage.</p>
<p>For an up-to-date overview of all published studies on ivermectin in the treatment and prevention of COVID-19 it is recommended to visit c19ivermectin.com; in addition, a meta-analysis of all studies can be found at ivmeta.com (constantly updated). For adoption and regulatory status of ivermectin globally, check out &quot;&quot;Countries using Ivermectin&quot;&quot;.</p>
<p>June 17, 2021: Ivermectin for Prevention and Treatment of COVID-19 Infection (Tess Lawrie Ivermectin Meta Analysis)
A Cochrane-standard (=highest) review and meta-analysis of Ivermectin against Covid-19 by Bryant-Lawrie, now peer-reviewed and published, concludes that the evidence justify the global adoption.</p>
<p>June 7, 2021: Epidemiologic Analyses on Ivermectin and COVID-19.
Results of Ivermectin's success in treating COVID-19 outbreaks in India, Mexico, Peru, Paraquay, Argentina, Brazil and Slovakia.</p>
<p>June 1, 2021: The Drug that Obliterates 97% of New Delhi Cases by Justus R. Hope, MD</p>
<p>May 31, 2021: COVID deaths plunge after Mexico City introduces Ivermectin (WND.com)</p>
<p>May 19, 2021 - A study by Juan Chamie, Jennifer Hibberd of the University of Toronto and David Scheim of the US Public Health Service, shows the sharp rise, fall and resurgence in excess deaths (among the over 60 year-old cohort) in Peru as the virus waxed, waned and waxed again.</p>
<p>May 16, 2021: Do the NIH and WHO COVID treatment recommendations need to be fixed? By Steve Kirsch. Published on TrialSiteNews.</p>
<p>May 12, 2021: FLCCC Alliance Statement on the Irregular Actions of Public Health Agencies and the Widespread Disinformation Campaign Against Ivermectin</p>
<p>May 03, 2021: Joint Statement on Widespread Use of Ivermectin in India for Prevention and Early Treatment by U.K. Evidence-Based Medicine Consultancy Ltd (E-BMC Ltd) and U.S. FLCCC (Front Line Critical Care Alliance).</p>
<p>Apr 22, 2021: Review of the Emerging Evidence Demonstrating the Efficacy of Ivermectin in the Prophylaxis and Treatment of COVID-19 by Kory et al., published on American Journal of Therapeutics.</p>
<p>Mar, 2021: Open Letter by U.S. Doctors: JAMA Ivermectin Study Is Fatally Flawed</p>
<p>Mar 26, 2021: Ivermectin vs Non-ivermectin countries in Africa</p>
<p>The evidence-based treatment protocol was developed by Dr. Paul E. Marik, Professor of Medicine and Chief of the Division of Pulmonary and Critical Care Medicine at the Eastern Virginia Medical School in Norfolk, Virginia, and championed by a team of highly experienced physicians. Dr. Marik has authored 80 book chapters and 500 journal publications, with over 44,000 citations and an h-index of 98. He has delivered over 350 lectures at international conferences, and is co-founder of the Front Line Covid Critical Care Alliance. The scientific protocol, called the EVMS protocol, was developed by Dr. Marik and based on his famous safe, effective treatment protocol for sepsis.</p>
<p>Ivermectin was discovered in the 1970s and is on the World Health Organization (WHO) list of essential medicines.</p>
<p>Having said that, Dr. Kory reported that there are very few places in the world where the MATH+ protocol is being used, such as Germany or Ukraine (where it is the authorized standard of care). In many other places, like the US, ivermectin has been removed from the therapeutic protocols of most hospitals, but clinicians are prescribing it under the table. The NIH hasn't adopted the protocol.</p>
<p>&quot;</p>
<h3 id="protocol-and-treatment-approach-2"><a class="header-anchor" href="#protocol-and-treatment-approach-2">#</a> Protocol and treatment approach:</h3>
<p>&quot;FLCCC I-MASK+ Protocol for general prevention and early outpatient treatment of COVID-19 (updated on Sept 1, 2021, to be adapted to the Delta variant):</p>
<p>The initial MATH+ protocol was released in April 2020. In early July and August, it was updated to include Quercetin and a number of optional nutrients and drugs, not only for critical care but also for prophylaxis and mild disease being treated at home. Now once again in recent months, FLCCC medical team strengthened the I-MASK+ prevention &amp; early treatment protocol to counter the new COVID-19 variant.</p>
<p>There is evidence that vitamin C and Quercetin co-administration exerts a synergistic antiviral action due to overlapping antiviral and immuno-modulatory properties and the capacity of Ascorbate to recycle Quercetin, increasing its efficacy. I-MASK+ Prevention &amp; Early Outpatient Treatment Protocol for COVID-19 was designed for use as a prevention and in early outpatient treatment, for those who test positive for COVID-19. Component nutrients include vitamin D, C, Melatonin, Quercetin and Zinc. All the component medicines are FDA-approved (except Ivermectin), inexpensive, readily available and have been used for decades with well-established safety profiles.</p>
<p>General Chronic Prevention:</p>
<p>Antivirals and Antiseptics:</p>
<ul>
<li>
<p>Gargle mouthwash: 2 x daily – gargle (do not swallow) antiseptic mouthwash with Cetylpyridinium Chloride (e.g. Scope mouthwash™, Crest mouthwash, Colgate mouthwash) or Povidone / Iodine 1 % solution as alternative (e.g. Betadine® Antiseptic Sore Throat Gargle™).</p>
</li>
<li>
<p>Ivermectin:
Chronic prevention for high-risk individuals-
0.2 mg / kg per dose, taken with or after meals; first dose at the start of the treatment, repeated after 48 hours, and then 1 dose weekly for as long as risk is elevated in the community
Post-exposure Covid prevention-
0.2 mg / kg per dose, taken with or after meals; first dose at the start of the treatment, repeated after 48 hours</p>
</li>
</ul>
<p>Immune Fortifying / Supportive Therapy:
Vitamin D3: 1000–3000 IU / day. (Amazon)
Vitamin C: 500 - 1,000 mg BID (twice daily) (Amazon) (OneDayMD)
Quercetin: 250 mg daily.  (Amazon) (Aesthetics Advisor)
Zinc: 30 - 40 mg / day (elemental zinc). Zinc lozenges are preferred. (Amazon) (OneDayMD)
Melatonin: 6 mg before bedtime (causes drowsiness). (Amazon) (OneDayMD)</p>
<p>Notes:</p>
<ul>
<li>
<p>High risk Individuals: &gt; 60 years with co-morbidities (hypertension, diabetes, chronic lung disease, chronic kidney disease), obesity, long term care facilities, etc.</p>
</li>
<li>
<p>Post COVID-19 exposure: To use if a household member is COVID-19 positive, or you have prolonged exposure to a COVID-19 positive patient without wearing a mask.</p>
</li>
<li>
<p>Precautionary Note: Ivermectin has a number of potentially serious drug-drug interactions. Please check for potential drug interaction at Ivermectin Drug Interactions - Drugs.com. The most important drug interactions occur with Cyclosporin, Tacrolimus, anti-retroviral drugs, and certain anti-fungal drugs.</p>
</li>
<li>
<p>Due to the possible drug interaction between Quercetin and Ivermectin (may increase Ivermectin levels), these drugs should not be taken simultaneously (i.e. should be staggered morning and night).</p>
</li>
<li>
<p>Ivermectin is also lipophilic and therefore, bioavailability is maximised on a full stomach; or best to be taken with meal.</p>
</li>
<li>
<p>Vitamin D3 RDA (Recommended Daily Allowance) is 800–1000 IU/day. The safe upper-dose daily limit is likely &lt; 4000 IU/day. Vitamin D deficiency has been associated with an increased risk of acquiring COVID-19 and from dying from the disease. Vitamin D supplementation may therefore prove to be an effective and cheap intervention to lessen the impact of this disease, particularly in vulnerable populations, i.e. the elderly and obese.</p>
</li>
<li>
<p>It is likely that vitamin C and Quercetin have synergistic prophylactic benefit. Quercetin should be used with caution in patients with hypothyroidism and TSH levels should be monitored.</p>
</li>
<li>
<p>Please consult with a qualified doctor and only use human Ivermectin. Ivermectin for animals contain excipients (binding and storage compounds such as ethylene glycol) that are known to cause liver failure in high doses.</p>
</li>
</ul>
<p>(Note: When supplementing with vitamin D, it is important also to supplement with sources of vitamin K2, and also with sources of Calcium and Magnesium for improved bone health.)</p>
<p>Helpful Information Related to Procuring Ivermectin and HCQ in the USA and other countries:</p>
<ul>
<li>FIND A DOCTOR WHO WILL PRESCRIBE IVERMECTIN, HYDROXYCHLOROQUINE AND EARLY OUTPATIENT TREATMENTS FOR COVID-19 (USA, SEPT 24, 2021)</li>
<li>How to Get Ivermectin in the US: Pharmacies (USA, Sept 28, 2021)</li>
<li>FIND A DOCTOR WHO WILL PRESCRIBE IVERMECTIN, HYDROXYCHLOROQUINE AND EARLY OUTPATIENT TREATMENTS FOR COVID-19 (IN VARIOUS COUNTRIES, SEPT 6, 2021)</li>
</ul>
<p>Early Outpatient Treatment Protocol (Updated Sept 1, 2021):</p>
<ol>
<li>First line agents (use any or all medicines; listed in order of priority/importance):
Antivirals:</li>
</ol>
<ul>
<li>Ivermectin (Find a doctor, USA):
0.2 - 0.4 mg / kg, taken with or after meals, 1 dose daily for 5 days or until recovery. Use upper dose range if 1) in regions with aggressive variants, 2) treatment started on or after five days of symptoms, or in pulmonary phase, 3) multiple comorbidities or risk factors.</li>
<li>And / Or Nitazoxanide: 500 mg 2 x daily for 5 days after meals. Combine with Ivermectin (preferred) or substitute if Ivermectin is not available. (Nitazoxanide is often unavailable or high-priced in some countries like the USA)</li>
</ul>
<p>Anti-Septic Anti-virals:</p>
<ul>
<li>Antiviral mouthwash: Gargle 3 x daily (do not swallow; must contain Chlorhexidine,  Povidone-Iodine, or Cetylpyridinium Chloride). (e.g. Scope mouthwash™, Crest mouthwash, Colgate mouthwash, Betadine® Antiseptic Sore Throat Gargle)</li>
<li>Iodine Nasal Spray: Use 1 % Povidone Iodine commercial product as per instructions 2–3 x daily. If 1 %-product not available, must first dilute the more widely available 10 %-solution and apply 4–5 drops to each nose every 4 hours. (No more than 5 days in pregnancy.)</li>
</ul>
<p>Anti-Coagulants + Immune Fortifying:</p>
<ul>
<li>Aspirin: 325 mg/day unless contraindicated. (Amazon)</li>
<li>Vitamin D3: 5,000 IU daily. Preferred forms if available: Calcitriol (Rocaltrol) 0.5 mcg on day 1, then 0.25 mcg daily for 7 days – or Calcifediol 0.5 mg on day 1, then 0.2 mg on days  3 + 7, then 0.2 mg weekly until recovered.</li>
<li>Melatonin: 10 mg before bedtime (causes drowsiness). (Amazon)</li>
</ul>
<p>Adjunctive / Synergistic Therapies:</p>
<ul>
<li>Vitamin C: 500 - 1,000 mg BID (twice daily) (Amazon) (iHerb)</li>
<li>Quercetin: 250 mg twice a day. (Amazon) (iHerb)</li>
<li>Zinc: 100 mg/day. Zinc lozenges are preferred. (Amazon) (iHerb)</li>
<li>Pulse Oximeter: FLCCC also recommend monitoring your oxygen saturation with a pulse oximeter and to go to the hospital if you get below 94%. (Amazon)</li>
</ul>
<ol start="2">
<li>Second line agents (listed in order of priority /importance):</li>
</ol>
<p>Add to first line therapies above if:</p>
<ol>
<li>≥ 5 days of symptoms;</li>
<li>Poor response to therapies above;</li>
<li>Significant comorbidities</li>
</ol>
<p>Dual anti-androgen Therapy:</p>
<ul>
<li>Spironolactone: 100 mg 2 x daily for ten days</li>
<li>Dutasteride: 2 mg on day 1, followed by 1 mg daily for 10 days. If dutasteride is not available, use finasteride 10 mg daily for 10 days.</li>
</ul>
<p>Fluvoxamine:</p>
<ul>
<li>Fluvoxamine: 50 mg twice daily for 10 days.
Consider Fluoxetine (Prozac) 30mg daily for 10 days as an alternative (as it is often better tolerated).
Avoid if patient is already on an SSRI.</li>
</ul>
<p>Monoclonal antibody therapy:</p>
<ul>
<li>Casirivimab / Imdevimab: 600 mg each in a single subcutaneous injection for patients with one or more risk factors as follows: Age &gt; 65y; obesity; pregnancy; chronic lung, heart, or kidney disease; diabetes; immunosuppressed; developmental disability; chronic tracheostomy; or tube feeding.</li>
</ul>
<p>Alternatives:
Optional: Betadine nasal spray applied 3 times a day (Ref) (Amazon)
Optional: Xlear Nasal Spray with Xylitol: use twice a day (Ref) (Amazon)
Optional: Curcumin: 500 mg twice a day (Ref) (Amazon)
Optional: Azithromycin 250 mg twice a day. (Ref) (Find a Doctor).
Optional: Bromhexine 8 mg three times a day (Ref) (Lazada Malaysia, unavailable on Amazon)</p>
<p>Behavioral Prevention:</p>
<ul>
<li>Face Masks: Must wear cloth, surgical, or N95 mask (without valve) in all indoor spaces with non-household persons. Must wear a N95 mask (without valve) during prolonged exposure to non-household persons in any confined, poorly ventilated area.</li>
<li>Social Distancing: Until the end of the COVID-19 crisis, we recommend keeping a minimum distance of approx. 2 m / 6 feet in public from people who are not from your own household.</li>
<li>Wash Hands: We recommend, after a stay during and after outings from home (shopping, sub - way etc.), a thorough hand cleaning (20–30 sec. with soap), or also to use a hand disinfectant in between.</li>
</ul>
<p>Notes:</p>
<ul>
<li>The safety of Ivermectin during pregnancy has not been established.</li>
<li>In some people, Fluvoxamine can produce acute anxiety, which needs to be carefully monitored and treated for by the prescribing physician to prevent escalation to violent or suicidal behaviour.</li>
</ul>
<p>The detailed descriptions of the MATH+ and I-RECOVER FLCCC Protocols for inpatient hospital management of patients and for the management of long-Covid syndrome are linked to in the references.</p>
<p>Dr. Pierre Kory's perspective on the adaptation of the I-MASK protocol to the globally prevalent and currently dominant Delta variant:
Dr. Kory mentioned that he had caught Covid, a milder form with only sinusitis and nasal congestion, while he was prophylaxing on Ivermectin, which should be considered a breakthrough from the FLCCC prophylactic protocol. These breakthroughs did occasionally occur until Jan / Feb, 2021, when the protocol called for ivermectin dosing once in two weeks. There have been no known reports of breakthroughs after the frequency was increased to once a week in the updated protocol. The viral loads are orders of magnitude higher with the Delta variant than with the alpha and other common variants. Ivermectin has a very tight dose response relationship with this virus.There is no clear understanding of the right dosing, only a heuristical understanding, which appears to work well.</p>
<p>Dr. Kory has been collaborating with Dr. Flavio A. Cadegiani, Brazil, who is a top medical researcher and academician there. Dr. Cadegiani has been very actively involved in vast numbers of large scale clinical researches on Covid, and his work has contributed to important innovations in effective treatment protocols, including the use of anti-androgens like Proxalutamide. Dr. Kory's own research into androgen-blockers has led to the conclusion that they are a very underutilized and powerful therapeutic strategy. Dr. Cadegiani is a very rigorous researcher who used ivermectin therapy for his control groups in his clinical trials.</p>
<p>Dr. Cadegiani established that Ivermectin and Nitazoxanide are both antiparasitic drugs with proven antiviral properties, and both are clinically equivalent in their effect for Covid-19. He adapted the MATH+ protocol for the aggressive Gamma variant that struck Brazil, incorporating the various effective treatment modalities discovered by other clinicians. Dr. Cadegiani also discovered through randomized control trials that Ivermectin and Nitazoxanide have synergistic properties and work better together therapeutically than each in isolation. Therefore the Gamma protocol recommends the use of both together for the highest risk strata of patients, with the Ivermectin dosage sometimes as high as 1.0 mg/kg. With the Delta variant, it was acceptable to use doses upto 0.6 mg/kg, and 0.3-0.4 mg/kg was effective with the other milder variants.</p>
<p>The androgen suppressor Proxalutamide, though new and pending regulatory approval, was found to drastically reduce mortality rate in clinical trials. Spironolactone is a milder androgen suppressor and perhaps useful in outpatient treatment, and Bicalutamide and Flutamide are stronger drugs in this category. They are found to be safe for both men and women, and were really the game-changers in the battle with the Gamma variant. Androgen-blocking is an excellent anti-inflammatory agent and works well both in the early and later stage of the therapy. Androgen-blockers work by inhibiting the enzyme TMPRSS2 that facilitates the binding of the ACE2 receptor to the spike protein of the virus.</p>
<p>Bromhexine is useful and works to clear phlegm in the respiratory tract by also inhibiting the TMPRSS2 enzyme, but Budesonide doesn't seem to be very helpful. Bromhexine, incidentally, was originally produced as an extract of Adhatoda vasica or Malabar nut. There are many unpleasant side effects to Fluvoxamine (Luvox) and therefore not used much even though there is sufficient evidence of efficacy. The cytokine-suppressors Totacitinib and Tocilzumab (humanized monoclonal antibodies against interleukin-6 receptors) are used when it is felt that the pulsed steroids have not sufficiently managed symptoms. However MAbs are administered as a single injected dose, no later than 7 days after symptoms begin.</p>
<p>The other aspects of the Gamma variant therapy included anticoagulants like Enoxaparin as usual, antifungal medication etc.</p>
<p>&quot;</p>
<h3 id="typical-duration-of-treatment-2"><a class="header-anchor" href="#typical-duration-of-treatment-2">#</a> Typical duration of treatment:</h3>
<p>1-4 weeks</p>
<h3 id="outcome-2"><a class="header-anchor" href="#outcome-2">#</a> Outcome:</h3>
<p>&quot;Prophylactic treatment or prevention of Covid-19; better outcomes in curative treatment than with the more conventional alternatives like Remdesivir.</p>
<p>Dr. Pierre Kory reported that Brazil suffered from the Gamma variant of Covid, which is much more aggressive and violent in progression than the Delta, with patients reaching the ICU as early as 2-3 days after onset of symptoms. Dr. Flavio Cadegiani, MD, PhD, eminent Brazilian researcher and clinician, reported that while most of the State of Amazonas was ravaged by the Gamma variant and hospitals were overfull and short of oxygen, and cities and hospitals were practically collapsing, its city of Coari remained almost entirely unscathed. The Secretary of Health revealed that the local health officials had been distributing ivermecting throughout the local city population, many people were prophylaxing, and everybody was using it for early treatment. There were a large number of cases in the city and the prophylactic dosage of ivermectin used was 0.2 mg / kg every 7-10 days, which was probably too low for the highly infectious Gamma variant. However, Dr. Cadegiani had observed in his travels through Brazil that there were two types of Covid- the breakthrough infections in those who were prophylaxing on ivermectin were much milder and mostly avoided hospitalization.&quot;</p>
<h3 id="significant-side-effects-2"><a class="header-anchor" href="#significant-side-effects-2">#</a> Significant side effects:</h3>
<p>&quot;Safety Review of High Dose Ivermectin</p>
<p>Dr. Pierre Kory doesn't believe that there is any risk with twice a week ivermectin prophylaxing, even with 0.4 mg/kg dosing, as the drug has been used extensively, especially very strong doses in cancer therapy. He cites Brazilian Dr. Flavio Cadegiani who has used ivermectin dosages as high as 1.0 mg/kg with Gamma variant infections in hospitalized patients.</p>
<p>Ivermectin has been used fairly safely for over 40 years in clinical practice. However it is known to be toxic in large doses, and not recommended for children weighing less than 15 kg, for pregnant women and lactating mothers. In particular, Ivermectin is not advised for persons with compromised kidney or liver function, or those infected with the parasite Loa Loa.</p>
<p>Headache, dizziness, muscle pain, nausea, or diarrhea may occur. Tell the consulting doctor right away if any of these rare but very serious side effects occur: neck/back pain, swelling face/arms/hands/feet, chest pain, fast heartbeat, confusion, seizures, loss of consciousness. A very serious allergic reaction to this drug is rare. However, seek immediate medical attention if any symptoms of a serious allergic reaction are noticed, including: rash, itching/swelling (especially of the face / tongue / throat), severe dizziness, trouble breathing. This is not a complete list of possible side effects. If other effects not listed above are noticed, contact doctor or pharmacist.</p>
<p>Ivermectin is hazardous to those suffering from allergies to the medication, and there are possibilities of adverse drug interactions with other allopathic or herbal medications.</p>
<p>Ivermectin is most commonly used in veterinary practice, and it is very important to use human-grade Ivermectin, not from pet stores.</p>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the c19study.com website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.&quot;</p>
<h3 id="recommended-quantity-for-stocking-2"><a class="header-anchor" href="#recommended-quantity-for-stocking-2">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-2"><a class="header-anchor" href="#price-2">#</a> Price:</h3>
<p>&quot;The first line of drugs used in the protocol are commonly used and inexpensive. The prices of many of the drugs, even common medications, as well as their availability, are artificially controlled by the pharmaceutical industry, and may vary widely between countries. Nitazoxanide, for example, is very cheap and commonly available in Brazil and very expensive and hard to procure in the US. Ivermectin, as Dr. Andrea Stramezzi revealed, could not be procured in Italy but was available in other countries of the EU like Italy.</p>
<p>Israeli scientist says COVID-19 could be treated for under $1/day</p>
<p>&quot;</p>
<h3 id="suggested-suppliers-2"><a class="header-anchor" href="#suggested-suppliers-2">#</a> Suggested suppliers:</h3>
<p>&quot;Nutrient supplements can be bought from high-quality and trusted brands online or at local pharmacies. Prescription medicines like Ivermectin are purchased at local pharmaceutical stores, and to be used under the guidance of a licensed allopathic practitioner.</p>
<p>Telemedicine portals for Covid-19 prescriptions like Ivermectin &quot;</p>
<h3 id="further-references-2"><a class="header-anchor" href="#further-references-2">#</a> Further references:</h3>
<p>&quot;I-MASK+ Protocol for prevention and early outpatient treatment</p>
<p>MATH+ Protocol for hospital treatment</p>
<p>I-RECOVER Protocol for long haul management of Covid-19 syndrome</p>
<p>FLCCC: Summary of the Evidence for Ivermectin in COVID-19</p>
<p>Ivermectin: Top 15 Articles &amp; Interviews</p>
<p>Ivermectin - FLCCC I-MASK+ Protocol for Covid-19 (Updated on September 1, 2021)</p>
<p>EXPOSED! FDA, CDC &amp; WHO is hiding this from you? | Dr Paul Marik FLCCC - Vijaya Viswanathan</p>
<p>Transcript of The Joe Rogan Experience with Drs. Bret Weinstein and Pierre Kory, close collaborators of the highly esteemed intensivist Dr. Paul E. Marik, whoc developed the world renowned Ivermectin protocol. The researchers state the high value of Ivermectin in treating Covid and in neutralizing the spike proteins.</p>
<p>Covid Outpatient Care - Because Prevention &amp; Early Treatment are Best!</p>
<p>Nitazonide</p>
<p>C19Protocols: Early Treatment Protocols</p>
<p>Prospective Cohort of Fluvoxamine for Early Treatment of Coronavirus Disease 19; Seftel &amp; Boulware; Open Forum Infectious Diseases; Feb, 2021</p>
<p>Review of the Emerging Evidence Demonstrating the Efficacy of Ivermectin in the Prophylaxis and Treatment of COVID-19; Pierre Kory, MD, et al.; American Journal of Therapeutics; June, 2021</p>
<p>A reappraisal of the mucoactive activity and clinical efficacy of bromhexine; Alessandro Zanasi et al.; Multidisciplinary Respiratory Medicine; 2017</p>
<p>Iota-carrageenan neutralizes SARS-CoV-2 and inhibits viral replication in vitro; Martina Morokutti-Kurz et al.; PLoS One; Feb 17, 2021</p>
<p>COVID-19 early treatment: real-time analysis of 1,099 studies</p>
<p>Vitamin D3 and K2 and their potential contribution to reducing the COVID-19 mortality rate; Simon Goddek; International Journal of Infectious Diseases; Oct, 2020</p>
<p>Role of Magnesium in Vitamin D Activation and Function; Anne Marie Uwitonze &amp; Mohammed S Razzaque; Journal of the American Osteopathic Association; Mar 1, 2018
&quot;</p>
<h2 id="_3-multifaceted-highly-targeted-sequential-multidrug-treatment-algorithm-published-by-57-world-renowned-physicians-including-drs-peter-mccullough-paul-e-alexander-thomas-j-borody-george-fareed-brian-tyson-richard-bartlett-richard-g-urso-and-vladimir-zelenko"><a class="header-anchor" href="#_3-multifaceted-highly-targeted-sequential-multidrug-treatment-algorithm-published-by-57-world-renowned-physicians-including-drs-peter-mccullough-paul-e-alexander-thomas-j-borody-george-fareed-brian-tyson-richard-bartlett-richard-g-urso-and-vladimir-zelenko">#</a> 3. Multifaceted highly targeted sequential multidrug treatment algorithm, published by 57 world-renowned physicians, including Drs. Peter McCullough, Paul E. Alexander, Thomas J. Borody, George Fareed, Brian Tyson, Richard Bartlett, Richard G. Urso and Vladimir Zelenko</h2>
<h3 id="objective-3"><a class="header-anchor" href="#objective-3">#</a> Objective:</h3>
<p>Therapeutic protocol for Covid-19</p>
<h3 id="system-3"><a class="header-anchor" href="#system-3">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-3"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-3">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Allopathic treatment protocols can not be intermixed, except under the supervision of qualified doctors.</p>
<h3 id="status-of-authorisation-3"><a class="header-anchor" href="#status-of-authorisation-3">#</a> Status of authorisation:</h3>
<p>&quot;Peer-reviewed research publications reporting the work of numerous eminent physicians around the world.</p>
<p>&quot;&quot;In the absence of evidence from or a commitment to clinical trials of early therapy, other scientific information on the pathophysiology, treated natural history, and clinical judgement together must guide contemporary ambulatory management of COVID-19 (McCullough et al., 2020b). Observational studies reporting outcomes in patient populations managed consistently with empirically derived early intervention regimens currently provide an acceptable level of evidence for safety and efficacy of these widely available, inexpensive and safe alternatives to the current standard of non-intervention (Khan et al., 2020).&quot;&quot; Many countries around the world are providing home-based treatment kits to Covid patients.</p>
<p>All the medications prescribed in this therapeutic algorithm are either long proven for their safety and efficacy, or, as in the case of some monoclonal antibodies, recently granted Emergency Use Approval and proven in recent randomized trials. &quot;&quot;[In the case of monoclonal antibodies,] these results should be interpreted with caution and cannot be characterized as being conclusive or robust, yet as with all therapies discussed in this paper, Casirivimab / Imdevimab can be integrated into an innovative sequenced multi-drug regimen for SARS-CoV-2 infection.&quot;&quot;&quot;</p>
<h3 id="protocol-and-treatment-approach-3"><a class="header-anchor" href="#protocol-and-treatment-approach-3">#</a> Protocol and treatment approach:</h3>
<p>&quot;The protocol evaluated and proposed in the referenced paper emphasizes prompt early initiation of Sequenced Multi Drug Therapy (SMDT) as a widely and currently available soution to stem the tide of hospitalizations and deaths. The multipronged therapeutic approach includes the following components and prescription:</p>
<p>(po bid, i.e. per os bis in die, meaning, &quot;&quot;taken orally, twice a day&quot;&quot;;
po qd, i.e. per os quaque die, meaning, &quot;&quot;taken orally, everyday&quot;&quot;)</p>
<ol>
<li>Adjuvant nutraceuticals (5-30 days), commenced for ALL patients on the first appearance of symptoms:</li>
</ol>
<ul>
<li>5000 IU of vitamin D3 po qd X 5-30 days, which has been proven in a small study to decrease Covid-19 mortality</li>
<li>Vitamin C, 3000 mg po qd X 5-30 days, as vitamin C has been used in a variety of viral illnesses</li>
<li>Zinc, 50 mg elemental Zinc or 220 mg Zinc sulfate, po bid X 5-30 days, potent inhibitor of viral replication</li>
<li>Quercetin, 500 mg po bid X 5-30 days: Quercetin is a polyphenol that could reduce the activity of a SARS-CoV-2 entry through the ACE2 receptor, inhibit viral proteases via conveyance of zinc, and attenuate inflammatory responses, thereby inhibiting viral replication and favouring immune response.</li>
</ul>
<ol start="2">
<li>If feasible, therapy with monoclonal antibodies for patients aged 50+ or younger patients with one or more comorbidities:</li>
</ol>
<ul>
<li>Bamlanivimab OR Casirivimab / Imdevimab IV infusion EUA dosing: Single IV infusion of Bamlanivimab 700 mg administered as soon as possible after positive viral test of SARS-CoV-2 and within 10 days of symptoms onset; the infusion should occur over an hour with another hour of monitoring for systemic reactions, that occur in &lt; 5 % cases.</li>
</ul>
<ol start="3">
<li>Combination intracellular anti-infective therapy (all for 5-30 days), commenced on the first appearance of symptoms for all patients aged 50+ years, or younger patients with a single comorbidity:</li>
</ol>
<ul>
<li>Hydroxychloroquine, Zinc ionophore, 200 mg po bid, AND Azithromycin 250 mg po bid, AND Doxycycline 100 mg po bid
AND / OR</li>
<li>Ivermectin 6-24 mg po qod, or taken orally every other day, AND Azithromycin 250 mg po bid, AND Doxycycline 100 mg po bid
AND / OR</li>
<li>Favipravir 1800 mg po bid X 1 day loading dose, then 600 mg po bid, AND Azithromycin 250 mg po bid, AND Doxycycline 100 mg po bid</li>
</ul>
<ol start="4">
<li>Inhaled / oral corticosteroids, commenced on the first appearance of symptoms for patients aged 50+ years with one or more comorbidities, AND for 50+ aged patients or younger patients with comorbidities on day 5 of illness or on development of respiratory illness:</li>
</ol>
<ul>
<li>Inhaled Budesonide 1 mg / 2 ml nebulization or 200 mcg / inhaler upto every 4 hours qd X 5 days, +/- taper, OR</li>
<li>Dexamethasone 6 mg po qd X 5 days, +/- taper, OR</li>
<li>Prednisone 1 mg / kg or body weight po qd X 5 days, +/- taper
AND OPTIONALLY -  Colchicine 0.6 mg po bid</li>
</ul>
<ol start="5">
<li>Antiplatelet agents / anticoagulants, commenced on the first appearance of symptoms for patients aged 50+ years with one or more comorbidities, AND for 50+ aged patients or younger patients with comorbidities when there is underlying serious medical condition / Venous Thrombo-Embolism / suspected micro or overt thrombosis:</li>
</ol>
<ul>
<li>Aspirin 325 mg po qd X 5-30 days
AND OPTIONALLY -  Low molecular weight Heparin OR Apixaban, Rivaroxaban, Edoxaban, Dabigatran, in standard doses X 5-30 days</li>
</ul>
<ol start="6">
<li>Supportive care including supplemental oxygen, monitoring and telemedicine:</li>
</ol>
<ul>
<li>Pulse Oxygen delivered home, if necessary</li>
<li>Ventilate room air.</li>
<li>Evaluate if symptoms do not respond well to early ambulatory treatment, escalate clinically and hospitalize, if necessary.</li>
<li>Offer telemedicine consultancy to patients and GPs.</li>
</ul>
<p>Dr. Richard Urso's, Texas, USA, perspective on the early treatment of the widely prevalent and aggressive Delta variant:
&quot;</p>
<h3 id="typical-duration-of-treatment-3"><a class="header-anchor" href="#typical-duration-of-treatment-3">#</a> Typical duration of treatment:</h3>
<p>5-30 days in most patients, with need for hospitalization or clinical escalation in the rare patients with serious underlying medical conditions</p>
<h3 id="outcome-3"><a class="header-anchor" href="#outcome-3">#</a> Outcome:</h3>
<p>&quot;HCQ:
&quot;&quot;A continuously updated synthesis of
HCQ studies supports the following (COVID-19 Treatment, 2020):</p>
<ol>
<li>63% of studies of HCQ administered late in the hospital course have demonstrated benefit,</li>
<li>100% of the early treatment studies have demonstrated benefit with a composite 64% relative risk reduction in the progression of disease, hospitalization, and death (Arshad et al., 2020; Mikami et al., 2020; Prodromos and Rumschlag, 2020; Rosenberg et al., 2020).</li>
</ol>
<p>The small randomized trials to date are inconclusive for the following reasons: 1) no placebo control, 2) unblinded, 3) altered primary endpoints, 4) biased unblinded physician assigned endpoints (such as need for oxygen), 5) markedly truncated sample sizes and administrative termination of trials, 6) pretreatment with other antivirals.&quot;&quot;</p>
<p>Quercetin:
The Association of American Physicians and Surgeons (AAPS) states, &quot;&quot;[Quercetin] is much less potent than HCQ as a Zinc transporter, and it does not reach the high concentrations in lung cells that HCQ does. Quercetin may help reduce risk of viral illness if you are basically healthy. But it is not potent enough to replace HCQ for treatment of COVID once you have symptoms, and it does not adequately get into lung tissue unless you take massive doses (3-5 grams a day), which cause significant GI side effects such as diarrhea.&quot;&quot;</p>
<p>Ivermectin:
Ivermectin (IVM) is a broad spectrum anti-parasitic agent that has been shown to have anti-viral activity against a range of viruses including recently, SARS-CoV-2 (Heidary and Gharebaghi, 2020).  There are a number of randomized and prospective studies and all have shown efficacy in clinical outcomes at the time of this report (Alam et al., 2020; Chowdhury et al., 2020; Gorial et al., 2020; Khan et al., 2020; Nunez et al., 2020). . In the ICON study, IVM use in the hospital was associated with a 48% relative risk reduction in COVID-19 mortality (Rajter et al., 2020). Currently, there are 36 randomized clinical trials of ivermectin alone or in combination for ambulatory and hospitalized patients listed on clinicaltrials.gov.</p>
<p>Favipravir:
Favipiravir is an oral selective inhibitor of RNA-dependent RNA polymerase, and is approved for ambulatory use in COVID19 in multiple countries (Coomes and Haghbayan, 2020). Favipiravir is safe and it shortens viral nasal shedding to less than 7 days in most studies (Ivashchenko et al., 2020; Pilkington et al., 2020).</p>
<p>Antibiotics  with intracellular anti-infective activity:</p>
<p>Azithromycin is a commonly used macrolide antibiotic that has antiviral properties mainly attributed to reduced endosomal transfer of virions as well as established anti-inflammatory effects (Pani et al., 2020). French reports indicated that Azithromycin in combination with HCQ was associated with reduced durations of viral shedding, fewer hospitalizations, and reduced mortality as compared to those untreated (Lagier et al., 2020; Million et al.,
2020). In a large observational inpatient study (n = 2451), those who received AZM alone had an adjusted hazard ratio for mortality of 1.05, 95% CI 0.68-1.62, P = 0.83 (Colunga Biancatelli et al., 2020). The combination of HCQ and AZM has been considered a standard of care outside the US for COVID-19 in more than 300,000 older adults with multiple comorbidities (Risch, 2020).</p>
<p>Doxycycline is another common antibiotic with multiple intracellular effects that may reduce viral replication, cellular damage, and expression of inflammatory factors (Malek et al., 2020; Sodhi and Etminan, 2020). It has been shown to have in vitro activity against COVID-19 at clinically used concentrations, acting in post-entry stages of the infection with SARS-CoV-2 in Vero E6 cells (Gendrot et al., 2020). It has also been shown to concentrate in the lungs at levels twice that of plasma. When combined with Ivermectin early in the infection it appears to enhance efficacy to near complete eradication of COVID-19 in less than 10 days.</p>
<p>Corticosteroids:
&quot;&quot;Among COVID-19 patients, serum IL-6 and IL-10 levels are elevated in the critically ill (Han et al., 2020). In COVID-19, some of the first respiratory findings are cough and difficulty breathing. These features are attributable to inflammation and cytokine activation. Early use of oral corticosteroids is a rational intervention for COVID-19 patients with these features as they would be in other inflammatory lung disorders (Kolilekas et al., 2020; Singh et al., 2020). In particular, a meta-analysis involving 1703 critically ill COVID-19 patients found a 36% relative risk reduction in death (Sterne et al., 2020) due to dexamethasone.&quot;&quot;</p>
<p>Anticoagulants:
&quot;&quot;Autopsy studies have described pulmonary micro thrombosis and overt embolism with deep venous thrombus found in over half of fatal COVID-19 cases (Ackermann et al., 2020; Burlacu et al., 2020). These observations support the hypothesis that a unique endothelial injury and thrombosis are playing a role in oxygen desaturation, a cardinal reason for hospitalization and supportive care (Zhang et al., 2020b).</p>
<p>&quot;&quot;Preemptive use of low molecular weight heparin or novel anticoagulants have been associated with &gt; 50% reduction in COVID-19 mortality (Billett et al., 2020). Anticoagulants also reduce death in COVID-19 hospitalized patients with thrombotic complications, elevated D-dimer levels, and higher comorbidity scores (Tang et al., 2020) . Finally, many acutely ill outpatients also have general indications or risk
for cardioembolic/venous thromboembolic prophylaxis applicable to COVID-19 (Moores et al., 2020; Ruocco et al., 2020).</p>
<p>&quot;&quot;Given reports of catastrophic stroke and systemic thromboembolism and the large reductions in mortality for both prophylactic and  therapeutic use, administration of Aspirin 325 mg po qd for all COVID-19 high-risk patients and systemic anticoagulation is prudent in patients with a history of heart, lung, kidney, or malignant disease (Yamakawa et al., 2020).&quot;&quot;</p>
<p>Colchine, in the GRECCO-19 randomized open-label trial in 105 hospitalized patients with COVID-19 (treated with HCQ and Azithromycin in 98 and 93% respectively) found that Colchicine was associated with a reduction in D-dimer levels and improved clinical outcomes (Deftereos et al., 2020).
&quot;</p>
<h3 id="significant-side-effects-3"><a class="header-anchor" href="#significant-side-effects-3">#</a> Significant side effects:</h3>
<p>&quot;HCQ:
Hydroxychloroquine was approved by the U.S. Food and Drug Administration in 1955, has been used by hundreds of millions of people worldwide since then, is sold over the counter in many countries and has a well characterized safety profile (Fram et al., 2020; Schrezenmeier and Dörner, 2020). Asymptomatic QT prolongation is well-recognized though an infrequent (&lt; 1%) occurrence with HCQ (Prodromos et al., 2020). In those with glucose6-phosphate dehydrogenase deficiency HCQ should not be used (Aguilar, 2020). In the setting of acute severe COVID-19 illness, symptomatic arrhythmias can develop in the absence of HCQ and are attributed to cytokine storm and critical illness (Elsaid et al., 2020). Data safety and monitoring boards have not declared safety concerns in HCQ clinical trial published to date. Rare patients with a personal or family history of prolonged QT syndrome, those on additional QT prolonging, contraindicated drugs (e.g. dofetilide, sotalol), should be treated with caution and a plan to monitor the QTc in the ambulatory setting. A typical HCQ regimen is 200 mg bid for 5 to 30 days depending on continued symptoms.</p>
<p>Ivermectin:
This drug is well tolerated, has a high therapeutic index and proven safety profile with over 3.7 billion treatments, and has been used alone or combined with either doxycycline or azithromycin in early clinical studies of patients with COVID-19 (Rahman et al., 2020).</p>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the c19study.com website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.</p>
<p>Corticosteroids:
It was reported that safety concerns regarding prolonged viral replication with steroids have not been substantiated (Masiá et al., 2020).</p>
<p>The following scientific article attempts to identify an association between the alarming rise of mucormycosis in advanced Covid patients in India during the second wave, and the common practice of excessive prescription of Zinc (up to 50 mg per day), antibiotics like Azithromycin, and Corticosteroids even in the early days of disease onset, as well as the widespread use of scalding steam to &quot;&quot;disinfect&quot;&quot; the upper respiratory tract by many households:
A look into the relationship between outdated coronavirus disease 2019 (COVID-19) treatment protocols and the overwhelming rise of mucormycosis in COVID-19 patients in India; Jamal &amp; Rayapati; Infectious Control &amp; Hospital Epidemiology; Aug 27, 2021</p>
<p>&quot;</p>
<h3 id="recommended-quantity-for-stocking-3"><a class="header-anchor" href="#recommended-quantity-for-stocking-3">#</a> Recommended quantity for stocking:</h3>
<p>The OTC nutraceutical products could be bought in advance and stocked for early home-based treatment.</p>
<h3 id="price-3"><a class="header-anchor" href="#price-3">#</a> Price:</h3>
<p>INR 25-70 for 4 12 mg ivermectin tablets and doxycycline being much cheaper. Nutraceutical products may vary in price depending on the brand and its quality.</p>
<h3 id="suggested-suppliers-3"><a class="header-anchor" href="#suggested-suppliers-3">#</a> Suggested suppliers:</h3>
<p>&quot;Prescription medicine purchased at local pharmaceutical stores or online, and to be used under the guidance of a licensed allopathic practitioner. The nutraceutical products could be bought online, including at Amazon.</p>
<p>Telemedicine portals for Covid-19 prescriptions like Ivermectin&quot;</p>
<h3 id="further-references-3"><a class="header-anchor" href="#further-references-3">#</a> Further references:</h3>
<p>&quot;Multifaceted highly targeted sequential multidrug treatment of early ambulatory high-risk SARS-CoV-2 infection (COVID-19); Reviews in Cardiovascular Medicine; Dec 30, 2020</p>
<p>Early Treatment of the Inflammatory Stage of Covid-19 and its Rationale</p>
<p>AAPS online educational resource: A Guide to Home-Based COVID Treatment: Step-By-Step Doctors' Plan That Could Save Your Life; Jane M. Orient, MD, Elizabeth Lee Vliet, MD</p>
<p>The McCullough Report</p>
<p>Outpatient Early Treatment Algorithm for COVID-19: A Webinar With Dr. Peter McCullough, MD, MPH</p>
<p>Vaccinated or Not, Acute COVID-19 in High-Risk Patients Demands Early Treatment; Dr. Peter Mc Cullough; Aug 17, 2021</p>
<p>Prophylaxis and Early Therapies for COVID-19 in Nursing Homes: Highlights with Drs. Robin Armstrong, George Fareed, Thomas Borody, Christian Perronne</p>
<p>Statistical support for the efficacy of Ivermectin-based treatment protocols from around the world</p>
<p>thegatewaypundit.com: AMAZING- COVID-19 Cases in Indonesia Plummet After Government Authorizes IVERMECTIN For Treatment</p>
<p>C19Protocols: Early Treatment Protocols</p>
<p>Association of American Physicians and Surgeons with Dr. Peter McCullough: Pathophysiologic Basis and Clinical Rationale for Early Ambulatory Treatment of COVID-19; Jan 28, 2021</p>
<p>[Health Is Number One] Interview: Dr. Peter McCullough Early Treatment for COVID-19</p>
<p>covexit.com: A few articles and videos making reference to Dr. Peter McCullough's treatment approach and work
&quot;</p>
<h2 id="_4-experience-of-a-veteran-covid-frontline-physician-dr-richard-urso-ophthalmologist-and-molecular-oncologist-texas-usa-on-the-early-treatment-of-the-delta-variant"><a class="header-anchor" href="#_4-experience-of-a-veteran-covid-frontline-physician-dr-richard-urso-ophthalmologist-and-molecular-oncologist-texas-usa-on-the-early-treatment-of-the-delta-variant">#</a> 4. Experience of a veteran Covid frontline physician Dr. Richard Urso, ophthalmologist and molecular oncologist, Texas, USA, on the early treatment of the Delta variant</h2>
<h3 id="objective-4"><a class="header-anchor" href="#objective-4">#</a> Objective:</h3>
<p>An innovative and experienced frontline physician's perspective on effective treatment protocols for Covid-19 by a knowledgeable frontline doctor</p>
<h3 id="system-4"><a class="header-anchor" href="#system-4">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-4"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-4">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Allopathic treatment protocols can not be intermixed, except under the supervision of qualified doctors.</p>
<h3 id="status-of-authorisation-4"><a class="header-anchor" href="#status-of-authorisation-4">#</a> Status of authorisation:</h3>
<p>Dr. Richard Urso is one of the foremost frontline doctors who have been advocating for early treatment for Covid-19 from early 2020.</p>
<h3 id="protocol-and-treatment-approach-4"><a class="header-anchor" href="#protocol-and-treatment-approach-4">#</a> Protocol and treatment approach:</h3>
<p>&quot;Dr. Urso is of the view that the policy of Remdesivir for the treatment of Covid-19, and treating for viral illness during the inflammatory phase of the illness, has resulted in incorrect treatment (for a non-existent condition) and consequently, as a study showed, extended hospital stays and increased mortality from a number of causes, predominantly kidney and organ failure. However, he says, hospitals and doctors are indifferent to the tremendous amount of evidence supporting the value of early treatment protocols, though patients are calling frequently requesting evidence-based effective therapy.</p>
<p>Hydroxychloroquine is shown to have a number of beneficial effects besides its therapeutic value in certain diseases, including Covid. HCQ has been shown to decrease blood glucose, cholesterol, improve inflammatory markers like CRP and D-dimer, improves bone health, and is now being evaluated for its effect on solid tumours with 96 related clinical trials on clinicaltrials.gov..</p>
<p>Dr. Urso concluded early in the pandemic that the pathology of Covid-19 suggested a biphasic illness, because it is a respiratory virus and respiratory viruses have a life cycle of 5-7 days in the body. It is also well-known that respiratory viruses cause inflammatory disease, and this is an important focus of therapy for respiratory viruses, in general.</p>
<p>Dr. Chetty's systematization of the disease pathology and observation of the disease presentation at different points of the timeline post vaccination is an example of the keen observation that a doctor must possess in his clinical practice. This is how clinical practice and community medicine must work, with doctors sharing information on the ground.</p>
<p>&quot;&quot;There is always a better mousetrap, there are better solutions. It is important to adapt therapy to the changing context in the pandemic, and it is always possible to find better solutions. There is no need to be afraid of this challenge. Such challenges are normal, and therapies must be dynamically changing.&quot;&quot; It is important to appreciate that as we go forward, there will emerge better therapeutic solutions to the pandemic. For example, the following therapeutic products may be repurposed to improve the current best treatment protocols for Covid-19: Cyclosporine, the immunosuppressant long used to preempt the body's rejections of transplants, might work. Fenofibrate, which is mainly used to lower LDL cholesterol and triglycerides, the HIV and antiretroviral drug Kaletra, the anti-inflammatory drug Colchicine, Interferons, which belong to a class of signalling proteins called cytokines and are used as antiviral therapeutic agents, Hydroxychloroquine, Ivermectin, the androgen blockers Spironolactone and Eplerenone (ordinarily used to treat high blood pressure), and more. Dr. Urso has repurposed many of these in his clinical protocols, even in ophthalmology for many years. Therefore it may not be difficult to innovate new therapeutic options to treat Covid better, even the aggressive variants, and it is exciting to meet the challenges entailed.</p>
<p>The patients who have the greatest risk of severe infection wiith the delta variant are those with insulin resistance, which is different from the pathology of the previous milder variants. Dr. Urso has been trying to share protocol innovations with clinical practitioners who are seeking to improve upon existing treatment modalities, and especially doctors in ER care. These protocols primarily use Ivermectin and / or HCQ.</p>
<p>The potent first generation antihistamine Cyproheptadine has been especially effective with the Delta variant. Patients don't die of the virus but the body's own inflammatory response to the spike proteins, and Dr. Urso began to prescribed corticosteroids very early. It is very important to maintain vitamin D levels about 50 ng/dl, and if there is one step one might take to preempt or combat Covid, it is maintaining healthy blood levels of D, which would most effectively preempt a cytokine storm. Patients who have had bariatric surgery or a gall bladder operation, they would need higher levels of supplementation due to reduced absorption. The immune system is &quot;&quot;blind without vitamin D&quot;&quot;, and will attack pollen, tumour cells and other foreign particles recklessly, without risk assessment. Furthermore, Dr. Urso has learnt that natural immunity acquired through infection would not last as long if the body is D-deficient. Vitamin D helps immensely with allergies, asthma, cancer, and overall health of the immune system.</p>
<p>(Note: When supplementing with vitamin D, it is important also to supplement with sources of vitamin K2, and also with sources of Calcium and Magnesium for improved D absorption and bone health.)</p>
<p>Steroids have a huge impact on the disease and are critical to outpatient Covid care, though the prevalent Covid protocols discourage the use of steroids in outpatient care, which seems insanity. A few bodies like the FLCCC hope to propagate the value of effective early treatment protocols, as well as shed light on the Covid vaccines. The prescription of Covid vaccines to young people who are not at any significant risk from the disease, and to people who have been infected and are already naturally immune to the disease, seems &quot;&quot;ludicrous&quot;&quot;. Covid-recovered individuals are likely to have B- and T-cell immunity to the virus' spikes, membranes, envelope, nucleocapsids and other parts of the virus and not just an isolated component of the virus, unlike vaccine-induced immunity. Therefore they have an essentially 0 percent chance of reinfection even by mutant strains of the virus. However without sufficient vitamin D, it is possible that persistent antibodies will not be created.&quot;</p>
<h3 id="typical-duration-of-treatment-4"><a class="header-anchor" href="#typical-duration-of-treatment-4">#</a> Typical duration of treatment:</h3>
<p>Effective early treatment allopathic protocols appear to take about 1-2 weeks to complete cure in the vast majority of patients, and about a month in some patients that advance to a severe inflammatory phase.</p>
<h3 id="outcome-4"><a class="header-anchor" href="#outcome-4">#</a> Outcome:</h3>
<p>Dr. Urso has prescribed HCQ in his ophthalmologic practice for 3-4 years and to thousands of patients, and now with thousands of Covid patients and for prophylaxing. He has also discovered the wide efficacy of repurposed drugs and innovation in therapeutic protocols in his vast clinical experience and in particular, with Covid. Dr. Urso is a firm believer in the value of early outpatient treatment of Covid-19 and its variants with Ivermectin and HCQ as the main line of therapy, and supplemented or supported by a wide portfolio of other drugs like antiviral agents, vital immune-suppportive nutrients, corticosteroids, antihistamines, MAbs, androgen blockers etc., based on the results of hundreds of successful clinical trials by clinicians across the world.</p>
<h3 id="significant-side-effects-4"><a class="header-anchor" href="#significant-side-effects-4">#</a> Significant side effects:</h3>
<p>Many of the drugs described in these protocols have significant side effects, and especially when the therapeutic doses are exceeded. Doctor's discretion is essential to their proper dosing and use.</p>
<h3 id="recommended-quantity-for-stocking-4"><a class="header-anchor" href="#recommended-quantity-for-stocking-4">#</a> Recommended quantity for stocking:</h3>
<p>Ivermectin / HCQ, vitamin D, K2, (Calcium, Magnesium) and Zinc can be stocked for prophylaxing.</p>
<h3 id="price-4"><a class="header-anchor" href="#price-4">#</a> Price:</h3>
<p>&quot;The first line of drugs used in the protocol are commonly used and inexpensive. The prices of many of the drugs, even common medications, as well as their availability, are artificially controlled by the pharmaceutical industry, and may vary widely between countries. Nitazoxanide, for example, is very cheap and commonly available in Brazil and very expensive and hard to procure in the US. Ivermectin, as Dr. Andrea Stramezzi revealed, could not be procured in Italy but was available in other countries of the EU like Italy.</p>
<p>Israeli scientist says COVID-19 could be treated for under $1/day</p>
<p>&quot;</p>
<h3 id="suggested-suppliers-4"><a class="header-anchor" href="#suggested-suppliers-4">#</a> Suggested suppliers:</h3>
<p>&quot;Earlier section on the FLCCC early treatment protocol includes embedded links to online suppliers.
&quot;</p>
<h3 id="further-references-4"><a class="header-anchor" href="#further-references-4">#</a> Further references:</h3>
<p>The Early Treatment of Delta: Part 4 - Dr. Richard Urso</p>
<h2 id="_5-ivermectin-doxycycline-protocol-by-aguirre-chang-gustavo-et-al-using-cyproheptadine"><a class="header-anchor" href="#_5-ivermectin-doxycycline-protocol-by-aguirre-chang-gustavo-et-al-using-cyproheptadine">#</a> 5. Ivermectin + Doxycycline protocol by Aguirre-Chang, Gustavo et al., using Cyproheptadine</h2>
<h3 id="objective-5"><a class="header-anchor" href="#objective-5">#</a> Objective:</h3>
<p>Ivermectin is well-established now to be both preventive and curative. The present therapeutic plan is curative and vouched for by clinical practitioners.</p>
<h3 id="system-5"><a class="header-anchor" href="#system-5">#</a> System:</h3>
<p>Repurposed allopathic</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-5"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-5">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Allopathic treatment protocols can not be intermixed, except under the supervision of qualified doctors.</p>
<h3 id="status-of-authorisation-5"><a class="header-anchor" href="#status-of-authorisation-5">#</a> Status of authorisation:</h3>
<p>&quot;De facto authorization due to supportive evidence, as one of the most effective known allopathic protocols for Covid.</p>
<p>Ivermectin was discovered in the 1970s and is on the World Health Organization (WHO) list of essential medicines.
&quot;</p>
<h3 id="protocol-and-treatment-approach-5"><a class="header-anchor" href="#protocol-and-treatment-approach-5">#</a> Protocol and treatment approach:</h3>
<p>&quot;In Days 1-4, there is very little or no pulmonary involvement. The nose and pharynx are affected. The variants affect the intestines and heart, and in children, it is multi-organ.
(NOTE: When nebulizing, aerosols will be genertaed, which increases the risk of contagion to other people. When nebulizing at home, there should be no other person in the environment while nebulizing, and patient should know to turn off nebulization by themselves.)</p>
<p>The viral load is estimated according to response to treatment, 27-30 hours after treatment begins.</p>
<p>Day 1: I. Nasal, Pharyngeal + Intestinal
Response to treatment, diagnosis and severity: If treatment is started on day 1 of symptomatic infection and there is rapid response, with improvement from 97% to 100%, then a low viral load is estimated.
Therapeutic plan:
Ivermectin-  0.4 mg per kg of Ivermectin, X 1 dose a day, after lunch or dinner for 3 to 4 days. If there is fever over 38 degrees Celsius for more than 12 hours or semiliquid stool, add the 2nd dose in the day.
Additional hydration- 1-2 litres / day
Nasal washes- 3-4 times / day with a 10 ml syringe with 1 glass of water with 0.5 teaspoon of salt
Gargle- 4-5 times a day. Mix 10 ml of cold boiled water with 5 ml of hydrogen peroxide of 10 volumes, or with 0.05% cetylpyridinium chloride, 10 ml undiluted.
Contact tracing and administration of Ivermectin to contacts- 0.4 mg / kg of body weight for 3 continued days. For men aged over 70 years, give for 5 days. In caregivers, give for 6 continued days.</p>
<p>Reduce platelet hyperactivity and thrombophilia- Acetyl Salicylic Acid (ASA), 300-500 mg X 1 dose on the day 1 alone. Ambulation at home, change position every half an hour during the day, avoid crossing the legs, flexion and extension exercises.</p>
<p>Treatment of increased nutrient requirement, oxidative stress, lymphopenia and immune dysfunction-
Avoid coffee, alcohol, nuts, peanuts, almonds, pecans, orange, lemon, tangerine, banana, elderberry, chocolate, seeds, oats, wheat, corn, chillie pepper, tomato, cold cuts, fish and other seafood. Consume more turkey, chicken, egg, beef, mango, potato, quinoa, yoghurt.</p>
<p>Do not use Paracetamol. Use antipyretics only if fever exceeds 38 deg Celsius.</p>
<p>Days 2 &amp; 3: I. Nasal, Pharyngeal + Intestinal
Response to treatment, diagnosis and severity: If there is partial response to treatment thus far, 25 to 96 % improvement suggests medium viral load. However, if the disease has affected the intestines, severity is high.</p>
<p>Therapeutic plan:
Ivermectin- 0.4 mg / kg X 2 doses, after breakfast and dinner for 4 - 7 days.
Nifuroxazide 200 mg + Atapulgite 350 mg- If there is fever longer than 24 h. and / or diarrhoea, give Nifuroxazide 200 mg + Atapulgite 350 mg, as 2 tablets (400 mg) every 12 hours or every 8 h. X 4 - 8 days, according to severity. If weight more than 90 kg and the viral load is moderate, give 600 mg every 8 h.
Famotidine- 60 mg at 10 PM, for 7-14 days
Ranitidine- 300 mg at 10 PM X 7-14 days
Continue with additional hydration of 1-2 litres / day, nasal washes, gargles, Ivermectin to contacts.</p>
<p>Reduce platelet hyperactivity and thrombophilia-
ASA TB (Aspirin)- 200 - 300 mg / day X 7-12 days, as 100 mg after meals. If weight more than 90 kg, give 300-600 mg a day, in 2 or 3 parts, after meals, X 7-12 days.
Alternatives, or which could be added to ASA- Dipyramidole 75 mg 1 TB 2-4 times / day, away from food, Clopidogrel TB 75 mg, 37.5 to 75 mg / day</p>
<p>Treatment of increased nutrient requirement, oxidative stress, lymphopenia and immune dysfunction-
Zinc- 150-300 mg X day X 12 days, Not to be taken with food but away from meal times and dairy (11 AM and / or 4 PM)
Vit. D- 30,000 - 90,000 IU / day X 6 days, or 300,000 IU / day
Vit. C- 2 g every 12 hours X 6-12 days
Vit. A- 75,000 - 100,000 IU / day X 3 days. Do not take on the 4th day, and repeat X 3 days the same.
Sodium bicarbonate- 1 sachet of Andrews salt or 1/2 teaspoon of baking soda in a glass of water at 11 AM and 10 PM X 3 days</p>
<p>Day 4: I. Nasal, Pharyngeal + Intestinal
Response to treatment, diagnosis and severity: If response to treatment is &lt; 25 %, high and persistent viral load.</p>
<p>Therapeutic plan:
Add:
Nitazoxanide- 500 mg tablet every 12 hours X 6 days, every 8 hours if your weight is &gt; 80 kg
Bromhexine- FCO 8 mg (5 ml) every 8 hours X 6-7 days
If there is no diarrhoea, give Nifuroxazide without Atapulgite- 400 mg tablet every 8 hours X 6-9 days.
If fever persists, increase dosage of Ivermectin and give Doxycycline 100 mg every 12 hours X 6 days or Azithromycin</p>
<p>Reduce platelet hyperactivity and thrombophilia- Continue previous treatment.</p>
<p>Treatment of increased nutrient requirement, oxidative stress, lymphopenia and immune dysfunction-
Colchicine- TB 0.5 mg every 12 hours X 15 days. If weight more than 75 kg, give 2 TB in the morning.
N-Acetyl cysteine- 600 mg sachet or TB. 1sachet dissolved PO every 6-8 hours X 6-10 days
Cyclesonide or Budenoside- 2 inhalations in the morning, noon and afternoon X 10 days
Lysine- 2 TB 500 mg, 11 am and 5 am X 14 days
Niacin (B3)- TB 500 mg, 2-3 / day X 6-8 days</p>
<p>In days 5 - 14, if progression to pumonary stage or multiple organs affected, hospitalization may be required, may require ICU, VM in days 10 and upward.</p>
<p>Days 5 &amp; 6: II. Pulmonary</p>
<p>Response to treatment, diagnosis and severity: Progression to lungs, intestines, myocardium-pericardium, muscles; medium to high viral load; initial pulmonary oedema, thrombophilia, gastroenteritis, investigate myocarditis / pericarditis</p>
<p>Treatment plan:
Ivermectin- 0.4 mg / kg of weight in each dose X 3 times a day (at breakfast, lunch and dinner). Take up to 2-3 days after symptoms subside.
Spironolactone- TB 25 or 100 mg, 100 mg / day for 8-14 days
Fluvoxamine- TB 100 mg, 50 mg on 1st day, then 100 mg / day X 12 days.
In men, Add one of the following alternatives:
Dutasteride- 0.5 mg / day, or Bicalutamide- 150 mg / day X 7-14 days, or HCQ- nebulize, grind 200 mg of 1 TB and pour in 8 ml of distilled water, or boiled cold (water?), for 20 min. every 12 hours X 3 days.
For pulmonary oedema- Put in prone or Mohammedan or Left Lateral position. Do not give sodium chloride, but dextrose 5 %, restrict liquids.</p>
<p>Reduce platelet hyperactivity and thrombophilia-
Enoxaparin AMP, SC- For &lt; 75 kg weight, 40 mg every 24 hours; for &gt; 75 kg, 60 mg every 24 hours
Lumbrokinase- TB 20 mg, 4 / day
Curcuma- TB 500 mg, 1 / day X 14 days
Omega 3- TB 1000 mg, 1 / day X 14 days</p>
<p>Treatment of increased nutrient requirement, oxidative stress, lymphopenia and immune dysfunction- Continue treatment of Day 4.</p>
<p>Days 7, 8 &amp; 9:</p>
<p>Response to treatment, diagnosis and severity: High viral load; affecting lungs, intestines and heart; moderate ARDS, dissseminated microthrombosis, gastroenteritis, myocarditis / pericarditis, investigate encephalitis</p>
<p>Treatment plan: Continue treatment plan of Days 5 &amp; 6.
In addition- If there is fever, investigate coinfection.
Alternate oral medication- Cefixime 400, LEVO 750, Moxifloxacin 400
IV- Ceftriaxone 2 g, Cefipime, Meropenen</p>
<p>Reduce platelet hyperactivity and thrombophilia-
Enoxaparin AMP SC 40 mg- 0.5 mg / kg every 12 hours. If oxygen saturation drops below 85 %, give 0.5 every 8 hours.
Alternatives- Heparin AMP; Or AAS 600 mg / day + Lumbrokinase 80 mg / day + Curcuma 1000 mg / day</p>
<p>Treatment of increased nutrient requirement, oxidative stress, lymphopenia and immune dysfunction-
Quercetine- 500 mg, 1-2 every 12 hours X 7 days
Vit C AMP or TB- 50 mg / kg weight, EV or PO every 8 or 12 hours X 3-6 days
Vitamin B12 TB- 3000 mcg / day X 8-12 days
Thyamine TB- 300 mcg / day X 8-12 days
Melatonin TB- Before sleeping; increase from 3 to 6 to 10 mg
Selenium TB- 200 mcg, 2-3 days X 30 days</p>
<p>Days 9 - 14</p>
<p>Response to treatment, diagnosis and severity: Very high, total body viral load; moderate / severe ARDS, SIRS, thromboembolic disease, myocarditis; investigate heart-renal failure, encephalitis, investigate brain, kidney, skin, feet</p>
<p>Treatment plan:
Ivermectin- 0.4 mg / kg X 3-4 times a day; see tolerance
Nifuroxazide 200 mg- 2 TB every 6 hours X 6-9 days; if weight &gt; 90 kg, give 3 TB every 8 hours
Nitazoxanide- TB 200 mg every 8 hours X 6-12 days; if weight &gt; 90 kg, give 3 TB every 8 hours
Spironolactone- 100 mg every 12 hours X 6 days, then 100 mg a day for 8 more days
Antibiotics- For aggreg. infection
Enoxaparin- AMP SC 40 mg; dosage for critical cases: if oxygen saturation drops to less than 82 %, give 0.5 mg / kg of body weight every 8 hours X 2-3 days, until oxygen saturation recovers to &gt; 82 %, and then change to every 12 hours
Cyproheptadine- Start with 0.4 mg / kg / day; divide into doses every 8 hours X 3 days, then 0.2 mg / kg
Fibrinolytics- EV or VO</p>
<p>Treatment of increased nutrient requirement, oxidative stress, lymphopenia and immune dysfunction-
Dexamethasone- 4 mg TB or AMP 6-8 mg / day X 3-8 days, Or
Methylprednisol- 125 mg X 3 days, Or
Cyclosporin- 6-10 mg / kg / day in 2 doses X 4-7 days, accord. resp.
Immunoglobulin (IGIV) AMP- 400 mg / kg / day slow infusion X 3 days
Use High Flow Nasal Cannula (HFNC).&quot;</p>
<h3 id="typical-duration-of-treatment-5"><a class="header-anchor" href="#typical-duration-of-treatment-5">#</a> Typical duration of treatment:</h3>
<p><strong>VACANT</strong></p>
<h3 id="outcome-5"><a class="header-anchor" href="#outcome-5">#</a> Outcome:</h3>
<p>RCTs show that this relatively inexpensive treatment has significant benefits over standard treatments.</p>
<h3 id="significant-side-effects-5"><a class="header-anchor" href="#significant-side-effects-5">#</a> Significant side effects:</h3>
<p>&quot;Ivermectin and other drugs can have significant side effects if used without the informed advice of a knowledgeable physician. In particular, there are no studies cited of safety in pregnant women, lactating mothers and in children weighing less than 15 kg.</p>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the c19study.com website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.&quot;</p>
<h3 id="recommended-quantity-for-stocking-5"><a class="header-anchor" href="#recommended-quantity-for-stocking-5">#</a> Recommended quantity for stocking:</h3>
<p>Commonly available drugs, need not be stocked. Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-5"><a class="header-anchor" href="#price-5">#</a> Price:</h3>
<p>Rs. 25-70 for 4 12 mg ivermectin tablets and doxycycline being much cheaper, which is significantly more cost effective than treatment with remdesivir, which costs Rs. 15,000-30,000 for a five-day treatment)</p>
<h3 id="suggested-suppliers-5"><a class="header-anchor" href="#suggested-suppliers-5">#</a> Suggested suppliers:</h3>
<p>&quot;Prescription medicine purchased at local pharmaceutical stores, and to be used under the guidance of a licensed allopathic practitioner</p>
<p>Telemedicine portal for Covid-19&quot;</p>
<h3 id="further-references-5"><a class="header-anchor" href="#further-references-5">#</a> Further references:</h3>
<p>&quot;researchgate.net: TABLE 2021, COVID-19: THERAPEUTIC PLAN AND POTENTIAL THERAPIES; Gustavo Aguirre-Chang et al.; January 2021</p>
<p>White paper on Ivermectin as a potential therapy for COVID-19; Indian Journal of Tuberculosis; Agam Vora, V. K. Arora, et al.</p>
<p>Ivermectin: Top 15 Articles &amp; Interviews</p>
<p>Prospective Cohort of Fluvoxamine for Early Treatment of Coronavirus Disease 19; Seftel &amp; Boulware; Open Forum Infectious Diseases; Feb, 2021</p>
<p>&quot;</p>
<h2 id="_6-ippocrate-protocol"><a class="header-anchor" href="#_6-ippocrate-protocol">#</a> 6. Ippocrate Protocol</h2>
<h3 id="objective-6"><a class="header-anchor" href="#objective-6">#</a> Objective:</h3>
<p>The effective mitigation of infection through early intervention outpatient or at-home therapy, and prophylactic protocol to preempt infection</p>
<h3 id="system-6"><a class="header-anchor" href="#system-6">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-6"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-6">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Only at a competent doctor's discretion</p>
<h3 id="status-of-authorisation-6"><a class="header-anchor" href="#status-of-authorisation-6">#</a> Status of authorisation:</h3>
<p>The Ippocrate Movement, centred in Italy, brings together a global network of eminent physicians, researchers, health and social workers, guided and represented by a scientific and medical committee of 23 physicians and scientists of national and international repute, including Dr. Robert Malone, the co-inventor of foundational technology that led to the invention of mRNA vaccines. The purpose of the scientific network is to use the best evidence-based research to formulate the best treatment approaches for Covid-19, and guidance to other physicians to treat their patients. Ippocrate Movement- Medical Scientific Community</p>
<h3 id="protocol-and-treatment-approach-6"><a class="header-anchor" href="#protocol-and-treatment-approach-6">#</a> Protocol and treatment approach:</h3>
<p>&quot;There are 3 main symptomatic stages of the disease, as identified through the clinical observations of a large network of clinicians. The stages and the clinical progression of Covid-19 are described below:</p>
<p>Early treatment is the winning strategy. Stage 0 Therapy is recommended for all close contacts of infected patients.</p>
<p>Days 0 to ~5: STAGE 0: TEST-POSITIVE, ASYMPTOMATIC
Treatment: Immunity boosting and treatment of viral replication with supplements and phytochemicals
THERAPY: The proper combination of medications from the list will be prescribed by the physician, according to the patient’s needs and characteristics. The general recommendation, in any case, is to prescribe Vitamins D &amp; C, and Zinc, which are to be continued even in the severe stage of the disease (i.e., Stages 1, 2 and 3).
Vitamin D3:
Adult dosage: 50,000 IU / day for 6 days (if not in prophylaxis); 10,000 IU / day for 6 days (if in prophylaxis), and then 4,000 IU / day (To be consumed with a greasy meal, for example at lunch)
Children: 200 IU / Kg / day (Until negative test)
Contraindications: Severe Chronic Kidney Insufficiency (CKD), Hypercalcemia
(Note: When supplementing with vitamin D, it is important also to supplement with vitamin K2.)
Vitamin C: From 1 g / day
Contraindications: Severe Chronic Kidney Disease (CKD), deficit G6PD
Zinc picolinate: 30-50 mg / day; No contraindications
Esperidine: 100 mg / day; No contraindications
Quercetin: Up to 250 mg x 2 / day; No contraindications
Lactoferrin: Up to 200 mg x 2 / day
Bromhexine: 8 mg x 3 / day
Pelargonium S.:
&gt; 12 y-o: 20 mg x 3 / day for 7 days
6-12 y-o: 13 mg x 3 / day for 7 days
Contraindications: Hemorrhagic diathesis; F.E in patient in treatment with blood thinners
Suffumigation: 3 times / day; No contraindications
Hydrossitirosol and α-cyclodestrine: 2-3 puffs x 3-4 / day in the throat
Other active ingredients known for their antiviral action:
Vitamin A: Up to 30,000 IU / day
Contraindications: Pregnancy
Resveratrol: Up to 1000 mg / day; No contraindications</p>
<p>Days ~5 to ~10: STAGE 1: EARLY INFECTION
Pathopsychology: Viral replication
Clinical symptoms: Fever, joint and muscle pain, headache, weakness and other influenza symptoms
Treatment: Drug-based treatment of viral replication and controlling symptoms:
THERAPY:
ASA: Up to 100 mg / day till asymptomatic; No contraindications
Ivermectin: 0.2 mg / kg (i.e., 12 mg to 20 mg daily) for 5 days; in case of poor clinical response, advanced disease, or obesity, higher doses should be used (target 0.4 - 0.6 mg / kg); No contraindications
Hydroxychloroquine (HCQ): 200 mg x 2 / day for 7 days
Contraindications: Arrhythmias, retinopathy, deficit G6PDH</p>
<p>Azithromycin: 500 mg / day for 3 days, stop 2 days, then repeat
Contraindications: Long QT Syndrome
OR Doxycycline: 100 mg x 2 / day for 7 days</p>
<p>Colchicine: 0.5 mg x 2 / day for 14 days
Contraindications: Cardiac insuffufficiency, CKD
Drug interaction: Do not use with Clarithromicin.</p>
<p>Days ~10 to ~15: STAGE 2: PULMONARY PHASE
Pathopsychology: Infection affects lower respoiratory tract and lungs
Clinical symptoms: Cough, dyspnoea (difficult or laboured breathing), polypnea (rapid or panting respiration)
Treatment: Treatment of inflammation, superinfection and help with breathing</p>
<p>Stage 2A: PULMONARY PHASE WITHOUT HYPOXIA (OXYGEN DEFICIENCY)
THERAPY: Practitioner will evaluate if patient needs corticosteroid in therapy, as in stage 2B. It is advisable to do thoracic ecography and / or CT scan.
Montelukast: 10 mg 2 hours after dinner for 14 days
Amoxi / Clavulanic Acid OR other antibiotics: 875 mg + 125 mg x 3 / day for 8-10 days; In association with Azithromycin in case of superinfection
Acetyl-Cysteine: 600 mg up to x 3 / day, for 7 days
Levodropropizine: 60 mg as needed, up to x 3 / day
Enoxaparin:
If weight &lt; 70 kg: 4,000 IU x 1-2 / day for 10 days
Weight 70 - 100 kg: 6,000 IU x 1-2 / day for 10 days
Contraindications: Hemorrhagic diathesis, thrombocytopenia</p>
<p>Stage 2B: PULMONARY PHASE WITH HYPOXIA
THERAPY:
Oxygen therapy: 1-6 L / min if SpO2 &lt; 92 % in AA
Enoxaparin: 100 IU / Kg / 12 hours</p>
<p>Corticosteroids- DO NOT ASSOCIATE the steroids but use them alternatively; NEVER AT THE BEGINNING, but only at the end of the viral stage; Associate gastroprotection; Use for 6-7 days then diminish; Recocmmended as one morning dose, but 2 doses if the patient is suffering (Deflazacort always to be prescribed, for its fast action)
Contraindications: Hypertension, hyperglycaemia etc.
Dexamethasone: 6 mg / morning OR 3 mg x 2 / day
Betamethasone: 8 mg / morning OR 4 mg x 2 / day
Methylprednisolone: 32 mg / morning OR 16 mg x 2 / day
Prednisone: 40 mg / morning OR 20 mg x 2 / day
Deflazacort: 30 mg x 2 / day</p>
<p>Antibiotics: According to the physician's judgement</p>
<p>Days ~15 onwards: STAGE 3: HYPERINFLAMMATION PHASE
Pathopsychology: Hypercytokinemia or cytokine storm
Clinical symptoms: Severe Acute Respiratory Syndrome (SARS), vasculitis, microembolism, microthrombosis, multiorgan failure
Treatment: Requires hospitalization; In case Oxygen &gt; 6 L / min OR SpO2 persistently &lt; 92 %, HOSPITALISATION IS MANDATORY.</p>
<p>&quot;</p>
<h3 id="typical-duration-of-treatment-6"><a class="header-anchor" href="#typical-duration-of-treatment-6">#</a> Typical duration of treatment:</h3>
<p>0-15 days, for the majority of cases, which are asymptomatic, mild or moderate</p>
<h3 id="outcome-6"><a class="header-anchor" href="#outcome-6">#</a> Outcome:</h3>
<p><strong>VACANT</strong></p>
<h3 id="significant-side-effects-6"><a class="header-anchor" href="#significant-side-effects-6">#</a> Significant side effects:</h3>
<p>Many of these medications have side effects, especially in excess of therapeutic doses. These may be researched online.</p>
<h3 id="recommended-quantity-for-stocking-6"><a class="header-anchor" href="#recommended-quantity-for-stocking-6">#</a> Recommended quantity for stocking:</h3>
<p>The nutrient supplements, vitamins D &amp; C, Zinc, and Quercetin may be stocked along with Ivermectin and HCQ for at-home prophylactic use. Most critical medications are OTP, to be prescribed and used under supervision of a physician.</p>
<h3 id="price-6"><a class="header-anchor" href="#price-6">#</a> Price:</h3>
<p>Supplements and drugs prescribed in Stages 0 &amp; 1 are not expensive.</p>
<h3 id="suggested-suppliers-6"><a class="header-anchor" href="#suggested-suppliers-6">#</a> Suggested suppliers:</h3>
<p>Online and physical pharmacies</p>
<h3 id="further-references-6"><a class="header-anchor" href="#further-references-6">#</a> Further references:</h3>
<p>&quot;IppocrateOrg: How to treat Covid-19; Dec 19, 2020</p>
<p>&quot;</p>
<h2 id="_7-dr-shankara-chetty-s-8th-day-therapy"><a class="header-anchor" href="#_7-dr-shankara-chetty-s-8th-day-therapy">#</a> 7. Dr. Shankara Chetty's 8th Day Therapy</h2>
<h3 id="objective-7"><a class="header-anchor" href="#objective-7">#</a> Objective:</h3>
<p>Mitigation of active infection</p>
<h3 id="system-7"><a class="header-anchor" href="#system-7">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-7"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-7">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Only at a competent doctor's discretion</p>
<h3 id="status-of-authorisation-7"><a class="header-anchor" href="#status-of-authorisation-7">#</a> Status of authorisation:</h3>
<p>&quot;With ample anecdotal evidence from clinical practice, the 8th Day Therapy strategy has informed and been assimilated into other effective protocols for Covid worldwide.</p>
<p>Not a single one of Dr. Chetty's several thousands of patients is reported to have succumbed to Covid-19 or even required oxygen with this treatment approach. Patients in the hypersensitive phase do not require more than 2 weeks to recover, and often recover much quicker.&quot;</p>
<h3 id="protocol-and-treatment-approach-7"><a class="header-anchor" href="#protocol-and-treatment-approach-7">#</a> Protocol and treatment approach:</h3>
<p>&quot;8th Day Therapy: Prednisone 80 mg, Promethazine 25 mg, Monteleukast 10 mg, Aspirin 325 mg</p>
<p>Dr. Chetty's 8th Day Therapy protocol views the inflammatory response in some patients after Covid as a hypersensitivity reaction and aggressively treats symptoms accordingly on the 8th day after initial appearance of symptoms. The treatment modality worked very well and can be adapted to use in rural settings as well as ICUs. The doctor, practising in South Africa, has a considerable experience with the outpatient treatment of COVID-19. He holds a degree in medicine and surgery and also has advanced education in genetics, advanced biology, biochemistry and microbiology.</p>
<p>Dr. Chetty's observations of Covid symptoms in his patients, and the motivation for his protocol:
Dr. Chetty observed that the new disease Covid presented as a bi-phasic illness, where the initial illness was an ordinary respiratory illness, with unusual symptoms such as loss of smell and taste and sore throat, The entire course of the illness presented with an unusual non-linear progression of symptoms where many patients retrogressed sharply on the eighth day after commencement of the first symptoms, even after seeming (like other patients) to be improving steadily after the fourth or fifth day. In fact, a majority of patients recovered from the first phase of illness by the sixth day, so much so that even some patients who relapsed had been preparing to return to work very soon. Doxycycline was a drug of choice added to treatment of the first phase of the illness, for its anti-inflammatory and antiviral properties through inhibition of protein synthesis and viral replication. Primary contacts were also prophylactically treated with Doxycyclin, which was therefore a mainstay of the treatment. Aspirin too was added to the early protocol to address the blood clotting issues that occurred later, depending on patient's D-dimer results and predisposition.</p>
<p>The relapse manifested as breathlessness or dyspnoea, and in a few such patients, the disability took weeks or even months to resolve (&quot;&quot;long Covid&quot;&quot;). These observations led to the inference that the supposed relapse of severe symptoms were not owing so much to the Covid pathogen, as due to the body's own hypersensitivity or severe allergic response. In other words, the hospitalized patients were not suffering from the viral pneumonia with which they were misdiagnosed and treated, but from hypersensitivity pneumonitis, and high definition CT and X-ray could not tell the two apart.</p>
<p>In Dr.Chetty's own words, “With hyper-sensitivity, the most important thing is to start treatment early. The longer you leave it, the cascade of mediators will result in other sequalae and culminate into a cytokine storm. But like with other hyper-sensitivity reactions, if caught early, they are easy to cut in. So my entire focus became the eighth day. When patients came into my practice, I would Interrogate them about the onset of the symptoms, the exact day they started feeling unwell. I would then advise them about what might transpire exactly a week later, which is the eighth day, and what symptoms to start looking for. In the second wave, I notice there was a collection of symptoms  that seemed to idle the onset of this hypersensitivity reaction, and not necessarily dyspnea, but body aches and pains. This seemed to be very typical of an allergic reaction, that you would see with rheumatoid arthritis, with joint pain. There was fatigue, to the point that patients wanted to sleep, or the onset of dyspnea. I educated patients about these symptoms, and that they should not discount these symptoms, even if it was a solitary symptom and mild. Any change from the 7th to the 8th day should be reported.” Dr. Chetty reports that a large percentage of patients, about 70 %, did not report any worsening of symptoms on the 8th day, and thus did not enter the second, hypersensitivty phase. However those that did express the hypersensitivity symptoms on the 8th day sometimes advanced to a critical stage in a very short duration of time, needing hospitalization and intensive care in a day or two. Some others had only mild symptoms. Yet others had moderate symptoms that, if not treated properly, would persist for a long time and be classified as long-Covid.</p>
<p>The speed to recovery when using medication is vitally important. Therefore he adopted the measure of preempting the hypersensitivity phase, the severe eighth-day immune response, through quick and simple treatment, in the form of starting patients on a simple H1-antihistamine like Promethazine 25 mg, and 80 mg Prednisone, upon the first onset of dypnoea. Dr. Chetty's preferred antihistamine was promethazine, a first-generation antihistamine and antipsychotic for its broad diversity of effect, that also is mildly sedative to relieve anxiety in patients who tended to feel it, and which had been used to alleviate sleeping difficulties. This diagnostic approach, of treating dyspnoea as an inflammatory response to Covid than a symptom of Covid, and using an antihistamine in addition to steroids, proved very effective, and patients often began recovery within hours after presenting with dyspnoea. Being hypersensitivity, Monteleukast was added to the therapy on the appearance of symptoms on the 8th day, being a commonly prescribed medication for asthmatic and anaphylactoid reactions, especially where the offending allergen is unknown. With Promethazine and Monteleukast, the recovery was found to be much quicker than with steroids alone.</p>
<p>Corticosteroid Prednisone, using the following dosage:</p>
<ul>
<li>50 mg started on the first day seemed adequate as a starting dose for most patients in the first wave, but which needed to be escalated according to the severity of symptoms.</li>
<li>80-100 mg was found to be required from the first day in the second wave, with the more aggressive South African variant.</li>
<li>It was found very important not to use too low a dosage as this often results in scarring and impedes full recovery. The lower the dosage of steroid used, the longer the time taken to turnaround and longer the exposure to steroids. Therefore a very high dosage of steroid was administered in Dr. Chetty's treatments.</li>
<li>It is important to escalate the dosage to suit severity of symptoms, especially if there is not noticeable improvement after the first day.</li>
</ul>
<p>Interleukins and CRP levels were used to assess the extent of inflammation and efficacy of treatment during the 8th Day Therapy. These markers changed exponentially post the 8th day in patients who suffered from the severe hypersensitivity phase. Even very high values (interleukins in 500s, CRPs in 8900s) of these biomarkers could be turned around in 3-4 days.</p>
<p>Other observations:</p>
<ul>
<li>Dr. Chetty has used Budesonoid, which appeared to work as well, especially with patients who had a chronic cough, but not in the powder formulations.</li>
<li>The antihistamine Promethazine appears to have had the greatest efficacy in reducing the severity of the hypersensitivity response.</li>
<li>The antihistamine (Promethazine), Montelukast 10 mg, Aspirin (Ecotrin) 325 mg have to be continued for at least a month after the resolution of symptoms, for if stopped too early, there is a possibility of rebound.</li>
<li>Dr. Chetty also observed that preexisting allergies tend to be exacerbated by Covid, and therefore need better management as well.</li>
<li>He believes that long Covid is simply untreated or undertreated Covid,.</li>
<li>Speed to recovery can be hastened using intramuscular antihistamines and IV steroids.</li>
<li>The treatment protocol included the use of hydrochloroquine, azithromycin and doxycycline to combat the viral component and antihistamines, leukotriene receptor antagonists and steroids, amongst others, for the Type 1 hypersensitivity reaction.</li>
</ul>
<p>Second Wave:
It became obvious in the second wave that the culprit provoking the hypersensitivity response on the 8th day was the spike protein, as the variants were mutated only in the spike protein. The variants had greater affinity for the gut ACE receptors, and there were gastrointestinal disorders among the symptoms. Also the second wave was far more contagious and triggered a far more severe hypersensitivity reaction on the 8th day, which required a far higher dose of steroid to suppress than in the first wave. In the third wave, the Delta variant was predominant in South Africa. The unique pathologies of this variant and adaptation of the therapy to them are described in a later section.&quot;</p>
<h3 id="typical-duration-of-treatment-7"><a class="header-anchor" href="#typical-duration-of-treatment-7">#</a> Typical duration of treatment:</h3>
<p>1-3 weeks</p>
<h3 id="outcome-7"><a class="header-anchor" href="#outcome-7">#</a> Outcome:</h3>
<p>&quot;Zero mortality among at least 4000 patients in the doctor's own modestly-equipped clinical practice in rural South Africa.</p>
<p>The protocol produced consistent outcomes, no sequelae and rapid recovery of all patients. In all, they had no deaths, no hospitalisations and recovery of all patients, regardless of age, within 14 days, writes Modern Medicine.</p>
<p>“Outcomes of identifying and treating a Type 1 hypersensitivity reaction were most telling in the more severe dyspnoeic patients, with saturations below 85% on presentation that had improvement to over 95% in 24 hours, with outpatient treatment on room air, negating the need for oxygen or hospitalisation,” said Chetty.</p>
<p>According to Chetty, the rapid response to the medications used to treat Type 1 hypersensitivity reactions confirmed its existence. This could have some serious implications for the future management of the COVID pandemic. Monitoring for a hypersensitivity reaction and prompt treatment would decrease morbidity and mortality significantly.&quot;</p>
<h3 id="significant-side-effects-7"><a class="header-anchor" href="#significant-side-effects-7">#</a> Significant side effects:</h3>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the c19study.com website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.</p>
<h3 id="recommended-quantity-for-stocking-7"><a class="header-anchor" href="#recommended-quantity-for-stocking-7">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-7"><a class="header-anchor" href="#price-7">#</a> Price:</h3>
<p>Moderately priced common medications are used in the therapy.</p>
<h3 id="suggested-suppliers-7"><a class="header-anchor" href="#suggested-suppliers-7">#</a> Suggested suppliers:</h3>
<p>Prescription medicine purchased at local pharmaceutical stores, and to be used under the guidance of a licensed allopathic practitioner</p>
<h3 id="further-references-7"><a class="header-anchor" href="#further-references-7">#</a> Further references:</h3>
<p>&quot;For a detailed account of Dr Chetty’s hypersensitivity insights and treatment protocols, go to the digital edition of Modern Medicine magazine, Volume 45, Number 5, Issue 5 2020. There is a short article upfront, followed by the full article by Dr Chetty.</p>
<p>A KZN doctor’s observations and treatment of COVID-19 may reveal a missing element</p>
<p>A video interview with South African doctor, Dr. Shankara Chetty</p>
<p>Written Evidence Submitted by Dr Chris Newton, Center for ImmuneMetabolism, Microbiome and Bio-Energetic Research, UK (Limited immune-response data for early Covid-19 has greatly hindered understanding of disease pathogenesis)/</p>
<p>More about the 8th Day Therapy, in Dr. Chetty's own words</p>
<p>The Delta Variant &amp; its Treatment: Panel discussion with Drs. Ryan Cole, Shankara Chetty, Pierre Kory and Richard Urso (The Covexit.com Podcast)</p>
<p>Covid Outpatient Care - Because Prevention &amp; Early Treatment are Best!</p>
<p>Antihistamines and azithromycin as a treatment for COVID-19 on primary health care – A retrospective observational study in elderly patients; Juan Ignacio Moran Blanco et al.; Pulmonary Pharmacology and Therapeutics; April, 2021</p>
<p>covexit.com: Interviews and articles pertaining to Dr. Chetty's 8th Day Therapy
&quot;</p>
<h2 id="_8-the-adaptation-of-dr-shankara-chetty-s-port-edward-south-africa-8th-day-therapy-to-treat-the-commonly-prevalent-aggressive-delta-variant-which-emerged-during-the-second-or-third-waves-in-many-countries"><a class="header-anchor" href="#_8-the-adaptation-of-dr-shankara-chetty-s-port-edward-south-africa-8th-day-therapy-to-treat-the-commonly-prevalent-aggressive-delta-variant-which-emerged-during-the-second-or-third-waves-in-many-countries">#</a> 8. The adaptation of Dr. Shankara Chetty's (Port Edward, South Africa) 8th Day Therapy to treat the commonly prevalent, aggressive Delta variant, which emerged during the second or third waves in many countries</h2>
<h3 id="objective-8"><a class="header-anchor" href="#objective-8">#</a> Objective:</h3>
<p>The early treatment of Delta, Gamma and other aggressive variants of Covid-19, which manifested in South Africa, Brazil, India and other regions of the world, especially in the second and subsequent waves of the pandemic</p>
<h3 id="system-8"><a class="header-anchor" href="#system-8">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-8"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-8">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Only by an experienced physician at his discretion</p>
<h3 id="status-of-authorisation-8"><a class="header-anchor" href="#status-of-authorisation-8">#</a> Status of authorisation:</h3>
<p>The evolving perspectives of world-renowned physicians like Dr. Pierre Kory, Dr. Paul E. Marik, and Drs. Cole, Chetty and Urso are based on extensive evidence from their clinical practices in treating a variety of manifestations of Covid, and the broad, pooled experience of their worldwide network of physicians like the reputed researcher Dr. Flavio Cadegiani, MD, Brazil, who are deveeloping highly effective allopathic protocols for Covid. There are a large number of research publications now supporting these recommendations.</p>
<h3 id="protocol-and-treatment-approach-8"><a class="header-anchor" href="#protocol-and-treatment-approach-8">#</a> Protocol and treatment approach:</h3>
<p>&quot;Dr. Chetty's 8th Day Therapy is described in detail in a previous section.</p>
<p>In the third wave, the Delta variant was predominant in South Africa, and the hypersensitivity reaction, now clearly attributed to the spike glycoprotein of the coronavirus, required significantly higher doses of steroids to suppress.</p>
<p>With the Delta variant, the same kind of pattern of symptom progression and hypersensitivity response on the 8th day was observed only in unvaccinated patients (as described previously in the description of Dr. Chetty's 8th Day Therapy for the first and second waves). (In fact, in South Africa, the vaccination campaign took off only after the third wave started, and so the vast majority of patients in the first and second waves were unvaccinated.) The pattern of disease progression was different in vaccinated patients.</p>
<p>Differences between disease presentation in unvaccinated and vaccinated patients:
In unvaccinated patients, the diseases progressed according to a similar timeline as in the first and second waves, with a potential hypersensitivity reaction in abotu 30-40 % of patients on the 8th day. However the presenting symptoms have changed. The first wave was more respiratory, and the second wave was more gastrointestinal with the South African variant, and with the Delta variant, the disease pathology reverted to being predominantly respiratory, with much more involvement of the upper respiratory tract and presentation with sinusitis and otitis, sore throats. In the third Delta wave, very few patients developed the persistent coughs that were prevalent in the first wave. The initial symptoms of the disease have evolved a little bit; the typical loss of smell and taste were not so common, but Dr. Chetty observed many patients present with these symptoms on the 8th day. Therefore these symptoms were used in the Delta variant wave to recognize the onset of the second phase of the illness.</p>
<p>Treatment modality:
In the first wave, both HCQ and Ivermectin had helped in the early viral phase to decrease viral loads in patients that were severely ill. Unfortunately, these medicines weren't readily available to be used on almost every patient, and were used judiciously in those patients with severe body aches and other symptoms suggesting a high viral load. The HCQ and Ivermectin appeared to help curtail the symptoms and produce reasonable recovery in 2-3 days.</p>
<p>In the second wave, HCQ didn't appear to help at all in the early viral phase but Ivermectin was effective.</p>
<p>In the third wave and with the Delta variant, once more, the patients with high viral loads appeared to respond to HCQ, 200 mg, twice a day. In the second part of the illness, patients, as before, start to desaturate. In both the second and third waves, decrease in oxygen seemed to be delayed a little, but if treatment waited on the decrease in oxygen levels to appear, they missed the boat. So it became necessary to educate the patient about other symptoms that appeared on the 8th day, and present in time for treatment. One such commonest symptom was overwhelming fatigue, which was an important sign of deterioration into the second phase. With the Delta variant, coagulopathy was a lot more prevalent.</p>
<p>In the first and second and also third waves, it was observed that if the hypersensitivity was curtailed very early and aggressively, that negated any further illness since patients didn't succumb into the hyperinflammatory phase of the illness and the hypercoagulopathy. For those patients who presented late with the symptoms, or weren't treated appropriately or aggressively enough, the inflammatory markers were sky-high by the 11th day, and the patient began to present with hyperinflammatory symptoms and treatment with steroids becomes very important. Their D-dimer levels rose rapidly by the 13th or 14th day, even in those patients in which the other biomarkers were brought under control. Therefore it has become very important to anticoagulate patients in this Delta variant wave.</p>
<p>Different disease pathology and progression, in the third / Delta variant wave, with vaccinated patients:
These patients presented a &quot;&quot;whole curve ball&quot;&quot; to what was seen with the unvaccinated patients, and especially patients who had taken the mRNA vaccine by Pfizer, as opposed to Johnson &amp; Johnson's adenovirus vector DNA vaccine. Patients who had taken the vaccines presented with unusual symptoms. With the J&amp;J vaccines, the patients presented with very quick side effects like headaches and other side effects of vaccination, usually a day after vaccination, which took 3-4 days to subside. However with the mRNA vaccines, a large proportion of patients developed Covid-like illness 7-10 days after vaccination, and presented with all the symptoms of Covid- body aches, sore throats, fever etc. Therefore it had become very important to know the vaccination status of patients and note the timeline of onset of illness from the vaccination itself. Strangely, these patients who developed Covid-like symptoms 7-10 days after vaccination would decline within 3-4 days of presenting with symptoms, and develop hypoxic illness, requiring hospitalization, very early on. This was never seen with unvaccinated patients who had acquired the infection naturally.</p>
<p>From these observations and from the prior inference that the 8th day symptoms were in fact a reaction to the spike protein, Dr. Chetty concluded that the vaccinated patients who were presenting with symptoms 7-10 days after vaccination were, in fact, presenting on the equivalent of the 8th day of the timeline of their natural disease progression, or in other words, the 1st day of Covid-like respiratory symptoms after vaccination was in fact the 8th day on the scale of the natural infection. Thus, it was concluded that the patients who were presenting with desaturation on the 3rd or 4th day after presenting with symptoms were actually on the 12th or 13th day of the natural disease timeline, since the initial viral phase of the illness was now negated or precluded as these symptoms were not the result of infection but a &quot;&quot;spike protein illness&quot;&quot; induced in the body by the vaccines. This illness or response to the spike proteins would, if left unchecked, devolve very quickly into a cytokine storm, coagulation problems anda other forms of hyperinflammation. Therefore, the 8th Day Therapy, with antihistamines, Monteleukast, steroids and anticoagulants, was once again recruited to treat patients developing hypoxia and Covid-like symptoms 7-10 days post vaccination. Moreover, their inflammation markers like CRP and interleukins were tested early on after presenting with symptoms, and this too was found to be useful.</p>
<p>Those patients who presented with Covid symptoms over a month after vaccination were likely to be truly suffering from the breakthrough illness. These patients, or a majority of them, did indeed follow the same natural disease progression timeline that was seen in unvaccinated patients. However there was a unique feature in the pathology of the breakthrough cases. With some of these cases, perhaps a minority, the patient would look normal on the 8th day, and also on the 9th and 10th, but a few days after the 8th day, when everything seemed fine, the patient would unexpectedly desaturate. In these cases of delayed or deferred desaturation in some vaccinated Covid patients, the desaturation would be rapid and severe and seemed like the most severe of Covid cases that Dr. Chetty had classified. Dr. Chetty therefore conferred with his colleagues in India, who had observed a similar odd evolution of disease pathology in their vaccinated patients, and it is inferred that in the vaccinated patients, the body had developed a measure of tolerance to the spike protein, which delayed the onset of the inflammation and hypersensitivity by a few days, until the initial tolerance was overcome. If they did react, the patients that had a propensity to react severely would react very severely.</p>
<p>Therefore it is crucial that the patients be triaged by their vaccination status and treated appropriately. Some of these severe infections may indeed be due to antibody dependent enhancement, as seen with animal models in the testing of these vaccines.&quot;</p>
<h3 id="typical-duration-of-treatment-8"><a class="header-anchor" href="#typical-duration-of-treatment-8">#</a> Typical duration of treatment:</h3>
<p>About 1-3 weeks for recovery and 1-4 weeks for completion of treatment course, if correctly treated using the protocol for the Delta variant</p>
<h3 id="outcome-8"><a class="header-anchor" href="#outcome-8">#</a> Outcome:</h3>
<p>Effective mitigation of the Delta variant of Covid-19, with a nearly complete cure rate.</p>
<h3 id="significant-side-effects-8"><a class="header-anchor" href="#significant-side-effects-8">#</a> Significant side effects:</h3>
<p>No significant side effects reported with therapeutic dosages</p>
<h3 id="recommended-quantity-for-stocking-8"><a class="header-anchor" href="#recommended-quantity-for-stocking-8">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-8"><a class="header-anchor" href="#price-8">#</a> Price:</h3>
<p>The medicines used are available in local pharmacies and inexpensive.</p>
<h3 id="suggested-suppliers-8"><a class="header-anchor" href="#suggested-suppliers-8">#</a> Suggested suppliers:</h3>
<p>Local pharmaceutical stores</p>
<h3 id="further-references-8"><a class="header-anchor" href="#further-references-8">#</a> Further references:</h3>
<p>&quot;Statistical support for the efficacy of Ivermectin-based protocols, from around the world</p>
<p>The Early Treatment of the Delta: A Webinar Held on August 21, 2021 With Drs. Cole, Chetty, Kory and Urso</p>
<p>&quot;</p>
<h2 id="_9-dr-thomas-j-borody-s-triple-therapy-treatment-protocol"><a class="header-anchor" href="#_9-dr-thomas-j-borody-s-triple-therapy-treatment-protocol">#</a> 9. Dr. Thomas J. Borody's Triple Therapy treatment protocol</h2>
<h3 id="objective-9"><a class="header-anchor" href="#objective-9">#</a> Objective:</h3>
<p>The prevention and treatment of Covid-19</p>
<h3 id="system-9"><a class="header-anchor" href="#system-9">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-9"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-9">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Drugs like Ivermectin may interact adversely with other drugs, and the combination of multiple treatments should be under the guidance of a certified and knowledgeable therapist.</p>
<h3 id="status-of-authorisation-9"><a class="header-anchor" href="#status-of-authorisation-9">#</a> Status of authorisation:</h3>
<p>&quot;Triple therapy specialist Professor Thomas J. Borody, founder of the Sydney-based Centre for Digestive Diseases, is best known internationally for his work in gut and its mircobiome infections and re-purposing antimicrobial drugs for new diseases including the triple therapy cure for peptic ulcers. His discoveries prevented premature deaths in thousands of people and saved the Federal Government a reported $10 billion. [THEMA Report]</p>
<p>Dr. Borody developed and released the Covid-19 Triple Therapy treatment protocol to Australian GPs, who can legally prescribe it to their COVID-19 positive patients. They can also prescribe it as a preventative medication. Borody says this could be the fastest and safest way to end the pandemic in Australia within 6-8 weeks.</p>
<p>Says Prof. Borody, “The three medications are now on chemist shelves right now. GPs can email GP@CDD.com.au to obtain the dosing protocol and COVID-19 treatment information for their patients. GPs can legally prescribe the therapy today as an 'off label' treatment according to Australian Guidelines – a standard practice in medicine. In fact more than 60% of prescriptions in Australia are 'off-label'. It’s not a new concept. It’s happening every day to manage diseases and save lives.”</p>
<p>Ivermectin was discovered in the 1970s and is on the World Health Organization (WHO) list of essential medicines.</p>
<p>“There is mounting worldwide clinical literature pointing to a 100% cure rate using Ivermectin Triple Therapy,” said Professor Borody.</p>
<p>Prof. Borody holds 162 patents for different treatments and therapies for various diseases, and in Oct, 2021, it was reported that an application had been filed for a US patent for the Ivermectin Triple Therapy, and alleged that this presented a conflict of interest that had not been widely advertised by the applicant.&quot;</p>
<h3 id="protocol-and-treatment-approach-9"><a class="header-anchor" href="#protocol-and-treatment-approach-9">#</a> Protocol and treatment approach:</h3>
<p>Dr. Borody's early treatment protocol combines Ivermectin with Doxycycline and Zinc, and has undergone extensive clinical trials. GPs can email GP@CDD.com.au to obtain the dosing protocol and COVID-19 treatment information for their patients.</p>
<h3 id="typical-duration-of-treatment-9"><a class="header-anchor" href="#typical-duration-of-treatment-9">#</a> Typical duration of treatment:</h3>
<p>1-2 weeks</p>
<h3 id="outcome-9"><a class="header-anchor" href="#outcome-9">#</a> Outcome:</h3>
<p>Excellent outcome has been reported from clinical trials, with a 100 % cure rate for outpatients with early symptoms. RCTs could not be performed for ethical considerations, with a known effective treatment for which there was not any other good alternative therapy.</p>
<h3 id="significant-side-effects-9"><a class="header-anchor" href="#significant-side-effects-9">#</a> Significant side effects:</h3>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the c19study.com website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.</p>
<h3 id="recommended-quantity-for-stocking-9"><a class="header-anchor" href="#recommended-quantity-for-stocking-9">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-9"><a class="header-anchor" href="#price-9">#</a> Price:</h3>
<p>The medicines used are available in local pharmacies and inexpensive.</p>
<h3 id="suggested-suppliers-9"><a class="header-anchor" href="#suggested-suppliers-9">#</a> Suggested suppliers:</h3>
<p>GPs can email GP@CDD.com.au to obtain the dosing protocol and COVID-19 treatment information for their patients.</p>
<h3 id="further-references-9"><a class="header-anchor" href="#further-references-9">#</a> Further references:</h3>
<p>&quot;
Interview with Prof. Thomas Borody- Part 1 of 2</p>
<p>&quot;&quot;We know it's curable. It's easier than treating the flu.&quot;&quot; (Aug 15, 2020</p>
<p>Australian GPs Can Legally Prescribe Ivermectin Triple Therapy Protocol - Professor Thomas Borody</p>
<p>Ivermectin in combination with doxycycline for treating COVID-19 symptoms: a randomized trial</p>
<p>Prophylaxis and Early Therapies for Covid-19 in Nursing Homes: Highlights With Robin Armstrong, MD, Texas, George Fareed, MD, California, Prof. Thomas Borody, MD, Australia, Prof. Christian Peronne, MD, France</p>
<p>C19Protocols: Early Treatment Protocols</p>
<p>covexit.com: Articles and videos describing or making refefrence to Dr. Thomas Borody's Covid-19 treatment protocol
&quot;</p>
<h2 id="_10-dr-andrea-stramezzi-md-phd-protocol-innovator-who-came-to-be-known-as-the-covid-healer-in-italy"><a class="header-anchor" href="#_10-dr-andrea-stramezzi-md-phd-protocol-innovator-who-came-to-be-known-as-the-covid-healer-in-italy">#</a> 10. Dr. Andrea Stramezzi, MD, PhD, protocol innovator who came to be known as The Covid Healer in Italy</h2>
<h3 id="objective-10"><a class="header-anchor" href="#objective-10">#</a> Objective:</h3>
<p>Early-stage, effective treatment of Covid</p>
<h3 id="system-10"><a class="header-anchor" href="#system-10">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-10"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-10">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Not without the supervision of a qualified and experienced physician</p>
<h3 id="status-of-authorisation-10"><a class="header-anchor" href="#status-of-authorisation-10">#</a> Status of authorisation:</h3>
<p>&quot;Authorized and popular in Italy, one of the worst-hit countries in the first wave, where tens of thousands of patients are known to have benefitted from the treatment, and the Case Fatality Rate was zero. The doctor visited the houses of outpatients and now has added a volunteer-managed telemedicine portal to help offer his services to more people. He is linked to a network of 100s of likeminded physicians, who work together to evolve and propagate better early treatment protocols. Currently, an app is being developed to support other physicians in early treatment.</p>
<p>When HCQ, then the mainstay of the treatment protocol was banned in Italy about 2 months into the pandemic, Dr. Stramezzi filed a legal petition to have the ban revoked. Though the case was overruled by the Court, an important victory was nonetheless won in that the Court allowed that physicians should be allowed to determine their mode of treatment.&quot;</p>
<h3 id="protocol-and-treatment-approach-10"><a class="header-anchor" href="#protocol-and-treatment-approach-10">#</a> Protocol and treatment approach:</h3>
<p>&quot;The principles of Dr. Stramezzi's protocol are briefly outlined as follows:</p>
<ol>
<li>The first principle of the protocol is to begin treatment at the earliest after the onset of symptoms.</li>
<li>Hydroxychloroquine was used since the early days of the treatment, but now Ivermectin is preferred as the treatment of choice when available, due to its efficacy at stopping viral replication. However Ivermectin is more difficult to obtain in Italy due to its approval there only for veterinary use, and must be procured from certain countries of the EU, such as France, where its human use is legal. HCQ was found to work its best in the first days of the infection, whereas Ivermectin was found to work well at all stages of the disease, and even for long Covid. Dr. Stramezzi prefers to start with Ivermectin in early treatment if it is available.</li>
<li>Antiinflammatory drug like Acetyl Salicylic Acid (Aspirin) is very important to prevent viral pneumonia. The virus colonizes all tissues, and so anti-inflammatory medication is crucial, and another drug used is Bromexine.</li>
<li>The virus also replicates in the gut microbiota, and so it is important to use antibiotics.</li>
<li>In some patients- in fact, in about 10 % patients with a naive infection, i.e.,who are infected for the first time- the infection triggers a severe autoimmune condition called the cytokine storm after 14-15 days, when the SARS-CoV-2 antibodies that were produced start to decline. This severe reaction appears to be triggered in these vulnerable patients due to a genetic proclivity. This was primarily treated with Cortisone, Dexamethasone, Enoxaparin by infusion (under control, in hospital, not subcutaneously), and with vitamins C and K as anticoagulant against blood clots, C and K needing to be administered in different meals, as they are mutually antagonistic).</li>
<li>Vitamin D was administered to everyone, though no strong correlation with the infection was noticed.</li>
<li>Dr. Stramezzi has stated that any textbook of microbiology would pronounce it extremely ill-advised to start a vaccine campaign in the middle of the pandemic, as this would give rise to more infectious variants, and he doesn't understand why virologists are not protesting to stop the pandemic.
&quot;</li>
</ol>
<h3 id="typical-duration-of-treatment-10"><a class="header-anchor" href="#typical-duration-of-treatment-10">#</a> Typical duration of treatment:</h3>
<p>1-3 weeks</p>
<h3 id="outcome-10"><a class="header-anchor" href="#outcome-10">#</a> Outcome:</h3>
<p>Not a single patient in Dr. Andrea's care has succumbed to Covid during any of the waves, and he also offers treatment through his telemedicine platform due to a surge of patients.</p>
<h3 id="significant-side-effects-10"><a class="header-anchor" href="#significant-side-effects-10">#</a> Significant side effects:</h3>
<p>For more information on safety of HCQ and other medicines in the algorithm, check the c19study.com website that summarizes more than 278 studies of HCQ-based treatment, which are particularly favorable when HCQ is used in the first few days of COVID-19 symptoms as recommended in the above algorithm.</p>
<h3 id="recommended-quantity-for-stocking-10"><a class="header-anchor" href="#recommended-quantity-for-stocking-10">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-10"><a class="header-anchor" href="#price-10">#</a> Price:</h3>
<p>The medicines used are available in local pharmacies and inexpensive.</p>
<h3 id="suggested-suppliers-10"><a class="header-anchor" href="#suggested-suppliers-10">#</a> Suggested suppliers:</h3>
<p>Prescription medication bought from local or online pharmacies, and to be used under the guidance of a physician</p>
<h3 id="further-references-10"><a class="header-anchor" href="#further-references-10">#</a> Further references:</h3>
<p>Interview with Dr. Andrea Stramezzi, aka The Covid Healer</p>
<h2 id="_11-dr-richard-bartlett-s-inhaled-budesonide-covid-19-protocol"><a class="header-anchor" href="#_11-dr-richard-bartlett-s-inhaled-budesonide-covid-19-protocol">#</a> 11. Dr. Richard Bartlett's Inhaled Budesonide Covid-19 protocol</h2>
<h3 id="objective-11"><a class="header-anchor" href="#objective-11">#</a> Objective:</h3>
<p>Early treatment protocol for Covid-19</p>
<h3 id="system-11"><a class="header-anchor" href="#system-11">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-11"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-11">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Only by an experienced physician at his discretion</p>
<h3 id="status-of-authorisation-11"><a class="header-anchor" href="#status-of-authorisation-11">#</a> Status of authorisation:</h3>
<p>&quot;Dr. Richard Bartlett is a practising physician for 28 years and was part of former Texas Gov. Rick Perry's Health Disparities Task Force. He has reported a 100 % cure rate with the Inhaled Budesonide early treatment protocol, since March, 2020. In April 2021, The Lancet reported evidence of inhaled budesonide, UK’s first effective drug to treat COVID-19 in patients at home, showing the treatment can reduce recovery time by a median of three days. The treatment has since been included in clinical guidelines for treating early-stage COVID-19 across the UK, Canada and India.
Dr. Richard Bartlett shared with ACWT (America Can We Talk) about how asthma medicine Budesonide emptied a hospital ICU after being used to treat coronavirus.</p>
<p>A very similar COVID-19 protocol has been used with great success in Japan, Taiwan and Singapore. Mortality rates in those countries have been kept extremely low for months after seeing major early outbreaks.</p>
<p>Having said that, several prominent doctors, including Dr. Pierre Kory of the FLCCC, do not report that Budesonide in the way that it was used by them in their therapeutic protocols, played a major role in recovery.&quot;</p>
<h3 id="protocol-and-treatment-approach-11"><a class="header-anchor" href="#protocol-and-treatment-approach-11">#</a> Protocol and treatment approach:</h3>
<p>&quot;Dr. Bartlett's coronavirus protocol is simple and two-fold:</p>
<ol>
<li>First, individuals who suspect they have been infected should get tested for COVID-19 as soon as possible so they can be treated early in the disease process.</li>
<li>Secondly, a specific protocol should be followed that uses a nebulizer to deliver the steroid medication Budesonide deep into the lungs at the source of the infection.</li>
</ol>
<p>The protocol hinges on the use of Budesonide, a commonly used inexpensive inhaled drug for asthma, Zinc and Clarithromycin to suppress secondary infection as the inhaled steroid would suppress the immune system. The following is one published Budesonide protocol:</p>
<p>Budesonide 0.5-1 mg / 2 ml respules
Sig:1 respule q 2 hours PRN severe symptoms
Dispense 2 boxes</p>
<p>Clarithromycin 500 mg
Sig: 1 Tab Orally, Twice daily, With food
Dispense 14. Refills X 1</p>
<p>Zinc 50 mg
Sig: 1 Orally, Once daily
Dispense 30 Refills X 1</p>
<p>For Adults:
Coated Aspirin 81 mg
Sig: 1 Orally, Once daily
Dispense 90 Refills X 3</p>
<p>The Budesonide powder-inhalation Protocol validated through the Oxford RCT:</p>
<p> Inhaled budesonide powder (Pulmicort)</p>
<p>180 mcg/puff, 3 puffs tid = 1,620 mcg/day
One Pulmicort 180 mcg/puff Flexhaler provides 120 puffs, sufficient for 13.3 days.
OR 400 mcg/puff, 2 puffs bid = 1,600 mcg/day</p>
<p>One Pulmicort 400 mcg / puff Turbohaler provides 50 puffs, sufficient for 12.5 days. The systemic effect looks equivalent to ~51 mg oral hydrocortisone, consistent with what would be needed to properly regulate the immune response in the absence of a robust endogenous adrenal cortisol stress response. Dosage in this optimal range will likely be key: Just enough to replicate a more optimal adrenal cortisol response and put a light hand brake on the inflammatory response but not so much it over-suppresses immune function.</p>
<p> ASA 325 mg/day (to help counter COVID’s pro-thrombotic effect)</p>
<p> Etc. at provider’s discretion</p>
<p>Potentially helpful nutraceuticals:</p>
<p> Vitamin D3 10,000 IU/day. After recovery, reduce to 5,000 IU/day and maintain long-term.
 Zinc 50 mg/day elemental
 Quercetin 500 mg bid (zinc ionophore; to enhance Zn antiviral effect)
 Vitamin C 3,000 mg/day
 Melatonin 1 - 3 mg at bedtime (antiviral; may be added pro re nata, i.e., as needed, as it can cause daytime drowsiness)</p>
<p>(Note: When supplementing with vitamin D, it is important also to supplement with vitamin K2.)&quot;</p>
<h3 id="typical-duration-of-treatment-11"><a class="header-anchor" href="#typical-duration-of-treatment-11">#</a> Typical duration of treatment:</h3>
<p>Recovery duration reported to be reduced by a median of 3 days.</p>
<h3 id="outcome-11"><a class="header-anchor" href="#outcome-11">#</a> Outcome:</h3>
<p>&quot;Dr. Bartlett reported excellent outcomes with the treatment in clinical trials. The Oxford STOIC phase 2 randomized study confirmed that early treatment with inhaled Budesonide reduced the need for hospitalization by 90%. Researchers found that when Budesonide was administered within seven days of the onset of symptoms, recovery time was also reduced.</p>
<p>Excerpt from a report on the Oxford RCT:
THE UNIVERSITY OF OXFORD on February 8, 2021 released its “Steroids in COVID-19” (STOIC) randomized controlled trial of inhaled Budesonide powder (Pulmicort) for treatment of early
outpatient COVID-19. Beginning an average 3 days after symptom onset, inhaled Budesonide, 400 mcg/puff, 2 puffs bid (twice in a day) was taken for a median duration of 7 (4 to 10.5) days. Urgent care visits &amp; hospital admissions were 90% lower compared to usual care (P = 0.004). The trial was designed around a hoped-for 50% reduction in risk. However, because the actual result was a 90% reduction, the trial achieved statistical significance sooner than expected. On December 9, the study team requested an independent statistical monitoring committee review, on the basis of which the trial was concluded early. One of the reasons given was “ethical consideration of the primary outcome.”</p>
<p>“We stopped early because, how could we ethically randomise participants to the nonbudesonide arm knowing they had a 10-fold chance of needing hospitalisation? This, in addition to knowing that people recover faster in the budesonide arm, have lower fevers, report less congestive symptoms, etc.” —Dan V. Nicolau Jr., MD PhD
&quot;</p>
<h3 id="significant-side-effects-11"><a class="header-anchor" href="#significant-side-effects-11">#</a> Significant side effects:</h3>
<p>None reported for therapeutic doses.</p>
<h3 id="recommended-quantity-for-stocking-11"><a class="header-anchor" href="#recommended-quantity-for-stocking-11">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-11"><a class="header-anchor" href="#price-11">#</a> Price:</h3>
<p>The total treatment is said to cost under US $ 200.</p>
<h3 id="suggested-suppliers-11"><a class="header-anchor" href="#suggested-suppliers-11">#</a> Suggested suppliers:</h3>
<p>Budesonide is a prescription drug that can be bought at local pharmacies, along with the home nebuliser to dispense it in the prescribed way, from a local or online store.</p>
<h3 id="further-references-11"><a class="header-anchor" href="#further-references-11">#</a> Further references:</h3>
<p>&quot;Budesonide dosing for outpatient COVID per the Oxford RCT (+ASA, nutraceuticals, etc. at provider’s discretion)</p>
<p>Inhaled budesonide in the treatment of early COVID-19 illness: a randomised controlled trial. MedRxiv
preprint; Ramakrishnan S, Nicolau DV, Langford B, Mahdi M, Jeffers H, Mwasuku C, et al., Univ. of Oxford; Jan 8, 2021</p>
<p>COVID-19 CURE PROTOCOL: Transcript of Dr. Richard Bartlett’s Bombshell Interview; Published July, 2020</p>
<p>Dr. Bartlett’s Suggested Full Treatment Protocol for COVID 19</p>
<p>COVID-19 CURE PROTOCOL: Physician Treats Coronavirus Patients With 100% Success Rates</p>
<p>COVID-19 Treatments | Dr. Richard Bartlett</p>
<p>Oxford study confirms Christian doctor’s Covid treatment; Feb,2021</p>
<p>Innovative Budesonide Treatment Key to West Texas Woman's Remarkable Reocvery</p>
<p>Asthma drug Budesonide speeds recovery for at-home Covid-19 patients</p>
<p>Covid Outpatient Care - Because Prevention &amp; Early Treatment are Best!</p>
<p>Richard Bartlett says Budesonide is a &quot;&quot;silver bullet&quot;&quot; for Covid. Is that true?; July, 2020</p>
<p>The Highwire With Del Bigtree</p>
<p>Dr Vladimir Zelenko (New York) and Dr Richard Bartlett (Texas) discuss their very postive outcomes in the treatment of coronavirus patients. (July 30, 2020)</p>
<p>C19Protocols: Early Treatment Protocols</p>
<p>covexit.com: Articles shedding light on Dr. Bartlett's Budesonoid Protocol
&quot;</p>
<h2 id="_12-the-perspective-of-one-of-the-foremost-frontline-covid-care-physicians-dr-ryan-cole-idaho-usa-on-the-adaptation-of-early-treatment-protocols-to-treat-the-delta-and-other-aggressive-variants-emphasizing"><a class="header-anchor" href="#_12-the-perspective-of-one-of-the-foremost-frontline-covid-care-physicians-dr-ryan-cole-idaho-usa-on-the-adaptation-of-early-treatment-protocols-to-treat-the-delta-and-other-aggressive-variants-emphasizing">#</a> 12. &quot;The perspective of one of the foremost frontline Covid-care physicians, Dr. Ryan Cole, Idaho, USA, on the adaptation of early treatment protocols to treat the Delta and other aggressive variants, emphasizing</h2>
<ol>
<li>The vital importance of maintaining pre-infection vitamin D levels above 50,</li>
<li>The appropriate and calibrated use of anticoagulants, corticosteroids, monoclonal antibodies, Zinc + HCQ / Quercetin, other nutrients like vitamin C and glutathion-precursor NAC, melatonin / Fluvoxamin, androgen-blockers, antihistamines like cyproheptadine, mouthwashes like chlorhexadine etc. to manage the viral infection and symptoms in the inflammatory phase&quot;</li>
</ol>
<h3 id="objective-12"><a class="header-anchor" href="#objective-12">#</a> Objective:</h3>
<p>The early treatment of Delta, Gamma and other aggressive variants of Covid-19, which manifested in South Africa, Brazil, India and other regions of the world, especially in the second and subsequent waves of the pandemic</p>
<h3 id="system-12"><a class="header-anchor" href="#system-12">#</a> System:</h3>
<p>Repurposed allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-12"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-12">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Only by an experienced physician at his discretion</p>
<h3 id="status-of-authorisation-12"><a class="header-anchor" href="#status-of-authorisation-12">#</a> Status of authorisation:</h3>
<p>The evolving perspectives of world-renowned physicians like Dr. Pierre Kory, Dr. Paul E. Marik, and Drs. Cole, Chetty and Urso are based on extensive evidence from their clinical practices in treating a variety of manifestations of Covid, and the broad, pooled experience of their worldwide network of physicians like the reputed researcher Dr. Flavio Cadegiani, MD, Brazil, who are deveeloping highly effective allopathic protocols for Covid. There are a large number of research publications now supporting these recommendations.</p>
<h3 id="protocol-and-treatment-approach-12"><a class="header-anchor" href="#protocol-and-treatment-approach-12">#</a> Protocol and treatment approach:</h3>
<p>&quot;The early treatment of the Delta variant:</p>
<p>With the Delta variant, both vaccinated and unvaccinated persons are at risk, and this variant spreads faster, being estimated to be 40-60 % more transmissible. The symptoms start sooner and are slightly different from the original symptoms associated with Covid-19 in the first wave in 2020. They are fever, sore throat, cough, runny nose, headache, loose GI. The loss of smell is not as common as with the other variants. The Delta variant is escaping vaccine immunity and great surge of infections in countries with high vaccination rates, like Gibraltar, Iceland, UK, Israel, Seychelles, Australia etc. The viral load is higher, but the infection is not necessarily deadlier as infections historically have mutated to become more transmissible but less deadly. This appears to be true of the Delta variant as well, which is now predominant in North Americal, as 90 % of SARS-CoV-2 infections.</p>
<p>The greatest predictor of outcome in Covid infections: Overall immune health, and pre-infection levels of Vitamin D, which is really a pro-hormone, which affects many genes and cell signalling pathways. A lookback study conducted on 191,000 patients by a corporate laboratory, the SARS-CoV-2 test positivity rate is tightly correlated with  vitamin D levels, with TPR being nearly 12 % among those with vitamin D levels around 20 ng/mL, and dropping to 5-7 % among those with D levels above 50 ng/mL. This is significant in the colder countries as they head towards the winter season with low sunshine. With a healthy vitamin D level, even those who do get infected are significantly less likely to express severe symptoms.</p>
<p>(Note: When supplementing with vitamin D, it is important also to supplement with vitamin K2.)</p>
<p>The comorbidities that pose the highest risk of needing hospitalization and intensive care with the Delta variant: 1. Obesity, 2. Fear and anxiety disorders, 3. Diabetes with complications, 4. Chronic Kidney Disease, 5. Neurocognitive disorders, 6. COPD, 7. Aplastic anaemia, 8. Coronary artery disease etc. It is very important to eat anti-inflammatory diets by cutting carbohydrates and sugars in the diet. Intermittent Fasting will reduce C-Reactive Protein and other inflammatory markers. The #1 factor that predisposed the individual to poor outcomes was Sugar, according to a large AI-driven study using pandemic research data. Sleep too is critical to overall immune health and T-cell function.</p>
<p>The foremost treatment decision that improves prognosis in patients is early treatment, not wait to start treatment, faster and quicker in the Delta variant. Covid is a clotting disease. Therefore it is crucial to use Aspirin in outpatient treatment. Clinicians can use Plavix. Most important drugs used in therapy: Monoclonal antibodies, which are underutilized, HCQ with Zinc, Ivermectin, Fenofibrate (can bend the shape of the spike protein and help neutralize spike toxicity, according to UK study), Faviprivir, Fluvoxamine, Azithromycin (Z Pak), Doxycycline, Colchicine (anti-inflammatory), antihistamines Cyproheptadine / Famotidine (Pepcid), nasal lavage with Betadine spray / Povidine iodine, oral gargling with Chlorhexadine / original yellow Listerine etc., alternate treatment with Sativa Nigra seeds, elderberry extracts, Colloidal silver, Zn + Quercetine, NAC (Glutathione precursor), high-dose vitamin D (regulate gene signalling, clotting T-cell function), vitamin C, Zinc, Melatonin, Selenium</p>
<p>Anti-inflammatory drugs: Corticosteroids- Nebulized or inhaled Budesonide, Methyl Prednisolone / Prednisone / Dexamethasone; anti-inflammatory Monteleukast, Androgen blockers that showed good results in Brazil- Proxalutamide / Dutasteride, Statins- Atorvastatin (for antithrombotic, anti-inflammatory, antiviral effects, ability to change immune response)</p>
<p>It is critical that steroids should be administered at the proper stage of the disease, only when there are inflammatory symptoms, not too early as that would suppress the body's immune response to Covid, and not too late as this could result in undertreating the inflammation.
&quot;</p>
<h3 id="typical-duration-of-treatment-12"><a class="header-anchor" href="#typical-duration-of-treatment-12">#</a> Typical duration of treatment:</h3>
<p>About 1-3 weeks for recovery and 1-4 weeks for completion of treatment course, if correctly treated using the protocol for the Delta variant</p>
<h3 id="outcome-12"><a class="header-anchor" href="#outcome-12">#</a> Outcome:</h3>
<p>Effective mitigation of the Delta variant of Covid-19, with a nearly complete cure rate.</p>
<h3 id="significant-side-effects-12"><a class="header-anchor" href="#significant-side-effects-12">#</a> Significant side effects:</h3>
<p>No significant side effects reported with therapeutic dosages</p>
<h3 id="recommended-quantity-for-stocking-12"><a class="header-anchor" href="#recommended-quantity-for-stocking-12">#</a> Recommended quantity for stocking:</h3>
<p>Treatment can be undertaken only under doctor's guidance and supervision.</p>
<h3 id="price-12"><a class="header-anchor" href="#price-12">#</a> Price:</h3>
<p>The medicines used are available in local pharmacies and inexpensive.</p>
<h3 id="suggested-suppliers-12"><a class="header-anchor" href="#suggested-suppliers-12">#</a> Suggested suppliers:</h3>
<p>Local pharmaceutical stores</p>
<h3 id="further-references-12"><a class="header-anchor" href="#further-references-12">#</a> Further references:</h3>
<p>&quot;Statistical support for the efficacy of Ivermectin-based protocols, from around the world</p>
<p>The Early Treatment of the Delta: A Webinar Held on August 21, 2021 With Drs. Cole, Chetty, Kory and Urso</p>
<p>COVID-19 early treatment: real-time analysis of 1,057 studies</p>
<p>&quot;</p>
<h2 id="_13-vitamin-c-oral-and-intravenous"><a class="header-anchor" href="#_13-vitamin-c-oral-and-intravenous">#</a> 13. Vitamin C (oral and intravenous)</h2>
<h3 id="objective-13"><a class="header-anchor" href="#objective-13">#</a> Objective:</h3>
<p>Curative, emergency treatment</p>
<h3 id="system-13"><a class="header-anchor" href="#system-13">#</a> System:</h3>
<p>Alternative treatment in allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-13"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-13">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes.</p>
<h3 id="status-of-authorisation-13"><a class="header-anchor" href="#status-of-authorisation-13">#</a> Status of authorisation:</h3>
<p>Allopathic treatment endorsed by a small minority of allopathic physicians, but with adequate support from clinical and academic research</p>
<h3 id="protocol-and-treatment-app-emergency-use-iv"><a class="header-anchor" href="#protocol-and-treatment-app-emergency-use-iv">#</a> Protocol and treatment app&quot;Emergency use (IV):</h3>
<p>25 g x 4 / day IV for 2-4 days in an emergency, for acute Covid in adults
There are reports of 50 - 60 g infusions being life-saving.</p>
<p>One recommended protocol for prophylactic use of oral vitamin C:
For adults- 3 g vitamin C in a glass of water, with a pinch of acidity regulator, X 2-3 times daily
For children- 1 g vitamin C, X 2 times daily</p>
<p>Dr. Thomas E. Levy, MD, JD, writes:
&quot;&quot;An especially noteworthy example of the suppression of good medicine is seen with vitamin C. The continued avoidance of the use of intravenous vitamin C, especially in septic patients in the intensive unit,  stands out as a clear example of flagrant malpractice. Conservatively, thousands of ICU patients around the world, on a daily basis, would be saved or at least spared substantial suffering with a simple protocol utilizing intravenous vitamin C. And the morbidity and mortality of many different infections and toxin exposures outside of the ICU setting would also be readily mitigated and even resolved with vitamin C-based protocols. But this is not happening, even though the literature has unequivocally indicated the clinical importance (and safety) of vitamin C for over 80 years.</p>
<p>&quot;&quot;Vitamin C [prevents, improves, cures]:</p>
<p>&quot;&quot;Vitamin C has been documented to readily cure all acute viral syndromes in which it has been adequately dosed. As the ultimate virucide, vitamin C has been documented to inactivate/destroy every virus against which it was tested in vitro (in the test tube). Similarly, vitamin C has consistently resolved nearly all acute viral infections in patients treated with sufficient doses. Vitamin C has cured Zika fever, another epidemic virus that struck in 2016.</p>
<p>&quot;&quot;Along with hydrogen peroxide, intravenous vitamin C has also been documented to be highly effective against the debilitating pain of Chikungunya virus. Intravenous vitamin C has also resolved influenza. A high degree of protection against infection by many other pathogens is also achievable with a variety of treatments featuring oral forms of vitamin C.</p>
<p>&quot;&quot;In an ongoing clinical study on hospitalized COVID-19 patients, a combination of vitamin C, methylprednisolone, heparin, and thiamine has already resulted in a dramatic decrease in hospital mortality rate.&quot;&quot;</p>
<p>Hydrocortisone, Vitamin C, and Thiamine for the Treatment of Severe Sepsis and Septic Shock: A Retrospective Before-After Study; Paul E. Marik et al.; Chest; Jun, 2017
Curing the Incurable: Vitamin C, Infectious Diseases, and Toxins, 3rd Edition Paperback; MD JD Thomas E. Levy; August 1, 2011
High Dose Intravenous Vitamin C Treatment for Zika Fever; Michael J Gonzales et al.; Journal of Orthomolecular Medicine; Jan, 2016
Intravenous ascorbic acid and hydrogen peroxide in the management of patients with chikungunya; Victor Marcial-Vega et al.; Boletin de la Associacion de Puerto Rico; Jan-Mar, 2015
High Dose Vitamin C and Influenza: A Case Report; Journal of Orthomolecular Medicine; Michael J Gonzales et al.; 2021
High-Dose Intravenous Ascorbic Acid in COVID-19 Patients: A Case Report; Journal of Orthomolecular Medicine; Alexander J Audette &amp; Richard Russell Johnson; Oct 15, 2021
Frontline COVID-19 Critical Care Alliance (2020)</p>
<p>&quot;</p>
<h3 id="typical-duration-of-treatment-13"><a class="header-anchor" href="#typical-duration-of-treatment-13">#</a> Typical duration of treatment:</h3>
<p>General, prophylactic use, or usage over 3-5 days for treament involving very high IV dosing in acute cases</p>
<h3 id="outcome-13"><a class="header-anchor" href="#outcome-13">#</a> Outcome:</h3>
<p>Reported by many doctors to be life-saving</p>
<h3 id="significant-side-effects-13"><a class="header-anchor" href="#significant-side-effects-13">#</a> Significant side effects:</h3>
<p>&quot;Generally, a very high dosage of upto 1.5 g / kg of body weight is thought to be tolerated in emergency use, beyond which there is an increasing probability of adverse effect.</p>
<p>Renal failure after IVC has been reported occasionally in patients with pre-existing renal disorders. Patients should be screened for G6PD deficiency. HDIVC (High-Dosage IV Vitamin C) should be avoided in Patients with G6PD deficiency. HDIVC may increase bioavailability of iron, and high doses of IVC are not recommended for patients with hemochromatosis. Apart from these precautions, IVC is generally reported to be safe without significant side effects.&quot;</p>
<h3 id="recommended-quantity-for-stocking-13"><a class="header-anchor" href="#recommended-quantity-for-stocking-13">#</a> Recommended quantity for stocking:</h3>
<p>An intensive therapy may not often require 100g x 4 days, for emergency treatment for one patient.</p>
<h3 id="price-13"><a class="header-anchor" href="#price-13">#</a> Price:</h3>
<p>The online products appear to cost between US $ 15-20.</p>
<h3 id="suggested-suppliers-13"><a class="header-anchor" href="#suggested-suppliers-13">#</a> Suggested suppliers:</h3>
<p>&quot;Commercial brands like Limcee offer exclusively, oral vitamin C. There are good commercial brands available online of oral liposomal vitamin C with other nutrients like Glutathione and B-complex for immune support. The following brand, produced from natural Amla and said to be highly bioavailable, may be a good option, even though expensive:</p>
<p>Vitamin C (+ Zinc) Daily Immunity Booster- Fast&amp;Up Charge Combo of 6 (+ 6 free) (Rs. 2340)</p>
<p>&quot;</p>
<h3 id="further-references-13"><a class="header-anchor" href="#further-references-13">#</a> Further references:</h3>
<p>&quot;Zinc, Vitamin D and Vitamin C: Perspectives for COVID-19 With a Focus on Physical Tissue Barrier Integrity; frontiers in Nutrition; Jose JoaoName, et al.</p>
<p>Vitamin C Can Shorten the Length of Stay in the ICU: A Meta-Analysis; Harri Hemila, Elizabeth Chalker; Nutrients; April, 2019</p>
<p>The Many Faces Of Vitamin C</p>
<p>Andrew Saul | Doctor Yourself.com- The World's Largest Health Homesteading Website</p>
<p>Vitamin C in the Prevention and Treatment of Covid-19, by Dr. Richard Z. Cheng, MD, PhD, International Society for Orthomolecular Medicine (ISOM)</p>
<p>fastandup.in: How to find the best vitamin C supplement; Andrea Fernandes (Expert &amp; Writer for manufacturer's website Fast&amp;Up Charge); Apr 23, 2019</p>
<p>Vitamin C for Covid-19- Real-time Meta-Analysis from 24 Studies; Covid Analysis; Nov 9, 2021</p>
<p>Vitalitymagazine.com: COVID-19 How Can I Cure Thee? Let Me Count the Ways; Dr. Thomas E. Levy, MD, JD; Dec 3, 2020</p>
<p>References regarding side effects:</p>
<p>Padayatty SJ, Sun AY, Chen Q, et al.: Vitamin C: intravenous use by complementary and alternative medicine practitioners and adverse effects; PLoS One 5 (7): e11414, 2010</p>
<p>Campbell GD, Steinberg MH, Bower JD: Letter: Ascorbic acid-induced hemolysis in G-6-PD deficiency; Ann Intern Med 82 (6): 810, 1975</p>
<p>Mehta JB, Singhal SB, Mehta BC: Ascorbic-acid-induced haemolysis in G-6-PD deficiency; Lancet 336 (8720): 944, 1990</p>
<p>Rees DC, Kelsey H, Richards JD: Acute haemolysis induced by high dose ascorbic acid in glucose-6-phosphate dehydrogenase deficiency; BMJ 306 (6881): 841-2, 1993</p>
<p>Barton JC, McDonnell SM, Adams PC, et al.: Management of hemochromatosis; Hemochromatosis Management Working Group. Ann Intern Med 129 (11): 932-9, 1998&quot;</p>
<h2 id="_14-nutrient-supplements-containing-vitamins-a-c-d3-e-k2-magnesium-especially-magnesium-chloride-selenium-and-zinc"><a class="header-anchor" href="#_14-nutrient-supplements-containing-vitamins-a-c-d3-e-k2-magnesium-especially-magnesium-chloride-selenium-and-zinc">#</a> 14. &quot;Nutrient supplements containing vitamins A, C, D3, &amp; E, K2, Magnesium (especially Magnesium Chloride), Selenium and Zinc</h2>
<p>Additionally, vitamin B12, Quercetin, Glutathione and N-Acetyl Cysteine (NAC) are known to promote recuperation in Covid patients.</p>
<p>Yet other key nutrient supplements that are known to mitigate the cytokine storm, a severe complication from Covid-19:
Curcumin and turmeric, Melatonin, Nigella sativa oil (black cumin / black caraway oil), Omega-3 (fish oil, flaxseed oil), B vitamins, Lactoferrin, Molecular Hydrogen, Probiotics (particularly Bifidobacteria and Lactobacillus), Astaxanthin, green tea (EGCG)</p>
<p>The 'superfood' Spirulina too has been cited in research to significantly reduce mortality in RNA-virus infections, including influenza and coronavirus.&quot;</p>
<h3 id="objective-14"><a class="header-anchor" href="#objective-14">#</a> Objective:</h3>
<p>Supports general immunity, prophylactic</p>
<h3 id="system-14"><a class="header-anchor" href="#system-14">#</a> System:</h3>
<p>Allopathy and nutritional therapy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-14"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-14">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Can be used as prophylactic treatment by the uninfected.</p>
<h3 id="status-of-authorisation-14"><a class="header-anchor" href="#status-of-authorisation-14">#</a> Status of authorisation:</h3>
<p>Authorised by mainstream medicine, and the mainstay of highly effective alternate, holistic and naturopathic treatment protocols</p>
<h3 id="protocol-and-treatment-approach-13"><a class="header-anchor" href="#protocol-and-treatment-approach-13">#</a> Protocol and treatment approach:</h3>
<p>&quot;(A prophylaxing regimen suggested by veteran physicians in Kerala:
Immumen (or West Coast Immuneed Original) supplement contains 500 mg vitamin C, 2000 IU vitamin D3 or cholecalciferol, 25 mg vitamin E, 50 mg Zinc acetate, amoung other ingredients. A tablet a day for 15 days, followed by 15 days gap before next 15 day supplementation period.)</p>
<p>A(nother recommendation from a knowledgeable practitioner of integrative medicine:</p>
<ul>
<li>Vit C 1000 mg daily, during infection</li>
<li>Zinc and Magnesium supplements daily, and especially after heavy physical exertion</li>
<li>Vit D3 5000 IU daily)</li>
</ul>
<p>(Note: When supplementing with vitamin D, it is important also to supplement with vitamin K2 and Magnesium to improve D absorption.)</p>
<p>Magnesium is essential for the bioavailability of D, and it is important to supplement for Magnesium as well to maintain levels at 50. Dr. Thomas E. Levy, MD, JD, offers the view, &quot;&quot;While many supplement regimens can be used for COVID-19 prevention, such regimens should include at a minimum vitamin C, vitamin D, magnesium chloride, and zinc.&quot;&quot; Magnesium, especially as magnesium chloride, has been documented to have substantial antipathogen properties, and it has been reported to cure poliovirus infections as a monotherapy when ingested orally.</p>
<p>An omnivorous diet might supply all these nutrients in sufficient quantity, except, as noted, under special circumstances like physical exertion or an active infection.</p>
<p>Glutathione is one of the most powerful antioxidants in the body, and its production is promoted by the presence of essential Glutathione precursor N-Acetyl Cysteine. Oral Glutathione supplementation has been shown not to elevate blood levels of Glutathione significantly, but many fruits and vegetables, especially broccoli, Brussel sprouts, beets, cauliflower, and cabbage, and spices like turmeric, cinnamon and cardamom. It might also be advisable to add raw milk kefir to the diet, if there is a a trusted source of raw milk, as well as eggs or Sushi (in moderation) in a nonvegetarian diet. Glutathione production in the body is also promoted by supplementing with the other immune-supportive vitamins and minerals, such C, B6,B12, B1, B2, B9 or Folic Acid or Folate, Selenium, Zinc, Magnesium etc.</p>
<p>Quercetin is found in many fruits and vegetables, and especially colourful ones. A few of the foods that are cited to contain relatively higher amounts of quercetin than many others are as follows- the red bulbs of spring onions, cooked asparagus, okra, chia seeds, apples with skin, moringa, kale, buckwheat, cranberries, figs, tomatoes, citrus fruits, berries and cherries. Onions, blueberries, cherry tomatoes, kale and apple, all eaten with their edible outer layers (which are greater exposed to sunlight), are some of the most common good sources of quercetin. Quercetin in most foods does not degrade with heat, watercress being a notable counterexample.</p>
<p>When ill, these reserves of essential vitamins drop quickly, and therefore daily supplementation is important.</p>
<p>Two meta-analyses of twelve and thirteen randomized controlled trials (Ref), demonstrated clinical benefits of Lactobacillus and Bifidobacterium administration in mechanically ventilated patients in ICU, showing a lower incidence of upper respiratory tract infections and ventilator-associated pneumonia. Therefore, it might be a good idea to supplement with milk kefir, especially from a reliable source of organic, raw, whole milk, if one is available.&quot;</p>
<h3 id="typical-duration-of-treatment-14"><a class="header-anchor" href="#typical-duration-of-treatment-14">#</a> Typical duration of treatment:</h3>
<p>&quot;Prophylactic care, long-term during infectious epidemic and risk of exposure</p>
<p>Supplementation should be avoided during acute infection, except under the supervision of experienced physicians.&quot;</p>
<h3 id="outcome-14"><a class="header-anchor" href="#outcome-14">#</a> Outcome:</h3>
<p>There is considerable research supporting the value of these nutrients, cited in the references. In particular, Zinc, C, D, A, Magnesium, Selenium, Quercetin, B12, Curcumin, Glutathione+NAC, probiotics like Bifidobacteria, green tea (containing EGCG) are all crucially used in the highly effective Covid-19 treatment protocols that have been evolved by doctors and scientists around the world, though not yet authorized by policy.</p>
<h3 id="significant-side-effects-14"><a class="header-anchor" href="#significant-side-effects-14">#</a> Significant side effects:</h3>
<p>&quot;There are many significant side effects associated with overdosing on vitamins and other nutrients, and they are discussed in detail on the Internet.</p>
<p>There are no known cases of adverse effects due to overdosing on quercetin. However, quercetin can interact with several other medications like antibiotics and blood thinners. The Recommended Daily Allowance is 500-1000 mg and doses over 1000 mg (1 g) may damage the kidneys.&quot;</p>
<h3 id="recommended-quantity-for-stocking-14"><a class="header-anchor" href="#recommended-quantity-for-stocking-14">#</a> Recommended quantity for stocking:</h3>
<p>At least 30 doses for one individual</p>
<h3 id="price-14"><a class="header-anchor" href="#price-14">#</a> Price:</h3>
<p>&quot;Many brands of these nutrient supplements are available online. The articles below have embedded links to a few recommended products, and pricing information. Many high-quality nutritional supplements are expensive, in general, and products sourced from stores outside the country are especially so.</p>
<p>Zelenko Protocols against Covid-19</p>
<p>Protocols and Dosages for Prevention and Management of Covid-19 and Vaccine Adverse Reactions</p>
<p>Top Supplements to Help Battle Covid-19
If you want to stay resilient against infection, adding a few immune support products, such as Vitamin C, Vitamin D, Quercetin, Glutathione / NAC, Zinc, and Melatonin can help.</p>
<p>(Note: When supplementing with vitamin D, it is important also to supplement with sources of vitamin K2, and Magnesium to improve D absorption.)</p>
<p>10 supplements to boost immunity during Covid-19 pandemic- Vitamin D3, Vitamin A, Vitamin C, Magnesium, Zinc, L-Theanine, Melatonin, N-Acetyl Cysteine (NAC), Probiotics- and some high quality products online containing these nutrients</p>
<p>THE MANY FACES OF VITAMIN C</p>
<p>&quot;</p>
<h3 id="suggested-suppliers-14"><a class="header-anchor" href="#suggested-suppliers-14">#</a> Suggested suppliers:</h3>
<p>&quot;Many brands of these nutrient supplements are available online. The articles below have embedded links to a few recommended products, and pricing information.</p>
<p>Zelenko Protocols against Covid-19</p>
<p>Protocols and Dosages for Prevention and Management of Covid-19 and Vaccine Adverse Reactions</p>
<p>Top Supplements to Help Battle Covid-19
If you want to stay resilient against infection, adding a few immune support products, such as Vitamin C, Vitamin D, Quercetin, Glutathione/NAC, Zinc, and Melatonin can help.</p>
<p>10 supplements to boost immunity during Covid-19 pandemic- Vitamin D3, Vitamin A, Vitamin C, Magnesium, Zinc, L-Theanine, Melatonin, N-Acetyl Cysteine (NAC), Probiotics- and some high quality products online containing these nutrients</p>
<p>THE MANY FACES OF VITAMIN C</p>
<p>Himalayan Organics Vitamin D3 with K2 as MK7 supplement - 120 Veg Tablets
&quot;</p>
<h3 id="further-references-14"><a class="header-anchor" href="#further-references-14">#</a> Further references:</h3>
<p>&quot;Zelenko Protocols against Covid-19</p>
<p>Protocols and Dosages for Prevention and Management of Covid-19 and Vaccine Adverse Reactions</p>
<p>Controlled clinical study from Singapore showing the efficacy of supplementation with 1000 IU of vitamin D3, 150 mg of Magnesium and 500 mcg of vitamin B12 in early-stage hospitalized Covid patients aged over 50</p>
<p>Top Supplements to Help Battle Covid-19:
If you want to stay resilient against infection, adding a few immune support products, such as Vitamin C, Vitamin D, Quercetin, Glutathione/NAC, Zinc, and Melatonin can help.</p>
<p>Dr. Roger Seheult's Daily Regimen (Vitamin D, C, Zinc, Quercetin, NAC)</p>
<p>Vitamin D3 and K2 and their potential contribution to reducing the COVID-19 mortality rate; Simon Goddek; International Journal of Infectious Diseases; Oct, 2020</p>
<p>Role of Magnesium in Vitamin D Activation and Function; Anne Marie Uwitonze &amp; Mohammed S Razzaque; The Journal of the American Osteopathic Association; Mar 1, 2018</p>
<p>10 supplements to boost immunity during Covid-19 pandemic- Vitamin D3, Vitamin A, Vitamin C, Magnesium, Zinc, L-Theanine, Melatonin, N-Acetyl Cysteine (NAC), Probiotics- and some high quality products online containing these nutrients</p>
<p>THE MANY FACES OF VITAMIN C</p>
<p>Vitamin C in the Prevention &amp; Treatment of Covid-19</p>
<p>Doctor Yourself.com</p>
<p>Overviews of Biological Importance of Quercetin: A Bioactive Flavonoid; Pharmacognosy Reviews; Alexander Victor Anand David, et al.</p>
<p>The effect of oral N-acetylcysteine in chronic bronchitis: a quantitative systematic review; European Respiratory Journal; C Stey, J Steurer, S Bachmann, et al.</p>
<p>Evidence that Vitamin D Supplementation Could Reduce Risk of Influenza and COVID-19 Infections and Deaths; Nutrients; William B Grant, Henry Lahor, et al.</p>
<p>Impact of vitamin D on the course of COVID-19 during pregnancy: A case control study; Selcan Sinaci, Doga Fatman Ocal, et al.</p>
<p>Paperback: Magnesium: Reversing Disease; Thomas E. Levy, MD, JD; Nov 1, 2019</p>
<p>Recent research points the way toward a practical nutraceutical strategy for coping with RNA virus infections including influenza and coronavirus:
Nutraceuticals have potential for boosting the type 1 interferon response to RNA viruses including influenza and coronavirus; Progress in Cardiovascular Diseases; Mark F. McCarty, James J. DiNicolantonio</p>
<p>Daily Dosage of N-Acetyl Cysteine</p>
<p>Oral Glutathione</p>
<p>Well-researched article on How to Raise Glutathione Levels</p>
<p>On Quercetin</p>
<p>16 Best Supplements to reduce Cytokine Storm, a Severe Complication from Covid-19 (Updated September, 2021)</p>
<p>Intravenous nutrient therapy: the &quot;&quot;Myers' cocktail&quot;&quot;</p>
<p>Prophetic Medicine-Nigella Sativa (Black cumin seeds) - Potential herb for COVID-19?</p>
<p>Nigella Sativa in COVID-19: Study results</p>
<p>Nigella Sativa has potential use in future COVID-19 treatment; Manufaturers' Monthly; Aug 10, 2021</p>
<p>COVID-19 early treatment: real-time analysis of 1,057 studies</p>
<p>COVID-19 How Can I Cure Thee? Let Me Count the Ways; Thomas E. Levy, MD, JD; Dec 3, 2020</p>
<h2 id="_15-nutraceuticals-and-otc-medicines-to-mitigate-adverse-effects-and-inflammation-caused-by-the-covid-vaccines-a-number-of-protocols-published-by-doctors-scientists-nutritionists-and-other-researchers-to-counteract-the-effects-of-the-dangerous-spike-glycoprotein-and-other-toxins-associated-with-the-novel-coronavirus-and-introduced-into-the-body-by-the-covid-vaccines"><a class="header-anchor" href="#_15-nutraceuticals-and-otc-medicines-to-mitigate-adverse-effects-and-inflammation-caused-by-the-covid-vaccines-a-number-of-protocols-published-by-doctors-scientists-nutritionists-and-other-researchers-to-counteract-the-effects-of-the-dangerous-spike-glycoprotein-and-other-toxins-associated-with-the-novel-coronavirus-and-introduced-into-the-body-by-the-covid-vaccines">#</a> 15. Nutraceuticals and OTC medicines to mitigate adverse effects and inflammation caused by the Covid vaccines: A number of protocols published by doctors, scientists, nutritionists and other researchers to counteract the effects of the dangerous spike glycoprotein and other toxins associated with the novel coronavirus and introduced into the body by the Covid vaccines</h2>
<h3 id="objective-15"><a class="header-anchor" href="#objective-15">#</a> Objective:</h3>
<p>Allopathic and nutraceutical protocols to protect those who have been injected with the mRNA / DNA producing spike proteins, and to minimize damage from the spike protein and its derivatives, or other toxins due to injection and to protect from spike protein shedding by vaccinated contacts</p>
<h3 id="system-15"><a class="header-anchor" href="#system-15">#</a> System:</h3>
<p>Allopathy and nutrition science, Integrative medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-15"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-15">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes</p>
<h3 id="status-of-authorisation-15"><a class="header-anchor" href="#status-of-authorisation-15">#</a> Status of authorisation:</h3>
<p>Unclear, but based on naturopathy advocate and nutrition entrepreneur Mr. David Wolfe's website.</p>
<h3 id="protocol-and-treatment-approach-14"><a class="header-anchor" href="#protocol-and-treatment-approach-14">#</a> Protocol and treatment approach:</h3>
<p>&quot;Ivermectin:
Ivermectin for protection against COVID infection is recommended at a dosage of 0.2 mg/ kilogram of
body weight (typically around 12 - 18 mg/dose). An often cited protocol is to take one dose, then
after 48 hours take a second dose, and then to take once per week.</p>
<p>dreddymd.com: Breakthrough: Ivermectin inhibits the SARS-CoV-2 spike protein from binding to ACE2 receptors in human tissue; Dr. Eddy Bettermann, MD</p>
<p>Dr. Paul E. Marik and his close collaborators Drs. Bret Weinstein and Pierre Kory have cited the known effectiveness of Ivermectin as a potent neutralizer of the spike proteins. Dr. Marik's prophylactic and preventative protocols have been described in detail in an earlier section.</p>
<hr>
<p>Black cumin seed / Nigella sativa oil:
Black cumin is long revered as a traditional medicinal plant, considered even as a &quot;&quot;panacea&quot;&quot; in ancient Greece and Rome. Research published in the journal Vascular Pharmacology shows that a molecule found in Nigella sativa, also known as Black seed or Black cumin (Kalonji / Krishnajeera / Karunjeerakam), binds to ACE2 receptors in the lungs, potentially stopping spike protein particles from inducing inflammation and vascular damage. The molecule is being studied for possible drug development. Researchers out of India investigated the effects of Nigellidine, an Indazole alkaloid of Black seed, using molecular docking for binding to different angiotensin-binding proteins, as well as the spike glycoprotein. They found that Nigellidine “strongly binds” to the spike protein at what is known as the hinge region or active site opening, which may in turn hamper its binding to ACE2 receptor surfaces.</p>
<hr>
<p>Recommended ingredients for nutritionist Mr. David Wolfe's Spike Protein Protocol:
Nutrient supplements:</p>
<ul>
<li>Zinc (30-80 mg per day depending on immunological pressure)</li>
<li>Vitamin D3 (Note: Vitamin D supplementation best accompanied by supplementation with K2 and Magnesium for better action and bioavailability)</li>
<li>Nattokinase, a fermented soybean derivate that is known to protect the cardiovascular system from developing a bloodclotting cascade (4000 Fibrinolytic Units twice per day or 200 mg twice per day),</li>
<li>Lypospheric Vitamin C (30 ml, twice a day),</li>
<li>Quercetin (500-1000 mg, twice a day),</li>
<li>Iodine,</li>
<li>PQQ,</li>
<li>C60 (1-3 droppersful per day), which is claimed to counteract the differential magnetization of the injected site, and the C60 SuperConcentrate is particularly recommended,</li>
<li>Charcoal as an excellent detoxifier (2-4 capsules a day, on an empty stomach to activate a blood purification process known as intestitial dialysis), especially the product Kohlbitr, sold on Mr. Wolfe's e-commerce website, that is said to be a premium brand of coconut charcoal, or the more gentle birch charcoal,</li>
</ul>
<p>&quot;&quot;Superherbs&quot;&quot;:</p>
<ul>
<li>Pine needle tea for shikimic acid or shikimate and their derivates that have cancer-fighting, antiviral, antimicrobial, anticoagulant and antithrombotic properties (prepared only from green, edible, i.e. nontoxic, pine needles, the tea to be along with the oil / resin that accumulates),</li>
<li>Fennel and / or Star anise tea, which are also an exceellent source of shikimate or shikimic aicd which are known to cause the spike protein to be neutralized,</li>
<li>Citrus fruit, and especially blood oranges for their high content of hesperidin, which is a chalcone-like quercetin that deactivates spike proteins,</li>
<li>Peppermint, very high in hesperidin,</li>
<li>Wheatgrass and Wheatgrass juice, of which the blades are high in shikimate,</li>
<li>Triphala formulations in Ayurveda (a combination of Indian gooseberry or Amla, black myrobalan and bellerIc myrobalan),</li>
<li>St. John's wort, the entire plant,</li>
<li>Comfrey leaf,</li>
<li>Feverfew, of which the leaves and flowers are suitable for this use,</li>
<li>Gingko biloba leaf,</li>
<li>Giant hyssop or Horsemint or Agastache urtifolia,</li>
<li>Liquid ambar or Sweet gum tree, of which a tea might be prepared with the spiky seed pods,
which all are exceptionally rich in shikimate</li>
</ul>
<hr>
<p>Dr. Mercola's Protocol for neutralizing the spike protein:</p>
<ul>
<li>
<p>From Dr. Mercola's perspective, the best thing one can do is to build the innate immune system. To do that, it is necessary to become metabolically flexible and optimize the diet. You’ll also want to make sure your vitamin D level is optimized to between 60 ng/mL and 80 ng/mL (100 nmol/L to 150 nmol/L), ideally through sensible sun exposure. Sunlight also has other benefits besides making vitamin D.</p>
</li>
<li>
<p>Time-restricted eating must be practised to optimize autophagy, i.e., all meals for the day must be eaten within a six- to eight-hour window. All vegetable oils and processed foods must be avoided. and only certified-organic foods consumed to minimize glyphosate exposure. Plenty of sulfur-rich foods must be included in the diet to keep mitochondria and lysosomes healthy. Both are important for the clearing of cellular debris, including these spike proteins.</p>
</li>
<li>
<p>Sulfate levels can also be boosted by taking Epsom salt baths. Sauna therapy, which upregulates heat shock proteins, will help refold misfolded proteins and also tag damaged proteins and target them for removal. It is important that the sauna is hot enough (around 170 degrees Fahrenheit) and does not have high magnetic or electric fields.</p>
</li>
<li>
<p>Hydroxychloroquine and ivermectin treatments. Ivermectin appears particularly promising as it actually binds to the spike protein. The interview that Brett Weinstein did with Dr. Pierre Kory, one of Dr. Paul Marik’s collaborators</p>
</li>
<li>
<p>Low-dose antiretroviral therapy to reeducate the immune system</p>
</li>
<li>
<p>Low-dose interferons such as Paximune, developed by interferon researcher Dr. Joe Cummins, to stimulate the immune system</p>
</li>
<li>
<p>Peptide T (an HIV entry inhibitor derived from the HIV envelope protein gp120; it blocks binding and infection of viruses that use the CCR5 receptor to infect cells)</p>
</li>
<li>
<p>Cannabis, to strengthen Type I interferon pathways</p>
</li>
<li>
<p>Dimethylglycine or betaine (trimethylglycine) to enhance methylation, thereby suppressing latent viruses</p>
</li>
<li>
<p>Silymarin or milk thistle to help cleanse your liver</p>
</li>
</ul>
<hr>
<p>Conventional OTC medications and nutraceuticals recommended to counteract inflammation post-vaccine and breakthrough infection:</p>
<p>Aspirin (anti-thrombotic): 325 mg/day for 4 weeks beginning the day before vaccination.
Ibuprofen (anti-inflammatory): Two 200 mg caplets 3 times/day the day before, day of and day after vaccination. Continue as needed if symptomatic (fever, muscle aches, headache, etc.)
Loratadine (Claritin or generic equivalent; H1 blocker, anti-inflammatory): 10 mg/day the day before, day of and day after vaccination.
Famotidine (Pepcid or generic equivalent; H2 blocker, anti-inflammatory): 20 mg twice per day the day before, day of and day after vaccination.
Vitamin D3 (potent anti-inflammatory effects at sufficient dosage; anti-viral immune enhancement): One dose of 50,000 IU five to seven days before vaccination (serum levels peak on average at 7 days), then daily 15,000 IU until 5 days after vaccination. Subsequently continue with maintenance dosage of 5,000 - 10,000 IU/day.</p>
<p>For extra protection against breakthrough Covid infection during the approximately two-week window before immunity starts:
Zinc (anti-viral): 50 mg/day started as far ahead of vaccination as possible and continued three weeks or indefinitely.
Quercetin (zinc ionophore, to enhance zinc anti-viral effect; anti-inflammatory; anti-thrombotic): 250 mg twice per day for 3 weeks starting the day before vaccination.
Vitamin C (anti-viral; anti-inflammatory): 3,000 mg/day started as far ahead of vaccination as possible and continued 3 weeks or indefinitely.
&quot;</p>
<h3 id="typical-duration-of-treatment-15"><a class="header-anchor" href="#typical-duration-of-treatment-15">#</a> Typical duration of treatment:</h3>
<p>Presumably 3-4 weeks for a detox regimen</p>
<h3 id="outcome-15"><a class="header-anchor" href="#outcome-15">#</a> Outcome:</h3>
<p>The neutralization of the spike proteins in the Covid vaccines, and especially the mRNA and DNA vaccines</p>
<h3 id="significant-side-effects-15"><a class="header-anchor" href="#significant-side-effects-15">#</a> Significant side effects:</h3>
<p>None reported, at the recommended dosages</p>
<h3 id="recommended-quantity-for-stocking-15"><a class="header-anchor" href="#recommended-quantity-for-stocking-15">#</a> Recommended quantity for stocking:</h3>
<p>The nutrients and herbs mentioned in the protocol could be stocked and used regularly.</p>
<h3 id="price-15"><a class="header-anchor" href="#price-15">#</a> Price:</h3>
<p>Most of these products are likely expensive for ordinary Indian consumers.</p>
<h3 id="suggested-suppliers-15"><a class="header-anchor" href="#suggested-suppliers-15">#</a> Suggested suppliers:</h3>
<p>&quot;Some of these products can be sourced online, and a few could be bought at Mr. Wolfe's e-commerce store.</p>
<p>Another product that is claimed to assist detoxification from the spike proteins after vaccination</p>
<p>Telemedicine portals for Covid-19&quot;</p>
<h3 id="further-references-15"><a class="header-anchor" href="#further-references-15">#</a> Further references:</h3>
<p>&quot;salk.edu: THE NOVEL CORONAVIRUS’ SPIKE PROTEIN PLAYS ADDITIONAL KEY ROLE IN ILLNESS-
Salk researchers and collaborators show how the protein damages cells, confirming COVID-19 as a primarily vascular disease; April 30, 2021</p>
<p>How to Guard Against the Spike Protein Contagion Caused by the Covid-Vaccinated; by Dr. Judy Mikovits</p>
<p>The article cites Dr. Judy Mikovits' statement that Suramin, a powerful antioxidant used to treat African sleeping sickness and river blindness, and extracted from an edible variety of pine needles, is the antidote to the contagious and harmful spike glycoproteins generated in the body by the vaccine. Suramin can only be administered through injection. Dr. Mikovits is cited to have said that adequate quantities of Suramin can be obtained from pine needle tea.</p>
<p>However, the Wikipedia article on Suramin cties that it is not bioavailable and also that it is known to cause significant adverse reactions and be toxic to kidneys. The Wikipedia article on the active antioxidant extract Suramin from pine tea states that Suramin should not be administered to pregnant women, lactating mothers and to kidney patients.</p>
<p>PINE TEA: Possible Antidote to Spike Protein Transmission; Dr. Ariyana Love</p>
<p>Make your own shikimic acid (shikimate) with Star Anise; Dissolve blood clots from spike proteins</p>
<p>Protocols and Dosages for Prevention and Management of Covid-19 and Vaccine Adverse Reactions</p>
<p>MERCOLA: Dr. Judy Mikovits discusses the SARS-CoV-2 pandemic with Dr. Joseph Mercola; May 1, 2020</p>
<p>Dr. Judy Mikovits on the potential antidote to vaccines (Suramin)</p>
<p>The following article throws light on expert consensus that the spike glycoprotein introduced into the body by the Covid vaccinations is a pathogenic protein that precipitates a host of serious adverse reactions ranging from blood clotting and cardiovascular damage to neurological damage and reproductive toxicity. The mRNA from the Pfizer vaccines, for example, enters the bloodstream and accumulates in a variety of organs, primarily the spleen, bone marrow, liver, adrenal glands and, in women, the ovaries. The spike proteins also travel to the heart, brain and lungs, where bleeding and or blood clots can occur as a result, and are expelled in breast milk.
Researcher: 'We Made a Big Mistake' on Covid-19 Vaccine; by Dr. Joseph Mercola</p>
<p>Transcipt of The Joe Rogan Experience with Drs. Bret Weinstein and Pierre Kory, close collaborators of the highly esteemed intensivist Dr. Paul E. Marik, whoc developed the world renowned Ivermectin protocol. The researchers state the high value of Ivermectin in treating Covid and in neutralizing the spike proteins</p>
<p>Videos freely available of all sessions of National Vaccine Information Center's (NVIC's) sponsored online conference, The Fifth International Public Conference on Vaccination: Protecting Health and Autonomy in the 21st Century</p>
<p>About the conference, at Nia Pure Nature: No-Cost Access to NVIC's Fifth Vaccine Conference</p>
<p>In silico Nigellidine (N. sativa) bind to viral spike/active-sites of ACE1/2, AT1/2 to prevent COVID-19 induced vaso-tumult/vascular-damage/comorbidity; Smarajit Maiti et al.; Vascular Pharmacology; June, 2021</p>
<p>OTC Medicines &amp; Nutraceuticals to Prevent / Reduce COVID Post-Vaccination Side Effects</p>
<p>Summary of David Wolfe's Spike Protein Protocol</p>
<p>COVID-19 early treatment: real-time analysis of 1,057 studies</p>
<p>Natural Supplements for COVID19—Background, Rationale, and Clinical Trials; Melody Hermel, MD, et al.; Journal of Evidence-Based Integrative Medicine; Aug 13, 2021</p>
<p>Biocompatible N-acetyl cysteine reduces graphene oxide and persists at the surface as a green radical scavenger; Valentina Palmieri et al.; Chemical Communications; 2019
&quot;</p>
<h2 id="_16-fleming-method-the-fleming-method-for-tissue-and-vascular-differentiation-and-metabolism-fmtvdm-using-same-state-single-or-sequential-quantification-comparisons-patent-no-9566037"><a class="header-anchor" href="#_16-fleming-method-the-fleming-method-for-tissue-and-vascular-differentiation-and-metabolism-fmtvdm-using-same-state-single-or-sequential-quantification-comparisons-patent-no-9566037">#</a> 16. &quot;Fleming Method: The Fleming Method for Tissue and Vascular Differentiation and Metabolism (FMTVDM) using same state single or sequential quantification comparisons. Patent No. 9566037</h2>
<p>The FMTVDM-directed Covid-19 Treatment Protocol, which may be the only known study that used a rigorous quantitative measurement technique to analyse and assess a wide variety of physician-led Covid-19 therapies in a globally distributed clinical trial, and identify the most efficacious of these, including therapeutic management of the adverse effects of the Covid vaccines&quot;</p>
<h3 id="objective-16"><a class="header-anchor" href="#objective-16">#</a> Objective:</h3>
<p>&quot;Four objectives that are defined and achieved by The Fleming Method for Tissue and Vascular Differentiation and Metabolism:</p>
<ol>
<li>Measuring changes in regional blood flow and metabolism differentiating healthy from diseased tissue.</li>
<li>Quantitatively measure what is happening at the tissue level distinguishing dead from normal tissue, from inflammation &amp; infection, from early and later coronary artery blood flow disease, from dysfunctionally abnormal tissue, from pre-cancers and cancer.</li>
<li>Enable clinicians and researchers to more precisely determine if a treatment is working in each individual.</li>
<li>Enable rapid determination of what research drugs and treatments work by measuring their effect at the tissue level where it matters.</li>
</ol>
<p>The Method can be used in conjunction with treatments for multiple diseases, including heart disease, cancer, and now Covid-19.&quot;</p>
<h3 id="system-16"><a class="header-anchor" href="#system-16">#</a> System:</h3>
<p>Allopathy, Biomedical engineering</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-16"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-16">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes, and recommended to be sed with any treatment, to improve efficacy through better monitoring of response to therapy</p>
<h3 id="status-of-authorisation-16"><a class="header-anchor" href="#status-of-authorisation-16">#</a> Status of authorisation:</h3>
<p>&quot;Patented diagnostic technology, efficacy established through clinical trials.</p>
<p>Dr. Richard M. Fleming, PhD, MD, JD is a scientist/physicist and also a cardiologist who discovered that inflammation and heart disease go hand in hand and have patented the Fleming Method (FMTVDM). He led a clinical trial on COVID-19 treatment protocols.</p>
<p>The official webpage for the best diagnostic solutions rigorously identified by the Fleming Method in worldwide clinical trials&quot;</p>
<h3 id="protocol-and-treatment-approach-15"><a class="header-anchor" href="#protocol-and-treatment-approach-15">#</a> Protocol and treatment approach:</h3>
<p>&quot;The official and comprehensive webpage for the best diagnostic solutions rigorously identified by the Fleming Method in worldwide clinical trials</p>
<p>Immune Support for SARS-CoV-2: First Phase with Mild Symptoms</p>
<p>Treatments to Consider Based Upon the Best Available Evidence Research Results:
PROPOSED TREATMENT APPROACHES FOR PROPHYLAXIS, SARS-COV-2, COVID-19, AND POST-VACCINATION; FOR YOU TO DISCUSS WITH YOUR PHYSICIAN. THIS IS NOT A SERVICE, THE SALE, BUYING, OR MARKETING OF A PRODUCT, OR THE PRACTICING OF MEDICINE.</p>
<p>The Fleming Method is a diagnostic technique that integrates with any nuclear camera and any applicable nuclear isotope to produce &quot;&quot;True Quantification&quot;&quot; of regional blood flow difference and metabolism. Conventional nuclear images rely on human visual observation for subjective or &quot;&quot;guestimate&quot;&quot; evaluations. The Fleming Method uses a complex, yet simple method of camera recalibration to turn images into numerical computations removing the human subjective evaluation and associated error. Unlike common nuclear imaging protocols that require two injections of a nuclear isotope, the Fleming Method many times only requires one injection reducing patient venous punctures and radiation exposure.​ Dr. Richard M. Fleming, inventor of Fleming Method calibration, measurement, and imaging patent, recognized that many of these isotopes can be measured sooner than previously expected.  This method enables the identification of conditions such as critical heart disease, cancers, and infections such as COVID-19.  The Fleming Method uses existing FDA approved devices and drugs to provide the computational evaluation to help determine severity of conditions otherwise missed with conventional methods. The Fleming Method is a paradigm shift in nuclear imaging reducing scanning times in some instances by hours with use of existing equipment.</p>
<p>The Fleming method was used in a large clinical trial involving over 500 patients across the world in which a large number of allopathic treatment modalities were assessed for efficacy using the FMTVDM, with deference to the particcipating physicians' discretion in choosing the treatment modality that they thought would best suit their patients. From these studies, certain treatment modalities fared better than others and the most effective of these modalities are described below:</p>
<p>The FMTVDM-directed Covid-19 Treatment Protocol:
In the outpatient setting, begins with stabilizing the immune response and opening airways to improve oxygenation:</p>
<p>I. Immune support to stabilize the immune response:</p>
<ul>
<li>Folate (B9)) 3 mg by mouth daily</li>
<li>Magnesium 400 mg by mouth daily</li>
<li>Calcium carbonate 400 mg by mouth daily</li>
<li>Cobalamin (B12) 3 mg by mouth daily</li>
<li>Pyridoxine (B6) 30 mg by mouth daily</li>
<li>Dehydroepiandrosterone (DHEA) 50 mg by mouth daily</li>
<li>Ascorbic acid (C) 2000 mg by mouth daily</li>
<li>Zinc 10 mg by mouth daily</li>
<li>1,25 dihydroxycholecalciferol (D3) 1500 IU by mouth daily</li>
</ul>
<p>II. Respiratory support to open airways and improve oxygenation:</p>
<ul>
<li>Atrovent nebulizer or inhaler, 2 puffs every 4 hours</li>
</ul>
<p>The third component of treatment in the outpatient setting includes Aminoquinolines and antibiotics.</p>
<p>III. Aminoquinolines and Antibiotics, that reduce viral attachment to cells and reduce viral replication (but not to address seccondary bacterial infection):
i) 100 % effective treatment strategy:</p>
<ul>
<li>Primaquine 200 mg by mouth on Day 1</li>
<li>Clindamycin 150 mg by mouth every 6 hours for 7 days</li>
<li>Hydroxychloroquine 200 mg by mouth every 8 hours for 10 days
ii) 97.9 % effective:</li>
<li>Clindamycin 150 mg by mouth every 6 hours for 7 days</li>
<li>Hydroxychloroquine 200 mg by mouth every 8 hours for 10 days
iii) 74.2 % effective:</li>
<li>Hydroxychloroquine 200 mg by mouth every 8 hours for 10 days</li>
<li>Azithromycin 500 mg by mouth on Day 1, then 250 mg by mouth on days 2 through 5
iv) 69.1 % effective:</li>
<li>Hydroxychloroquine 200 mg by mouth every 8 hours for 10 days</li>
<li>Doxycycline 100 mg by mouth every 12 hours for 10 days</li>
</ul>
<p>The adaptation of this treatment regimen to inpatients in the hospital setting:
The 3 different Regimens:</p>
<p>Case 1) If prior Aminoquinoline treatment has been provided, adopt the following two treatment Regimens:
Regimen 1:</p>
<ul>
<li>Methylprednisolone 125 mg IntraVenously every 6 hours for 3 days
<ul>
<li>Then 125 mg IV every 12 hours for 2 days</li>
<li>Then 125 mg IV daily for 2 days</li>
<li>Then 60 mg IV daily for 2 days (with each infusion administered over 30 minutes)</li>
<li>Then Solumedrol dose pack to taper off steroids
Regimen 2:</li>
</ul>
</li>
<li>Tocilizumab 8 mg / kg (IBW, i.e. Ideal Body Weight), not to exceed 800 mg intravenously infused over 1 hour.
<ul>
<li>May be repeated every 8 hours for a maximum of 4 doses</li>
</ul>
</li>
<li>Interferon-α2b (5 million units per nebulizer every 12 hours for 7 days)</li>
</ul>
<p>Case 2) If no prior Aminoquinoline treatment has been provided, adopt the following Regimen:
Regimen 3:</p>
<ul>
<li>Primaquine 200 mg by mouth on Day 1</li>
<li>Clindamycin 150 mg by mouth every 6 hours for 7 days</li>
<li>Tocilizumab and Interferon-α2b using the same doses as in Regimen 2.</li>
</ul>
<p>Dr. Fleming has also developed well-researched guidelines for diet and nutritional supplementation, some details of which are shared in the references.                     &quot;</p>
<h3 id="typical-duration-of-treatment-16"><a class="header-anchor" href="#typical-duration-of-treatment-16">#</a> Typical duration of treatment:</h3>
<p>Adjunct technique to improve the efficacy and response time of any treatment</p>
<h3 id="outcome-16"><a class="header-anchor" href="#outcome-16">#</a> Outcome:</h3>
<p>Better response time and efficacy of the adopted therapeutic approach</p>
<h3 id="significant-side-effects-16"><a class="header-anchor" href="#significant-side-effects-16">#</a> Significant side effects:</h3>
<p>There is a variety of therapeutic medications used, and would be associated possibility of adverse effect with each, as with almost any medication, especially if incorrectly used. However no significants side effects are reported with these repurposed drugs in Covid therapy.</p>
<h3 id="recommended-quantity-for-stocking-16"><a class="header-anchor" href="#recommended-quantity-for-stocking-16">#</a> Recommended quantity for stocking:</h3>
<p>Nutraceutical prophylactic and early treatment products are OTC and can be stocked for regular use. In addition, Ivermectin and / or HCQ could be stocked for urgent prophylactic use in case of exposure.</p>
<h3 id="price-16"><a class="header-anchor" href="#price-16">#</a> Price:</h3>
<p>The approximate monthly expenditure for immune system support against Covid-19, according to the Fleming Method Protocol, is estimated at &lt; $ 50 per month.</p>
<h3 id="suggested-suppliers-16"><a class="header-anchor" href="#suggested-suppliers-16">#</a> Suggested suppliers:</h3>
<p>Physicians offering telemedicine services</p>
<h3 id="further-references-16"><a class="header-anchor" href="#further-references-16">#</a> Further references:</h3>
<p>&quot;The FMTVDM-Directed Covid-19 Treatment Protocol</p>
<p>Fleming Method: The Fleming Method for Tissue and Vascular Differentiation and Metabolism (FMTVDM) using same state single or sequential quantification comparisons. Patent No. 9566037</p>
<p>ClinicalTrials.gov: The Fleming [FMTVDM] Directed CoVid-19 Treatment Protocol (FMTVDM)</p>
<p>Episode 463 Transcript: Dr. Richard Fleming on the Most Effective Drug-based Treatment for Covid-19, Ashley James with Dr. Richard Fleming</p>
<p>463 Dr. Richard Fleming, Ph.D., MD, JD on The Most Effective Drug Based Treatments for COVID-19, Understanding SARS-CoV-2 (Audio interview)</p>
<p>The Fleming Protocol (Diet)</p>
<p>The Fleming Protocol (Nutrient supplementation)</p>
<p>The Fleming Method: e-Books</p>
<p>4-Hour Event 2021, Presentation of Dr. Fleming's Covid-19 research</p>
<p>Dr. Fleming's Comprehensive Website: FlemingMethod.com</p>
<p>C19Protocols: Early Treatment Protocols</p>
<p>COVID-19 early treatment: real-time analysis of 1,057 studies</p>
<p>&quot;</p>
<h2 id="_17-chlorine-dioxide-solution-cds-possible-oral-intravenous-administration-with-the-oral-cds-protocol-for-covid-19-being-validated-by-one-boliviaan-study"><a class="header-anchor" href="#_17-chlorine-dioxide-solution-cds-possible-oral-intravenous-administration-with-the-oral-cds-protocol-for-covid-19-being-validated-by-one-boliviaan-study">#</a> 17. Chlorine Dioxide Solution (CDS)- possible Oral / intravenous administration, with the oral CDS protocol for Covid-19 being validated by one Boliviaan study</h2>
<h3 id="objective-17"><a class="header-anchor" href="#objective-17">#</a> Objective:</h3>
<p>&quot;The development of a safe and relatively nontoxic alternative allopathic oral / intravenous treatment protocol for Covid-19. The protocol is reported from Central and South America to have been highly effective in their pandemic management, but has achieved little consensus in the mainstream scientific community, like many other treatments.</p>
<p>The reactivity of ClO2 to the coronavirus' spike glycoprotein suggests its potential use in very low dosage in combating inflammation produced by the Covid vaccinations as well.&quot;</p>
<h3 id="system-17"><a class="header-anchor" href="#system-17">#</a> System:</h3>
<p>Allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-17"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-17">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes.</p>
<h3 id="status-of-authorisation-17"><a class="header-anchor" href="#status-of-authorisation-17">#</a> Status of authorisation:</h3>
<p>&quot;Chlorine dioxide has been demonized in the medical community, perhaps by confusion with Sodium chlorite / hypochlorite or bleach that is commonly known for its toxicity, and which can be used as precusrors in the manufacture Chlorine and Chlorine dioxide.</p>
<p>Food Safety | 10 Reasons Why You Should be Using Chlorine Dioxide [as a Disinfectant in the Food Industry]:
Chlorine dioxide has 2.6 times the oxidizing power of waterborne Chlorine, does not react with water and is effective over a wide range of pH, is considered an excellent bactericide, fungicide and antimicrobial agent, and has been FDA-approved as a sanitizer in food processing plants. Unlike bleach and Chlorine, which break down to carcinogenic byproducts like trihalomethanes, Chlorine dioxide donates Oxygen, and breaks down to water and salts. Therefore Chlorine dioxide is much less corrosive to equipment and far less toxic to the environment.</p>
<p>Efficacy established through large-scale clinical trials in countries of Central and South America, predominantly Bolivia, as reported in one study:</p>
<p>The only study conducted for the use of water-solubilized ClO2 (CDS) ingested by oral route was one that was carried out in a multicenter clinical trial in various countries from central and South America (https://clinicaltrials.gov/ct2/show/NCT0434374). Statistics of Bolivia where the use of water-solubilized ClO2 for the prevention and treatment of COVID-19 was approved by law in early August, 2020, demonstrate a marked reduction in cases and deaths in that country. The highest peak recorded in Bolivia was epidemiological week 29 (10,939 cases), with cases falling to 670 in epidemiological week 45, (representing a 93% decrease). The case-fatality rate decreased from 8% to 4.5% in epidemiological week 36, coinciding with the massive use of dioxide in the population without it being possible to affirm with certainty that dioxide is responsible for this decrease. (https://snis.minsalud.gob.bo/). From a peak of 2,031 daily cases on Aug 20, 2020, cases dropped to 147 daily cases on Oct 21, 2020, representing a 93% decrease. Daily deaths decreased from a peak of 132 on Sept 3, 2020 to 24 deaths on Oct 21, 2020, with an 82% decrease in mortality. (https://www.COVID-19.onl/country/bolivia).</p>
<p>While there was a rebound in cases from epidemiological week 49 to 53, mortality remained relatively low. Some doctors linked to the research group (in Bolivia more than 220 doctors) provided feedback that the population reduced the consumption of CDS and that could be a possible explanation for the peak, and the increase in the consumption of chlorine dioxide again reduced the peak to the previous levels, maintaining a reduced comparative mortality.&quot;</p>
<h3 id="protocol-and-treatment-approach-16"><a class="header-anchor" href="#protocol-and-treatment-approach-16">#</a> Protocol and treatment approach:</h3>
<p>&quot;MMS (Master / Miracle Mineral Solution)- The base ingredient of Chlorine Dioxide Solution</p>
<p>Jim Humble: How to make MMS at home:
Precautions:</p>
<ul>
<li>Never ever use anything metal when mixing or storing or using Sodium chlorite. Sodium chlorite or MMS solution should never touch metal. Don’t stir with a metal spoon, or use metal bowls to mix, or metal containers to store—this includes stainless steel. Storage containers / bottles for MMS should have plastic lids, not metal, as the sodium chlorite will eventually eat through and corrode the metal. The metal starts eating into the lid and it starts dropping down in to your MMS. This will introduce metal in the MMS and this is poisonous.</li>
<li>Storage containers for MMS (22.4% solution of sodium chlorite in distilled water) should preferably be glass. Tinted glass such as amber color or green is best. If you must use plastic a good quality plastic that is HDPE plastic is best.</li>
</ul>
<p>Step 1- Making Master Mineral Solution:
MMS is made from distilled Water, widely available Sodium hypochlorite (NaOCl, or bleach), a sensitive weighing balance, a food-grade acid like citric acid, and a non-reactive storage container. MMS is a 22.4% solution of sodium chlorite in water. One hundred milliliters of MMS liquid should weigh 122 grams, this is the ideal. If it falls in the range of 120 grams to 124 grams it is usable, but 122 grams, or very close to it, is best.</p>
<p>Step 2- Preparing activated MMS, or Chlorine dioxide solution:
MMS Protocols for health recovery call for “activated MMS”. MMS needs a food-grade acid to activate it and the two combined produce chlorine dioxide. There are several acids that can activate MMS, including the juice of a fresh lemon or lime, or vinegar. However, we most often use either 50% citric acid, or 4% HCl (hydrochloric acid). When using these two acids in these percentages always use 1 drop of acid to 1 drop of MMS. Both of these acids, in these percentages, are a 1-to-1 ratio with MMS. In other words, mix 1 drop of either of 50% citric acid or 1 drop of 4% HCl, to every 1 drop of MMS. The standard activation time for mixing these drop-for-drop doses using 50% citric acid or 4% HCl is 30 seconds. See the MMS Health Recovery Guidebook for full instructions on how to mix and use MMS. This includes for instructions on how to activate MMS using lemon, lime or vinegar as the proportions and activation time is different for these than when using 50% citric acid or 4% HCl. 500g citric acid powder and 500g of distilled water makes a solution of 50% citric acid.</p>
<p>References of clinical trials:</p>
<p>The medicine may be administered orally or intravenously. &quot;&quot;In vitro and in vivo studies demonstrate that low doses of water-solubilized ClO2 exhibit potent and rapid antiviral activity against a wide range of viruses. In a study on drinking water in the Netherlands, Jin et al. found that treatment with ClO2 at concentrations of 0.5 ppm for 25 minutes, or 1.5 ppm for 10 minutes, or 2 ppm for 5 minutes achieved at least a 4 log reduction of enterovirus. Schijven et al. demonstrated that municipal drinking water treated with ClO2 (0.1 ppm in summer and 0.05 ppm in winter) significantly reduced adenovirus levels to levels that are considered safe for drinking water. Alvarez and O'Brien found a ClO2 concentration of 40 ppm added to wastewater seeded with SARS-CoV that completely inactivated the SARS-CoV in 30 minutes. The dose used in this research is 30 mg per day for 21 days, which is well below the NOAEL (No Observed Adverse Effect Level), or in the worst case the same as the NOAEL.&quot;&quot;
Determination of the Effectiveness of Chlorine Dioxide in the Treatment of COVID-19; Insignares-Carrione Eduardo et al.; Molecular and Genetic Medicine; 2021</p>
<p>In the Bolivian study (which was in fact, conducted on 20 patient volunteers whose informed consent was sought, from Bolivia, Equador, Mexico and Peru, but officially conducted in Bolivia, due to legal ethical restrictions on therapeutic use of CDS in other countries), the base medication used is Chlorine dioxide 3000 ppm in × 120 cc bottles marked with a planned label and administered according to the standard established in the research protocol, and each patient received the therapeutic dosage of CDS medication exclusively (i.e., not as adjunct therapy), whereas the control group received Standard Of Care treatment with anti-inflammatory medication (Ibuprofen), antibiotics (Azithromycin), antihistamines (Hydrazine), corticosteroids (Methylprednisolone) and other supportive care. The patients received the Chlorine Dioxide base preparation at 3,000 ppm, produced by electrolysis with ultrapure Chlorine Dioxide generating equipment, brand Medalab www.ClO2.com, with precise written instructions on how to prepare, drink and preserve dilutions. The chemists of the research team controlled the standardization of the water used for the base preparation of the Dioxide at 3000 ppm, as well as the water used for diluting and drinking; the controlled variables were: conditions and characteristics of the preparation process, standardized characteristics of the container, use of standardized Merck 28% sodium chlorite, standardized sterile double-distilled water, buffered at pH 7 and Chlorine Dioxide concentration at 3,000 ppm [in the base solution, which the protocol requires to dilute to about a hundredth of this concentration, i.e., about 30 mg / liter].</p>
<p>Chlorine dioxide administration protocols used in Covid-19:</p>
<p>Initial protocol, loading or protocol (F):
10 ml of Chlorine Dioxide 3000 ppm is added to 1 liter of water (i.e., about 30 mg / liter or 30 ppm), and the liter is taken in two hours, divided into eight (8) equal doses.</p>
<p>Maintenance protocol:
10 ml of Chlorine Dioxide 3000 ppm is added to 1 liter of water (i.e. about 30 mg / liter), and the liter is given to drink divided into ten (10) equal doses, during the day, every hour.</p>
<p>The medication is orally dissolved in the mouth, at least 60 minutes before or after a meal. There were no remnants or shortages in the medication delivered and the original protocol were strictly adhered to. There is no abandonment of treatment.
&quot;</p>
<h3 id="typical-duration-of-treatment-17"><a class="header-anchor" href="#typical-duration-of-treatment-17">#</a> Typical duration of treatment:</h3>
<p>1-3 weeks</p>
<h3 id="outcome-17"><a class="header-anchor" href="#outcome-17">#</a> Outcome:</h3>
<p>&quot;The CDS therapy was revealed to be nearly completely effective against Covid-19 and other viral illnesses. One doctor avers that of thousands of complicated cases across age groups he treated, the recovery rate was over 99 %.</p>
<p>The results of the Bolivian (South American) study on 20 patients were deemed statistically highly significant both statistically and clinically. As an empirical observation, the researchers’ report that patients who consumed chlorine dioxide as a treatment for COVID-19, substantially reduced post COVID-19 symptoms compared to patients with the disease, not treated with dioxide.</p>
<p>Andreas Kalcker Official on odysee.com: Over 100 Recovered from Covid-19 with CDS by Physicians of the AEMEMI; May 18th, 2020
&quot;</p>
<h3 id="significant-side-effects-17"><a class="header-anchor" href="#significant-side-effects-17">#</a> Significant side effects:</h3>
<p>&quot;No significant adverse effects were reported in the 21-day Bolivian study, which observed the following:</p>
<p>The safety / toxicity of ClO2 depends on several variables, including the route of administration (e.g., inhaled, topical, or oral), the state of the molecule (i.e., gaseous or aqueous), the concentration (usually measured in mg/L or ppm for aqueous and ppm or mg/m3 for gaseous), and the duration of exposure. ClO2 gas is toxic at much lower concentrations than aqueous ClO2. Toxicity also increases with the duration of exposure. The fact that ClO2 is less toxic in aqueous form allows the use of this molecule as a safe disinfectant in municipal drinking water, as a disinfectant for drinking water at points of use and as a food disinfectant, among other uses.</p>
<p>In the Bolivian study, a parallel instrument was designed to record possible adverse effects of Chlorine Dioxide where the data of each patient and their adherence process are placed. In two patients, a slight sensation of gastritis was registered, 7 days after treatment, temporary, which resolved without intervention and did not require stopping the medication.</p>
<p>Despite important reported evidence for Chlorine dioxide's remarkable efficacy from a few Latin American doctors and a small number of publisheed studies, several regulatory authorities and mainstream media platforms like the BBC and The Guardian have criticized the treatment as being not evidence-based and potentially dangerous. They have also misreported that the treatment involved the therapeutic use of bleach / NaClO / Sodium hypochlorite, whereas in fact CDS / Chlorine Dioxide Solution was used. Moreover, some reported adverse effects were owing to prophylactic use of CDS, whereas CDS is not intended to be used as prophylactic, only to mitigate infection:
Health Desk: Why is chlorine dioxide dangerous if taken for COVID-19?; Dec 15, 2020
WebMD: Chlorine dioxide
Reuters: Bolivians try chlorine dioxide for COVID-19, despite health ministry warnings
The Guardian: Bleach touted as 'miracle cure' for Covid being sold on Amazon; 2020</p>
<p>A report of intestinal necrosis and perforation that may be associated with Chlorine dioxide consumption over 9 months as prophylactic therapy for Covid-19:
Intestinal perforation associated with chlorine dioxide ingestion: an adult chronic consumer during COVID-19 pandemic; Gregorio Arellano-Gutiérrez et al.; Clinical Journal of Gastroenterology; Oct 18, 2021</p>
<p>Dr. Andreas Kalcker asserts that the therapeutic quantities of CDS used are about 15 mg / day over a 14-day duration, and each dose is only 0.1 mg / kg body weight, whereas the official German toxic limit is defined to be 292 mg / kg body weight over a 14-day period. In fact, CDS, far from being toxic at such low doses, is seen to improve blood flow and oxygenation and have an anti-thrombotic effect.</p>
<p>Protection of human tissues against the oxidative effect of ClO2:
Human cells also contain glutathione in mM concentrations, as well as other antioxidants likevitamin C and E, which work together with glutathione to reduce ClO2. As a human cell is much larger than a bacterium, consequently its Glutathione reserve and Glutathione production potential are also greater, so even an isolated human cell can survive much longer in a ClO2 environment than a planktonic bacterium. Considering that human cells are not isolated but form tissues, their Glutathione stock may be many orders of magnitude greater than that of a planktonic bacterium. However, continuous ClO2 entry can ﬁnally exhaust the cell's Glutathione (and other antioxidant) capacity even if the cell produces such antioxidants continuously. At this point, ClO2 can enter into the previously protected zones of the cell and react with the reactive amino acid residues, causing denaturation of the affected proteins and ultimately cell death.</p>
<p>The research article therefore might be interpreted to suggest that supplementing with Glutathione / N-Acetyl Cysteine might help to further decrease the cytotoxic effects of CDS for human cells:
Can chlorine dioxide prevent the spreading of coronavirus or other viral infections? Medical hypotheses; K Kaly-Kullai et al.; Physiology International; Mar, 2020</p>
<p>&quot;</p>
<h3 id="recommended-quantity-for-stocking-17"><a class="header-anchor" href="#recommended-quantity-for-stocking-17">#</a> Recommended quantity for stocking:</h3>
<p><strong>VACANT</strong></p>
<h3 id="price-17"><a class="header-anchor" href="#price-17">#</a> Price:</h3>
<p>Online prices start at about $ 25 for a 125 ml bottle.</p>
<h3 id="suggested-suppliers-17"><a class="header-anchor" href="#suggested-suppliers-17">#</a> Suggested suppliers:</h3>
<p>&quot;Master Mineral Solution, MMS or WPS Solution - Why has this Product Become so Popular?</p>
<p>mms-supplement.com: Buy CDS</p>
<p>Erao Biotech | A leading Chinese disinfectant brand: Chlorine Dioxide Effervescent Tablet: (Chlorine dioxide concentration in this product is 10 %, which must be diluted to 30 ppm in a liter of distilled water, and the liter of 30 ppm CDS must be administered in 10 equal doses, as prescribed by the Bolivian study oral CDS protocol)</p>
<p>mms-supplement.com: Dimethyl Sulfoxide (DMSO)-
DMSO is commonly added as a carrier of therapeutic agents into cells, and might perhaps be used to increase penetration of CDS, according to this site. Perhaps the advantages are reaped with topical applications of MMS particularly for those who are unable to ingest CDS due to gastrointestinal issues.</p>
<p>&quot;</p>
<h3 id="further-references-17"><a class="header-anchor" href="#further-references-17">#</a> Further references:</h3>
<p>&quot;Determination of the Effectiveness of [Oral] Chlorine Dioxide in the Treatment of COVID-19; Insignares-Carrione Eduardo et al.; Molecular and Genetic Medicine; 2021</p>
<p>Chlorine dioxide and chlorine derivatives for the prevention or treatment of COVID-19: a systematic review; Alejandra Burela et al.; Revista Peruana de Medicina Experimenta y Salud Publica; Oct-Dec, 2020 - A contrasting report to the published study in &quot;&quot;Molecular and Genetic Medicine&quot;&quot;</p>
<p>Jim Humble, An active Proponent of Chlorine Dioxide and the Master Mineral Solution</p>
<p>Jim Humble: How to make MMS from distilled Water, widely available Sodium hypochlorite (NaOCl, or bleach), a sensitive weighing balance, a food-grade acid like citric acid, and a non-reactive storage container</p>
<p>Jim Humble: Important facts regarding MMS</p>
<p>Jim Humble: Newsletter Archive on MMS</p>
<p>truthfreedomhealth.wordpress.com: Clinical Study With Chlorine Dioxide: New Solutions To End The COVID-19 Pandemic</p>
<p>Master Mineral Solution, MMS or WPS Solution - Why has this Product Become so Popular?</p>
<p>A Kerry Cassidy Interview: Andreas Kalcker- Forbidden Health, Re. Coronavirus; April 7, 2020</p>
<p>Doctor says Chlorine Dioxide has cured thousands of patients worldwide- A network of 5000 doctors in 25 countries across the world, and especially in Latin America</p>
<p>luis46pr.wordpress.com: Researchers: 100% Covid-19 Cure Rate Using Intravenous Chlorine Dioxide; Luis T</p>
<p>USF Health | College of Public Health: COPH research team finds chlorine dioxide gas 99.91% effective against COVID-19 virus; March 22, 2021 - A team of researchers from the USF College of Public Health’s (COPH) Center for Environmental/Occupational Risk Analysis and Management set out to determine how effective commercially available Chlorine dioxide (CD) gas products were in reducing COVID-19 viral loads on face masks and surfaces.  Their findings, “Virucidal Activity of Chlorine Dioxide Gas for Reduction of Coronavirus on Surfaces and PPE,” was published in February, 2021, in the journal Occupational Diseases and Environmental Medicine.</p>
<p>COVID-19 | Coronavirus - Report: 2020-03-09 The Infection Prevention Strategy; www.IC.tips | info@IC.tips © The Infection Prevention Strategy, 2020; [Comparison of] Surface Disinfection Methods [Including Chlorine dioxide]</p>
<p>Truth, Freedom and Health: On Chlorine dioxide as disinfectant - Long-lasting Chlorine Dioxide (ClO2) Aqueous Solution Inactivates over 99.99% of SARS-CoV-2 (COVID-19 Virus)</p>
<p>Chlorine Dioxide in COVID-19: Hypothesis about the Possible Mechanism of Molecular Action in SARS-CoV-2; Eduardo Insignares-Carrione et al.; Journal of Molecular and Genetic Medicine; 2020:
Viruses generally consist of an outer layer or a protein coat that encapsulates a nucleic acid, which can be DNA or RNA. When chlorine dioxide comes in contact with a virus, a single, highly reactive nascent oxygen atom is released on the target virus. This oxygen binds to specific amino acids in the protein coat of the virus, denaturing the proteins and rendering the virus inactive. Additionally, nascent oxygen atoms bind to guanine, one of the four nucleic acid bases found in RNA and DNA, forming 8-oxoguanine. This oxidation of guanine residues prevents viral nucleic acid replication.</p>
<p>A 2016 research article discusses the nontoxic antimicrobial properties of ClO2, and mentions ongoing research at the Innerlight Biological Research Foundation, investigating the oral and intravenous therapeutic usage of CLO2 for a very wide variety of at least 25 different clinical applications for over twenty-five years, ranging from herpes, candida and polio to influenza, sinusitis bronchitis and pneumonia:
Chlorine Dioxide (CLO2) As a Non-Toxic Antimicrobial Agent for Virus, Bacteria and Yeast (Candida Albicans); Robert O Young; International Journal of Vaccines and Vaccination; Oct 8, 2016</p>
<p>Dr. Andreas Kalcker's extensive official website, which validates the efficacy of Chlorine Dioxide Solution: Clinical Studies with Chlorine Dioxide; New Book, &quot;&quot;BYE, BYE COVID&quot;&quot;</p>
<p>The Chlorine dioxide controversy: A deadly poison or a cure for COVID-19?;  Mitchell Brent Liester; International Journal of Medicine and Medical Sciences; July-Dec, 2021
Chlorine dioxide has been condemned as a dangerous poison and has been touted as a cure for COVID-19. This narrative review examines the controversy surrounding the use of aqueous chlorine dioxide by investigating evidence-based research articles, government documents, press reports, and the results of the first clinical trial utilizing chlorine dioxide as a treatment for COVID-19. Chlorine dioxide was found to be employed by numerous industries for antimicrobial and other uses. Aqueous chlorine dioxide was found to be safe when ingested in low doses, but when ingested in high doses, it can cause adverse hematologic and renal effects. Additionally, chlorine dioxide was found to be a strong and rapidly acting virucide with activity against a wide range of viruses.</p>
<p>ScienceDirect: Dimethyl Sulfoxide (DMSO)</p>
<p>&quot;</p>
<h2 id="_18-prone-ventilation-lying-face-down-or-prone-and-other-positions-for-dyspnoea"><a class="header-anchor" href="#_18-prone-ventilation-lying-face-down-or-prone-and-other-positions-for-dyspnoea">#</a> 18. Prone ventilation- Lying face down or prone, and other positions for dyspnoea</h2>
<h3 id="objective-18"><a class="header-anchor" href="#objective-18">#</a> Objective:</h3>
<p>Increase blood oxygen levels</p>
<h3 id="system-18"><a class="header-anchor" href="#system-18">#</a> System:</h3>
<p>Allopathy, natural medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-18"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-18">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes, except by intubated patients</p>
<h3 id="status-of-authorisation-18"><a class="header-anchor" href="#status-of-authorisation-18">#</a> Status of authorisation:</h3>
<p>Recommended by allopathic medicine, and one of the mainstays of highly effective Covid-19 treatment protocols evolved by naturopaths</p>
<h3 id="protocol-and-treatment-approach-17"><a class="header-anchor" href="#protocol-and-treatment-approach-17">#</a> Protocol and treatment approach:</h3>
<p>Lying in the prone position is found to increase oxygen saturation by opening up the alveoli, and the benefits are found to last even after returning to the supine position. This is the most frequently recommended, and perhaps effective, position to alleviate dyspnoea, but other positions are recommended in articles in the references.</p>
<h3 id="typical-duration-of-treatment-18"><a class="header-anchor" href="#typical-duration-of-treatment-18">#</a> Typical duration of treatment:</h3>
<p>Durations of several hours or days</p>
<h3 id="outcome-18"><a class="header-anchor" href="#outcome-18">#</a> Outcome:</h3>
<p>Increases blood oxygen saturation levels</p>
<h3 id="significant-side-effects-18"><a class="header-anchor" href="#significant-side-effects-18">#</a> Significant side effects:</h3>
<p>None</p>
<h3 id="recommended-quantity-for-stocking-18"><a class="header-anchor" href="#recommended-quantity-for-stocking-18">#</a> Recommended quantity for stocking:</h3>
<p>NA</p>
<h3 id="price-18"><a class="header-anchor" href="#price-18">#</a> Price:</h3>
<p>NA</p>
<h3 id="suggested-suppliers-18"><a class="header-anchor" href="#suggested-suppliers-18">#</a> Suggested suppliers:</h3>
<p>NA</p>
<h3 id="further-references-18"><a class="header-anchor" href="#further-references-18">#</a> Further references:</h3>
<p>&quot;Does prone positioning improve oxygenation and reduce mortality in patients with acute respiratory distress syndrome?; Canadian Respiratory Journal; William R Henderson, Donald EG Griesdale, et al.</p>
<p>COPD Support: COPD / Emphysema Takes Your Breath Away- DYSPNOEA POSITIONS &quot;</p>
<h2 id="_19-phototherapy-with-visible-light-photobiomodulation-disinfection-with-far-uv-c-light"><a class="header-anchor" href="#_19-phototherapy-with-visible-light-photobiomodulation-disinfection-with-far-uv-c-light">#</a> 19. Phototherapy with visible light, Photobiomodulation, Disinfection with Far UV-C light</h2>
<h3 id="objective-19"><a class="header-anchor" href="#objective-19">#</a> Objective:</h3>
<p>The therapeutic exposure to full-spectrum sunlight, or to speciffic visible or UV wavelengths, for a variety of specific purposes ranging from disinfection of airborne pathogens to mitigating infections therapeutically.</p>
<h3 id="system-19"><a class="header-anchor" href="#system-19">#</a> System:</h3>
<p>Allopathy and Naturopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-19"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-19">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes.</p>
<h3 id="status-of-authorisation-19"><a class="header-anchor" href="#status-of-authorisation-19">#</a> Status of authorisation:</h3>
<p>&quot;Photobiomodulation with visible light:
Historical and recent evidence (c.f. References):
There is historical evidence from the Spanish flu pandemic of 1918, during which it was reported in one anonymous editorial that the Massachusetts State Health Department found sunlight therapy to be “the most valuable factor in reducing mortality,” decreasing fatality of hospitalized patients from 40% to 13%, boosting flu immunity among physicians and nurses, and overall, besting the outcome of vaccines, which were then in their early stages of development. Evidence indicates that available reports of the pandemic clearly show that sunlight was effective in reducing flu-related mortality and morbidity, and person-to-person infection. Patients with severe infections exposed to sunlight therapy outdoors recovered better than those treated indoors, and the treatment prevented death among patients and infections among the healthcare workers. Thus records indicate that, phototherapy, one of the most effective tools used to minimize the impact of the 1918 pandemic and other disease epidemics, has been overlooked.</p>
<p>There is also historical evidence that the ancient Egyptians, Mesopotamians, Babylonians, Greeks and Romans, and Africans too from ancient times, venerated the sun for its healing powers and practised sunbathing.</p>
<p>Less than 25 years before the 1918 pandemic, a Danish physician, Dr. Niels Ryberg Finsen, had developed a light source that was successful in curing patients with skin tuberculosis (lupus vulgaris) and other ailments. Between 1896 and 1901, he treated as many as 804 patients with skin tuberculosis and similar microbial infections at his Medical Light Institute, achieving 83% cure rate. The Finsen lamp became widely popular and was adopted in most of Europe and North America, earning Finsen the Nobel Prize in 1903.</p>
<p>Newer studies demonstrate that various wavelengths in the blue spectrum are antimicrobial against the deadly methicillin-resistant Staphylococcus aureus (MRSA), Escherichia coli, Helicobacter pylori, Listeria monocytogenes, Pseudomonas aeruginosa, Salmonella, Acinetobacter baumannii, Aggregatibacter actinomycetemcomitans, Propionibacterium acnes, Neisseria gonorrhoeae, Porphyromonas gingivalis, Fusobacterium nucleatum, and others. An analysis of the Nobel-winning work of Finsen, supports these blue light studies, because it shows that the Finsen Lamp, used to heal many with tuberculosis infection, did not produce UV as Finsen believed; rather, it produces light in the violet/blue range. Indeed, the Finsen Lamp could not have emitted UV because the type of glass used to construct its lenses does not transmit UV.</p>
<p>There is a recent report that the common cold virus—a coronavirus—is inactivated by light. In this recent study, broad spectrum light—mimicking sunlight—was tested on aerosolized influenza virus at 20% and 70% relative humidity, while the decay constant and half-life of the virus were measured as indices of survival. The results showed that relative humidity had no effect. The simulated sunlight alone significantly inactivated the virus, resulting in 0.29 ± 0.09 min−1 decay constant and a half-life of approximately 2.4 min compared to non-irradiated controls, which had 0.02 ± 0.06 min−1 decay constant and 31.1 min half-life. The resulting 93% increase in decay constant and the concomitant 92.3% decline in half-life due to light is impressive.</p>
<p>Disinfection with Far-UV spectrum light  (207–222 nm):
In 2018, a pioneering study (David Welch et al.; Nature) showed for the first time that far-UVC efficiently inactivates airborne aerosolized viruses, with a very low dose of 2 mJ/cm2 of 222-nm light inactivating &gt;95% of aerosolized H1N1 influenza virus. Continuous very low dose-rate far-UVC light in indoor public locations is a promising, safe and inexpensive tool to reduce the spread of airborne-mediated microbial diseases through disinfecting the environment. The sanitization treatment is FDA-approved.&quot;</p>
<h3 id="protocol-and-treatment-approach-18"><a class="header-anchor" href="#protocol-and-treatment-approach-18">#</a> Protocol and treatment approach:</h3>
<p>&quot;
Phototherapy with visible light:
A part of the solar light spectrum lies in the range of ultraviolet (UV) radiation.  UV light is invisible because its wavelength is shorter than the violet wavelengths of the solar spectrum.  UV light is available year round in the tropics and during part of the year farther north and south.  UV is also produced by sun lamps.  There are three main wavelength ranges of UV light- UVA, UVB and UVC.  UV wavelengths are measured in nanometers (one billionth of a meter).</p>
<ul>
<li>UVA has a wavelength of 380-315 nanometers and when contacting the skin can penetrate beyond the outer layer (epidermis) into a layer called the dermis. UVA does not stimulate vitamin D production.</li>
<li>UVB light has a wavelength of 315-290 nanometers and penetrates only the epidermis when it contacts the skin. UVB stimulates the skin, which then produces vitamin D.</li>
<li>UVC light has a wavelength of 280-10 nanometers and is filtered out by the Earth’s outer atmosphere. It is an invisible part of the solar spectrum.</li>
</ul>
<p>Of the three types of UV, it is UVB that stimulates the production of vitamin D when it contacts the skin.  Ninety percent of all vitamin D in human beings is produced by sunlight exposure. Vitamin D is vital to immune health. Although some vitamin D can be obtained through fish, eggs, mushrooms and other dietary sources, the amount is miniscule.  Vitamin D is also available through supplementation, which is also produced by the irradiation of lanolin by UVB. The only truly natural way to obtain vitamin D is through exposure to sunlight or other UVB sources.</p>
<p>Photobiomodulation (c.f. References):
The development of lasers in the late 50s and the early 60s, and the subsequent evolution of light emitting diodes transformed phototherapy; it gave rise to laser therapy or light therapy, which, in turn, evolved into photobiomodulation as a variety of light-emitting technologies were devised. Today, photobiomodulation, which takes advantage of the photochemical effects of low power lasers, LEDs and other monochromatic sources of light to treat various diseases and ailments, has evolved scientifically, allowing evidence-based practice. This development now enables clinicians and others to exploit the specific effect of each wavelength or spectrum of light for treatment purposes. Advances in light technology and steady development of photobiomodulation through research and continual adaptation to evolving technologies have enabled science to uncover the beneficial effects of several spectra of light—in particular, violet/blue light, red light and near infrared light.</p>
<p>There are, in fact, several studies that show that we do not need UV to eradicate bacteria, viruses and other pathogens, and that relatively safer wavelengths adjacent to UV, such as violet or blue light, are antimicrobial against microorganisms. Furthermore, evidence shows that red and near-infrared light have immense therapeutic value as well, and may be effective in treating a range of ailments, including the respiratory complications of coronavirus disease. It is now known that light in the blue 400–470 nm range is antimicrobial against numerous bacteria and has the potential to mitigate opportunistic bacterial infections associated with COVID-19 and other coronavirus infections. Furthermore, as detailed below, laboratory experiments show that red and near infrared light, with wavelengths approximately in the range of 600–700 nm and 700–1000 nm respectively, have the potential to reduce lung inflammation and fibrosis, and hence acute respiratory disorder syndrome, a major cause of death in every coronavirus pandemic, including the prevailing COVID-19 pandemic.</p>
<p>A recent development buttresses the suggestion that blue light, in particular, pulsed blue light, which reports have shown to be 40 to 100 times more potent than the commonly available continuous wave blue light, has great potential to inactivate COVID-19 and other coronaviruses, in addition to suppressing related opportunistic bacterial infections.</p>
<p>Disinfection with Far-UV spectrum light  (207–222 nm):
A direct approach to prevent airborne transmission is inactivation of airborne pathogens, and the airborne antimicrobial potential of UVC ultraviolet light has long been established; however, its widespread use in public settings is limited because conventional UVC light sources are both carcinogenic and cataractogenic. By contrast, research studies have previously shown that far-UVC light (207–222 nm) efficiently inactivates bacteria without harm to exposed mammalian skin. This is because, due to its strong absorbance in biological materials, far-UVC light cannot penetrate even the outer (nonliving) layers of human skin or eye; however, because bacteria and viruses are of micrometer or smaller dimensions, far-UVC can penetrate and inactivate them.</p>
<p>In 2018, a pioneering study (David Welch et al.; Nature) showed for the first time that far-UVC efficiently inactivates airborne aerosolized viruses, with a very low dose of 2 mJ/cm2 of 222-nm light inactivating &gt;95% of aerosolized H1N1 influenza virus. Continuous very low dose-rate far-UVC light in indoor public locations is a promising, safe and inexpensive tool to reduce the spread of airborne-mediated microbial diseases.&quot;</p>
<h3 id="typical-duration-of-treatment-19"><a class="header-anchor" href="#typical-duration-of-treatment-19">#</a> Typical duration of treatment:</h3>
<p>&quot;1-2 hours of phototherapy with sunlight, aka sunbathing, daily might be expected, in the light of historical evidence, to yield remarkable mitigation of influenza-like disease over 3-5 days of treatment. In fact, this simple technique has been long used in naturopathy and nature cure to reverse chronic, even debilitating and fatal ailments.</p>
<p>When far-UVC lighting is used to sanitize indoor and public spaces, it has been proposed that continuous very low dose-rate far-UVC light in indoor public locations is a promising, safe and inexpensive tool to reduce the spread of airborne-mediated microbial diseases.&quot;</p>
<h3 id="outcome-19"><a class="header-anchor" href="#outcome-19">#</a> Outcome:</h3>
<p>&quot;Highly effective mitigation of bacterial and viral infections, and especially pulmonary disease, through photobiomodulation and also by phototherapy with sunlight.</p>
<p>The Stew Peters Show: UV Light Fixtures Would End COVID Tyranny, And They're Available Now!</p>
<p>&quot;</p>
<h3 id="significant-side-effects-19"><a class="header-anchor" href="#significant-side-effects-19">#</a> Significant side effects:</h3>
<p>&quot;No significant side effects to sunbathing, when the phototherapy is applied in therapeutic doses; very beneficial to holistic health. However there are concerns that excessive exposure can induce immunosuppression.
Sunlight Effects on Immune System: Is There Something Else in addition to UV-Induced Immunosuppression?; D. H. González Maglio et al.; BioMed Research International; Dec, 2016</p>
<p>With respect to far-UVC irradiation, research studies have shown that ffar-UVC light (207–222 nm) efficiently inactivates bacteria without harm to exposed mammalian skin. This is because, due to its strong absorbance in biological materials, far-UVC light cannot penetrate even the outer (nonliving) layers of human skin or eye; however, because bacteria and viruses are of micrometer or smaller dimensions, far-UVC can penetrate and inactivate them. Thus, in contrast to the known human health safety issues associated with conventional germicidal 254-nm broad-spectrum UVC light, far-UVC light does not appear to be cytotoxic to exposed human cells and tissues in vitro or in vivo, to the extent that the subject has been researched.&quot;</p>
<h3 id="recommended-quantity-for-stocking-19"><a class="header-anchor" href="#recommended-quantity-for-stocking-19">#</a> Recommended quantity for stocking:</h3>
<p>NA</p>
<h3 id="price-19"><a class="header-anchor" href="#price-19">#</a> Price:</h3>
<p>The available of inexpensive light-emitting diodes and abundant availability of sunlight make phototherapy a free, or very cost-effective, and readily accessible option, if incorporated into treatment protocols. In fact, there is evidence that phototherapy with sunlight was avowedly widely used with remarkable success in standard-of-care therapy during the 1918 devastating flu pandemic.</p>
<h3 id="suggested-suppliers-19"><a class="header-anchor" href="#suggested-suppliers-19">#</a> Suggested suppliers:</h3>
<p>&quot;
Krypton Far-UV Lights (222 nm Far UV-C Excimer Lamp Disinfection lighting)</p>
<p>Far-UV (222 nm, Excimer lamp) Sterilray disinfection lighting
&quot;</p>
<h3 id="further-references-19"><a class="header-anchor" href="#further-references-19">#</a> Further references:</h3>
<p>&quot;SciTechDaily: Experiments Show Sunlight Destroys COVID Virus 8 Times Faster Than Scientists Thought; Oct 22, 2021- The inactivation of coronavirus by solar radiation happens too quickly to be wholly explained by the theory that this is solely attributable to the effect of UVB radiation in sunlight. Therefore there may be other mechanisms at play in the process.</p>
<p>Light as a potential treatment for pandemic coronavirus infections: A perspective; Chukuka Samuel Enwemeka et al.; Journal of Photochemistry and Photobiology; June, 2020</p>
<p>Disinfection with Far-UV (222 nm Ultraviolet light); Jamie Childress et al.; Boeing; 2020</p>
<p>Far-UVC light: A new tool to control the spread of airborne-mediated microbial diseases; David Welch et al.; Nature; Feb 9, 2018</p>
<p>Vagelos College of Physicians and Surgeons at Columbia University Irving Medical Center: Far-UVC Light Safely Kills Airborne Coronaviruses; David Brenner; June 24, 2020</p>
<p>fda.gov: UV Lights and Lamps: Ultraviolet-C Radiation, Disinfection, and Coronavirus: &quot;&quot;Given the current outbreak of Coronavirus Disease 2019 (COVID-19) disease caused by the novel coronavirus SARS-CoV-2, consumers may be interested in purchasing ultraviolet-C (UVC) lamps to disinfect surfaces in the home or similar spaces.&quot;&quot;</p>
<p>Defefnce Systems Information Analysis Center (DoD): Using 222-nm Ultraviolet (UV) Light for Safer Disinfection</p>
<p>Sunlight Institute: The Sun and UV Light</p>
<p>healthyeating.sfgate.com: Can You Get Vitamin D Through a Light Shirt?; Marie Dannie; Dec 17, 2018
&quot;</p>
<h2 id="_20-iota-carrageenan-nasal-spray-the-active-ingredient-in-betadine-cold-defence-nasal-spray"><a class="header-anchor" href="#_20-iota-carrageenan-nasal-spray-the-active-ingredient-in-betadine-cold-defence-nasal-spray">#</a> 20. Iota-Carrageenan nasal spray, the active ingredient in Betadine Cold Defence Nasal Spray</h2>
<h3 id="objective-20"><a class="header-anchor" href="#objective-20">#</a> Objective:</h3>
<p>Prophylaxis and prevention of Covid-19</p>
<h3 id="system-20"><a class="header-anchor" href="#system-20">#</a> System:</h3>
<p>Allopathy and integrative medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-20"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-20">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Probably</p>
<h3 id="status-of-authorisation-20"><a class="header-anchor" href="#status-of-authorisation-20">#</a> Status of authorisation:</h3>
<p>The high efficacy of Iota-carrageenan against the SARS-CoV-2 coronavirus and its prophylactic application has been demonstrated in clinical and other studies.</p>
<h3 id="protocol-and-treatment-approach-19"><a class="header-anchor" href="#protocol-and-treatment-approach-19">#</a> Protocol and treatment approach:</h3>
<p>A clinical study demonstrated the post-exposure and during-exposure prophylactic efficacy of Iota-carrageenan in a hospital setting among frontline health workers. In the randomized controlled trial, participants were instructed to self-administer 1 puff (0.10 mL = 0.17 mg of I-C) of medication to each nostril 4 times per day, where the active medication was Iota-Carrageenan nasal spray approved for use in many Latin American countries. The Carrageenan spray contained Iota-Carrageenan 0.17%, Sodium Chloride 0.9%, pH 6.00–7.00, isotonic; in a High-Density Polyethylene bottle, 10 mL content, with dosing pump (100 µL or 0.1 mL) and Preservative-Free System.</p>
<h3 id="typical-duration-of-treatment-20"><a class="header-anchor" href="#typical-duration-of-treatment-20">#</a> Typical duration of treatment:</h3>
<p>The treatment is prophylactic and has been shown to be safe and nontoxic for prolonged use among primary contacts. The trial study cited here mandated use of the I-C nasal spray protocol of 1 puff to each nostril, each delivering 0.1 mL of 0.17 % I-C solution, 4 times per day, for 21 days.</p>
<h3 id="outcome-20"><a class="header-anchor" href="#outcome-20">#</a> Outcome:</h3>
<p>&quot;In one RCT, the relative risk reduction among frontline healthcare workers who were prophylaxing with Iota-Carrageenan nasal spray protocol was found to be 79 %, and the absolute risk reduction to be 4 %.</p>
<p>It appears that the nutraceutical extract Iota-Carrageenan is one of the most promising therapeutic agents for prophylaxis.&quot;</p>
<h3 id="significant-side-effects-20"><a class="header-anchor" href="#significant-side-effects-20">#</a> Significant side effects:</h3>
<p>&quot;Carrageenan is likely safe for most people when taken by mouth in food amounts. There is a chemically altered form of carrageenan that is available in France to treat peptic ulcers. This form is possibly unsafe because there's some evidence that it might cause cancer. Carrageenan might decrease blood pressure. Taking Carrageenan along with medications for high blood pressure (like Captopril and Furosemide) might cause blood pressure to go too low. It is also advisable to exercise caution when taking Carrageenan with anticoagulants like Aspirin, Ibuprofen, Enoxaparin, Heparin and Warfarin.</p>
<p>Carrageenan- Health benefits, Side effects, Uses, Dose &amp; Precautions
&quot;</p>
<h3 id="recommended-quantity-for-stocking-20"><a class="header-anchor" href="#recommended-quantity-for-stocking-20">#</a> Recommended quantity for stocking:</h3>
<p>1-2 50 ml bottles</p>
<h3 id="price-20"><a class="header-anchor" href="#price-20">#</a> Price:</h3>
<p>$9 for Betadine Sore Throat Spray on Amazon (Amazon's Choice)</p>
<h3 id="suggested-suppliers-20"><a class="header-anchor" href="#suggested-suppliers-20">#</a> Suggested suppliers:</h3>
<p>Betadine Sore Throat Spray, 50ml, $ 9</p>
<h3 id="further-references-20"><a class="header-anchor" href="#further-references-20">#</a> Further references:</h3>
<p>&quot;Efficacy of a Nasal Spray Containing Iota-Carrageenan in the Postexposure Prophylaxis of COVID-19 in Hospital Personnel Dedicated to Patients Care with COVID-19 Disease; Figueroa JM et al.; International Journal of General Medicine; Oct, 2021</p>
<p>Safety and efficacy of iota-carrageenan nasal spray in treatment and prevention of the common cold; Diana Bichiri et al.; Medicine and Pharmacy Reports; Jan, 2021</p>
<p>Efficacy and safety of an antiviral Iota-Carrageenan nasal spray: a randomized, double-blind, placebo-controlled exploratory study in volunteers with early symptoms of the common cold; Ron Eccles et al.; Respiratory Research; Aug 10, 2010</p>
<p>Carrageenan- Health benefits, Side effects, Uses, Dose and Precautions</p>
<p>&quot;</p>
<h2 id="_21-a-reportedly-very-effective-treatment-to-mitigate-covid-19-treat-long-covid-as-well-as-reverse-inflammatory-effects-of-vaccines"><a class="header-anchor" href="#_21-a-reportedly-very-effective-treatment-to-mitigate-covid-19-treat-long-covid-as-well-as-reverse-inflammatory-effects-of-vaccines">#</a> 21. &quot;A reportedly very effective treatment to mitigate Covid-19, treat long-Covid as well as reverse inflammatory effects of vaccines:</h2>
<p>Dr. Dmitry Kats' Niacin + Melatonin therapy: The Niatonin Protocol
&quot;</p>
<h3 id="objective-21"><a class="header-anchor" href="#objective-21">#</a> Objective:</h3>
<p>The treatment of Covid-19 infection, long-haul Covid and inflammation due to vaccination</p>
<h3 id="system-21"><a class="header-anchor" href="#system-21">#</a> System:</h3>
<p>Allopathic research and techniques, non-conventional</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-21"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-21">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Not necessarily, must be verified with a competent practitioner</p>
<h3 id="status-of-authorisation-21"><a class="header-anchor" href="#status-of-authorisation-21">#</a> Status of authorisation:</h3>
<p>&quot;These remedies, though largely based on some research evidence and usually reported to be highly effective in clinical practice, are not endorsed by mainstream health policy and regulatory organizations. These treatments have not been explored much, and not much information was found to vouchsafe their outcomes. However, this is in itself not indicative of their benefit, because it is widely acknowledged among highly credible protocol innovators that excellent, very evidence-based protocols are being suppressed by regulatory authorities in order to promote inferior solutions at the expense of public health.</p>
<p>The Niatonin Protocol: The FDA clamps down on the Niacin + Melatonin protocol.</p>
<p>&quot;</p>
<h3 id="protocol-and-treatment-approach-20"><a class="header-anchor" href="#protocol-and-treatment-approach-20">#</a> Protocol and treatment approach:</h3>
<p>&quot;The Niatonin Protocol, Dr. Dmitry Kats:</p>
<ol>
<li>
<p>Dr. Dmitry Kats' (PhD in Epidemiology from the University of North Carolina and degree in Biostatistics)
The Niatonin Protocol with Niacin + Melatonin
Objective: Treat Covid-19, long-haul Covid symptoms and injury the Covid vaccines.
OSF Preprints: Sufficient niacin supply: the missing puzzle piece to COVID-19, and beyond?; Dr. Dmitry Kats; Jan 11, 2021</p>
</li>
<li>
<p>Breakthrough from the Niatonin Protocol for Covid long-haulers: Telemedicine consultation service</p>
</li>
</ol>
<p>The protocol uses Niacin (B3) as Nicotinic acid, which is the only form of Niacin that is shown not to cause liver damage, and the only form which is effective in the Niatonin Protocol. The Niacin is best to be used in the powder form. If not available as a powder, the veg capsules are the next best form, and tablet form is acceptable as well.</p>
<p>The Melatonin used in the protocol is non-extended release Melatonin, which is the only form that is effective in this protocol. As with Niacin, it is best to use Melatonin in the powder form, followed by the veg capsules, and the tablets are acceptable as well.
&quot;</p>
<h3 id="typical-duration-of-treatment-21"><a class="header-anchor" href="#typical-duration-of-treatment-21">#</a> Typical duration of treatment:</h3>
<p>Reportedly, about a week</p>
<h3 id="outcome-21"><a class="header-anchor" href="#outcome-21">#</a> Outcome:</h3>
<p>&quot;The Niatonin Protocol:</p>
<ul>
<li>
<p>Reportedly, screenshots of testimonials for the Niatonin Protocol</p>
</li>
<li>
<p>Screenshot of mind map of the Niatonin Protocol 2.0, from its official website
&quot;</p>
</li>
</ul>
<h3 id="significant-side-effects-21"><a class="header-anchor" href="#significant-side-effects-21">#</a> Significant side effects:</h3>
<p>No significant side effects reported for the use of these agents in therapeutic doses.</p>
<h3 id="recommended-quantity-for-stocking-21"><a class="header-anchor" href="#recommended-quantity-for-stocking-21">#</a> Recommended quantity for stocking:</h3>
<p>&quot;Can be obtained only on consultation with Dr. Dmitry Kats.</p>
<p>JOIN OUR TELEGRAM: t.me/vaccinereversal
TO BOOK APPOINTMENT: niatonin.youcanbook.me
Contact Dr. Dmitry Kats and team:
https://niacincurescovid.com/contact-us
&quot;</p>
<h3 id="price-21"><a class="header-anchor" href="#price-21">#</a> Price:</h3>
<p>These therapeutic products are mostly inexpensive.</p>
<h3 id="suggested-suppliers-21"><a class="header-anchor" href="#suggested-suppliers-21">#</a> Suggested suppliers:</h3>
<p>&quot;The Niatonin Protocol:</p>
<p>JOIN OUR TELEGRAM: t.me/vaccinereversal
TO BOOK APPOINTMENT: niatonin.youcanbook.me
Contact Dr. Dmitry Kats and team:
https://niacincurescovid.com/contact-us
&quot;</p>
<h3 id="further-references-21"><a class="header-anchor" href="#further-references-21">#</a> Further references:</h3>
<p>&quot;</p>
<ul>
<li>
<p>Thomas Paine Podcast: Masterclass: Dr. Dmitry Kats Ph.D Details His Niacin Protocol &quot;&quot;Niatonin&quot;&quot;</p>
</li>
<li>
<p>Serious Shot With CHCA: Dr. Kats discusses Niacin as a prevention and treatment for Covid and other prevalent diseases; July 27, 2021
An excellent interview revealing many details of the Protocol and its theoretic background.</p>
</li>
<li>
<p>Network Pharmacology and bioinformatics analyses identify intersection genes of niacin and COVID-19 as potential therapeutic targets; Rong Li et al.; Briefings in Bioinformatics; March, 2021</p>
</li>
<li>
<p>Clinical Trials for Use of Melatonin to Fight against COVID-19 Are Urgently Needed; Konrad Kleszczynski et al.; Nutrients; Sept, 2020</p>
</li>
<li>
<p>Dr. Dmitry Kats on Facebook
&quot;</p>
</li>
</ul>
<h2 id="_22-hydrogen-peroxide-therapy-where-h2o2-is-administered-as-oral-rinse-for-prevention-nebulization-in-the-gaseous-form-or-consumed-in-very-low-therapeutic-concentrations-in-drinking-water"><a class="header-anchor" href="#_22-hydrogen-peroxide-therapy-where-h2o2-is-administered-as-oral-rinse-for-prevention-nebulization-in-the-gaseous-form-or-consumed-in-very-low-therapeutic-concentrations-in-drinking-water">#</a> 22. &quot;Hydrogen peroxide therapy, where H2O2 is administered as oral rinse (for prevention), nebulization in the gaseous form, or consumed in very low therapeutic concentrations in drinking water</h2>
<p>Hydrogen peroxide and Ozone therapies are recommended by the stalwart of Orthomolecular medicine, Dr. Thomas E. Levy, MD, JD.&quot;</p>
<h3 id="objective-22"><a class="header-anchor" href="#objective-22">#</a> Objective:</h3>
<p>The treatment of Covid-19 infection</p>
<h3 id="system-22"><a class="header-anchor" href="#system-22">#</a> System:</h3>
<p>Alternative allopathy</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-22"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-22">#</a> Can be used alongside other allopathic treatments:</h3>
<p>Yes, but it is not known whether this always yields the best results.</p>
<h3 id="status-of-authorisation-22"><a class="header-anchor" href="#status-of-authorisation-22">#</a> Status of authorisation:</h3>
<p>Evidence-based but not mainstream, reportedly few clinical trials</p>
<h3 id="protocol-and-treatment-approach-21"><a class="header-anchor" href="#protocol-and-treatment-approach-21">#</a> Protocol and treatment approach:</h3>
<p>&quot;Hydrogen peroxide has been used for many years as a monotherapy as well as part of many different treatment protocols for a wide variety of infections, reports Dr. Thomas E. Levy. A clinically effective dose will typically cost less than a dime. During a severe epidemic of influenza in 1919 a protocol of intravenous hydrogen peroxide given only to the most severely ill patients dramatically decreased the death rate.</p>
<p>Influenzal Pneumonia: The Intravenous Injection of Hydrogen Peroxide; T.H. Oliver, M.A., B.CH. CANTAB., M.D. VICT. (Resident Medical Officer, The Royal Infirmary, Manchester) &amp; D.V. Murphy, M.B.; CH.B. N.U.I. (Captain, R.A.M.C.); The Lancet; Feb 21, 1920</p>
<p>Hydrogen Peroxide as an Adjuvant Therapy for COVID-19: A Case Series of Patients and Caregivers in the Mexico City Metropolitan Area; Arturo Cervantes Trejo et al.; Evidence-Based Complementary and Alternative Medicine; 2021 - The article reports a consecutive case series of twenty-three COVID-19 patients (of 36 initially enrolled) who had been diagnosed by their primary care physician (mean age: 39, range: 8 months–70 years; 74% male) and twenty-eight caregivers in the Mexico City Metropolitan Area who received a complementary and alternative medicine (CAM) telemedicine treatment with H2O2 taken by mouth (PO, at a concentration of 0.06%), oral rinse (mouthwash, 1.5%), and / or nebulization (0.2%). We describe the treatment program and report the response of the COVID-19 patients and their caregivers. The patients mainly recovered well, reporting feeling “completely better” at 9.5 days on average. Two (9%) were hospitalized prior to joining the study, and one did not fully recover. Patients frequently reported nausea and sometimes dizziness or vomiting related to the oral treatment. None of the twenty-eight caregivers in close contact with the patients reported contracting COVID-19. Given its low cost and medical potential and considering its relative safety if used properly, it is suggested that randomized controlled trials should be conducted.</p>
<p>Due to its well-documented and potent antipathogen properties, along with producing no toxic byproducts upon killing pathogens, Hydrogen peroxide is now being proposed in the literature for an off-label use via oral and nasal washing, a regimen of gargling, and administration via nebulization immediately upon symptom appearance with the presumptive diagnosis of COVID-19. Impressive anecdotal evidence already indicates that this application, especially via nebulization, appears to be a powerful preventive and even curative therapy against all respiratory-acquired infections, viral or otherwise.</p>
<p>Might hydrogen peroxide reduce the hospitalization rate and complications of SARS-CoV-2 infection?; Arturo A Caruso et al.; Infection Control and Hospital Epidemiology; Nov, 2020</p>
<p>Hydrogen peroxide and viral infections: A literature review with research hypothesis definition in relation to the current covid-19 pandemic; Arturo Armone Caruso et al.; Medical Hypotheses;  Nov, 2020</p>
<p>Preparation at home:
To make H2O2 pre-rinse at home, dilute generic 3% hydrogen peroxide [available in drugstores] in a ratio of 2 parts water and 1 part hydrogen peroxide. Peppermint oil can be added for flavour.
&quot;</p>
<h3 id="typical-duration-of-treatment-22"><a class="header-anchor" href="#typical-duration-of-treatment-22">#</a> Typical duration of treatment:</h3>
<p>1-2 weeks</p>
<h3 id="outcome-22"><a class="header-anchor" href="#outcome-22">#</a> Outcome:</h3>
<p>Reduces infection</p>
<h3 id="significant-side-effects-22"><a class="header-anchor" href="#significant-side-effects-22">#</a> Significant side effects:</h3>
<p>&quot;
One clinical trial with oral Hydrogen peroxide reported that patients frequently felt nausea and sometimes dizziness or vomiting related to the oral treatment. &quot;</p>
<h3 id="recommended-quantity-for-stocking-22"><a class="header-anchor" href="#recommended-quantity-for-stocking-22">#</a> Recommended quantity for stocking:</h3>
<p><strong>VACANT</strong></p>
<h3 id="price-22"><a class="header-anchor" href="#price-22">#</a> Price:</h3>
<p>Inexpensive, can be prepared at home from cheap ingredients</p>
<h3 id="suggested-suppliers-22"><a class="header-anchor" href="#suggested-suppliers-22">#</a> Suggested suppliers:</h3>
<p>The solution can be prepared at home from inexpensive ingredients like bleach and Citric acid.</p>
<h3 id="further-references-22"><a class="header-anchor" href="#further-references-22">#</a> Further references:</h3>
<p>&quot;Hydrogen peroxide against novel coronavirus; July 7, 2020- Dr. Jason Bowling, Infectious Diseases Physicians at University Health System and Dr. Ruth Berggren with University of Texas Health Science Center at San Antonio talks about how hydrogen peroxide can be effectively used against novel coronavirus.</p>
<p>Effectiveness of hydrogen peroxide as auxiliary treatment for hospitalized COVID-19 patients in Brazil: preliminary results of a randomized double-blind clinical trial; Marielle Bazzo di Domenico et al.; Epidemiology and Health; 2021 -
A randomized controlled trial was conducted of 40 hospitalized patients who tested positive for SARS-CoV-2. The patients were divided into experimental and control groups, each with n=20. The experimental group were administered gargling with 1.0 % Hydrogen peroxide aqueous solution and nasal wash with 0.5 % Hydrogen peroxide aqueous solution. The protocol was used for 7 days, and the groups were monitored, by being queried for self-reported symptoms, every 2 days for a total of 8 days. There was no significant difference between the 2 groups in the length of hospital stay (p= 0.65). The most frequent symptom on day 0 was coughing (72.0% in the experimental group and 76.5% in the control group), which abated over time. There was no significant difference between the groups in the evaluated symptoms. Most (75.0%) of the patients in the experimental group presented a reduction in dyspnea between days 0 and 2. Few patients reported adverse effects from the use of the solutions.</p>
<p>Might hydrogen peroxide reduce the hospitalization rate and complications of SARS-CoV-2 infection?; Arturo A Caruso et al.; Infection Control &amp; Hospital Epidemiology; Feb 22, 2020 -
[The SARS-CoV-2 virus is known to persist in the upper respiratory tract for a few days before migrating to the lower respiratory tract.] The efficient inactivation of coronaviruses (eg, SARS and MERS) on inanimate surfaces using hydrogen peroxide (H2O2 0.5% for 1 minute) was assessed by Kampf et al. Based on their findings, and after reviewing the current literature concerning hydrogen peroxide, we propose that hydrogen peroxide, as an antiseptic agent, could play a pivotal role in reducing the hospitalization rate and COVID-19–related complications. The antiseptic efficacy of hydrogen peroxide 3% against SARSCoV-2 on oral and nasal mucosa can be reasonably hypothesized. ... Thus, the overall progression of the infection from the upper to the lower respiratory tract can be reduced.</p>
<p>Hydrogen Peroxide: Covid Killer? Michael D Gillespie, DDS -
Hydrogen peroxide [1.5 %] is preferred [in mouth wash] since it is clinically acceptable for virucidal activity, is commercially available, inexpensive, and doesn’t have a terribly displeasing taste. Hydrogen peroxide is quickly degraded by elements in saliva, so the effects are not long lasting. Used as directed (i.e., rinsing the mouth and gargling and nasal wash, for 1 minute with prescribed concentrations), Hydrogen peroxide breaks down into water and oxygen in the mouth and is therefore very safe. Its primary use is in prevention, reducing contagion, and reducing viral load in the early stage of the infection in the upper respiratory tract. To make pre-rinse at home, dilute generic 3% hydrogen peroxide [available in drugstores] in a ratio of 2 parts water and 1 part hydrogen peroxide. Peppermint oil can be added for flavour.</p>
<p>Dr. Thomas E. Levy, MD, JD, on Amazon</p>
<p>The Future of Medicine Foundation: Defeating Covid-19 by Returning Health to Humanity Through Nutrition-Based Medicine</p>
<p>Vitalitymagazine.com: COVID-19 How Can I Cure Thee? Let Me Count the Ways; Dr. Thomas E. Levy, MD, JD; Dec 3, 2020
&quot;</p>
<h2 id="_23-ozone-therapy"><a class="header-anchor" href="#_23-ozone-therapy">#</a> 23. Ozone therapy-</h2>
<p>The introduction of therapeutic concentrations of Ozone, either mixed with oxygen in the gaseous form and inhaled, or infused into the patient's own blood and administered back intravenously, or perhaps less frequently but even more safely and easily, consumed in small therapeutic doses as Ozonated water.</p>
<h3 id="objective-23"><a class="header-anchor" href="#objective-23">#</a> Objective:</h3>
<p>Treat Covid and long-Covid</p>
<h3 id="system-23"><a class="header-anchor" href="#system-23">#</a> System:</h3>
<p>Alternate allopathy, Orthomolecular / Integrative medicine</p>
<h3 id="can-be-used-alongside-other-allopathic-treatments-23"><a class="header-anchor" href="#can-be-used-alongside-other-allopathic-treatments-23">#</a> Can be used alongside other allopathic treatments:</h3>
<p>&quot;It appears so, but Ozone is known to be a monotherapy that is effective in a relatively short treatment duration. One study reports that the reported efficacy of Ozone used as adjunct therapy is smaller than the reported efficacy of its usage as monotherapy, while another reported clinically significant efficacy as adjunct therapy.</p>
<p>Effectiveness of ozone therapy in addition to conventional treatment on mortality in patients with COVID-19; Şahin Çolak et al.; International Journal of Clinical Practice; May 10, 2021</p>
<p>Safety and efficacy of ozone therapy in mild to moderate COVID-19 patients: A phase 1/11 randomized control trial (SEOT study); Mili Shah et al.; International Immunopharmacology; Feb, 2021</p>
<p>&quot;</p>
<h3 id="status-of-authorisation-23"><a class="header-anchor" href="#status-of-authorisation-23">#</a> Status of authorisation:</h3>
<p>Highly evidence-based, but not authorized by regulatory authorities, who insist that all treatments except vaccination are futile against Covid-19.</p>
<h3 id="protocol-and-treatment-approach-22"><a class="header-anchor" href="#protocol-and-treatment-approach-22">#</a> Protocol and treatment approach:</h3>
<p>&quot;A comprehensive evidence-based website on therapeutic uses of Ozone: drsozone.com</p>
<p>Hindustan Times: What is ozone therapy and how it helps Covid-19 patients heal faster; Parmita Uniyal; Sept 24, 2021-
In Ozone therapy, medical-grade Ozone, which is a mixture of Oxygen and Ozone, is introduced into the body to speed up recovery. It has been found effective in the treatment of Covid-19 [and also post-Covid syndrome, and is a well nigh a safe panacea for a host of other severe and chronic ailments, ranging from eczema, brain disorders and liver disease to tuberculosis and even cancer].</p>
<p>Ozone is probably the single most potent anti-pathogenic agent available today, according to a report by Dr. Thomas E. Levy. &quot;&quot;It readily eradicates all pathogenic bacteria, fungi, viruses, and protozoa. It has many routes of administration and can be utilized as an effective monotherapy, although it positively supports all treatment protocols in an adjunctive and usually synergistic fashion as well.</p>
<p>Method and principles of treatment:</p>
<p>Ozone Therapy as a Possible Option in COVID-19 Management; Alessandra Gavazza et al.; Frontiers in Public Health; Aug 25, 2021-
For medical purposes, Ozone can be administered parenterally with minimal side effects, beside the only exception of not being injected intravenously as a gas because of the risk of embolism. As a powerful oxidant, when Ozone comes into contact with blood or other body fluids, it releases reactive oxygen species (ROS), and lipid oxidation products (LOPs) both of which are responsible for the biological results. The main form of ROS is Hydrogen peroxide (H2O2) which is easily transferred from plasma into the cells. When H2O2 abruptly appears above the threshold medical concentration in the cytoplasm of cells it represents the triggering stimulus for the possibly simultaneous activation of different biochemical pathways in erythrocytes, leukocytes and platelets in addition to other numerous biological effects, such as antimicrobial, immunostimulant, and antioxidant ones. H2O2 is then suddenly inactivated into water by the high concentration of Glutathione (GSH), Catalase (CAT), and Glutathione peroxidase (GSH-Px) enzymatic systems, reducing its harmful potential. Although the exact mechanism of action of ozone is far to be fully elucidated, it has been characterized to have different biological properties. ...</p>
<p>Ozone Therapies Group and Frontiers in Ozone: THE OZONE REFERENCE BOOK: &quot;&quot;ADVANCES OF OZONE THERAPY IN MEDICINE &amp; DENTISTRY&quot;&quot;, By Dr. Silvia A. Menendez, PhD (Chemistry) and Mark T. Weiser, DDS, Fellow, Academy of Laser Dentistry- &quot;&quot;The aim of this book is to give a clear idea about the ozone mechanism of action, as well as to understand what is known about ozone therapy and what new things we should try to learn about it.&quot;&quot;</p>
<p>&quot;&quot;Ozone has been documented to cure advanced cases of Ebola virus, for which there are still no known effective mainstream medical therapies. For someone with ready access to ozone, different applications of ozone could certainly be used to prevent COVID-19 and other respiratory viruses as well. However, with the other simple and effective antiviral measures listed in this article, using ozone for prevention is not really needed.&quot;&quot;</p>
<p>RAPID RESOLUTION OF HEMORRHAGIC FEVER (EBOLA) IN SIERRA LEONE WITH OZONE THERAPY; Robert Jay Rowen, MD, et al.; African Journal of Infectious Diseases; 2016-
&quot;&quot;Ebola Virus Disease (EVD) has ravaged three countries in West Africa. The mortality rate is extremely high, and it is perceived not only as threat to all of Africa but to the entire world. There is no known treatment to date other than administration of convalescent blood or experimental monoclonal antibodies, which both often fail. Ozone therapy (OT) has been in clinical use for decades and has been found to have physiological effects, which should directly inactivate the virus itself, as well as modulate its damaging effects. We present the scientific background and the possibility of ozone therapy as a cure or prevention for EVD in five consecutive patients.&quot;&quot;</p>
<p>Ozonated water therapy:</p>
<p>Ozone water therapy protocol- How to make and use ozonated water, even at home:
Ozonated water can be produced at home using 1) an Oxygen cylinder, 2) Ozone generator, 3) an optional &quot;&quot;destruct&quot;&quot; (if the generator does not provide one) to reduce the excess, toxic Ozone (O3) gas back to Oxygen (O2) before being released into the room air, and 4) a flask of distilled or Reverse Osmosis water into which the generated Ozone is passed to be dissolved. Typically, the time for which Ozone must be bubbled through 240 mL or 8 ounces of pure (distilled / RO) water is 12 minutes, to make Ozonated therapeutic water.</p>
<p>Guidelines for typical dosage in Ozone water therapy protocol:
&quot;&quot;Drinking ozone water has a multitude of anecdotal testimonies touting benefits for digestion, infections, and inflammation, but the scientific community has not produced enough research yet to take a definitive stance.&quot;&quot;</p>
<p>Ozone concentration ranges: 20-90+ ug/ml (Gamma).
Ozone water can be administered the following ways:</p>
<ul>
<li>Drinking</li>
<li>Oral Swishing for pre-post dental work</li>
<li>Wound Cleansing</li>
</ul>
<p>COMMON PROTOCOL FOR DRINKING OZONE WATER:</p>
<p>Low and Slow Approach:</p>
<ol>
<li>Start with 16 ounces of water at around 20 Gamma or roughly ¼ LPM (Liter per min) 2-3 times a week.</li>
<li>After 1 week, patient can move up to 32 ounces at or around 20 Gamma for 2-3 times a week.</li>
<li>Patient can then titrate up to as high of a level of gamma as desired by Medical Practitioner - see Helpful Hints below for adverse reactions
Aggressive Approach:</li>
<li>Start with 16 ounces of water at around 20 Gamma or roughly ¼ LPM (Liter per min) 2 times per day/5 times a week.</li>
<li>After 1st week have the patient work up in strength / Gamma by 10 every every 2-3 days on the same regimen of 16 ounces 2 times per day.</li>
<li>Patient can then titrate up to as high of a level of Gamma as desired by Medical Practitioner - see Helpful Hints below for adverse reactions.</li>
</ol>
<p>HELPFUL HINTS:
Ozone water has a very short half life, so it is best if you drink it right after you make it in order for it to be as effective as possible. There really is no hard data on how much Ozone water a patient can or cannot drink as of this writing, but it is widely believed that Ozone water is not harmful. Make sure not to use a plastic cup to drink Ozone water as ozone can react to some materials. Glass or stainless steel cups are best. There are people who like it strong and others who like it very weak, so the titration part of Ozone water is critical to find what works best for each patient.</p>
<p>OZONE WATER COMPLICATIONS/THINGS TO LOOKOUT FOR:
Some patients can experience headaches or scratchy throat after drinking ozone water, if this happens to your patient, lower the Gamma and time by half for their next treatment or discontinue.
&quot;</p>
<h3 id="typical-duration-of-treatment-23"><a class="header-anchor" href="#typical-duration-of-treatment-23">#</a> Typical duration of treatment:</h3>
<p>About 5-8 days, according to one clinical trial, announced by the Ozone Forum of India.</p>
<h3 id="outcome-23"><a class="header-anchor" href="#outcome-23">#</a> Outcome:</h3>
<p>&quot;Reportedly, relatively rapid recovery.</p>
<p>Indian Express: Ozone therapy shows 77% success in Covid care in first five days: Study; Dec 14, 2020
“The use of ozone therapy in mild to moderate cases has shown 77 per cent success rate in the first five days,” Dr Mili Shah, vice-president, Ozone Forum of India, said at a press conference.</p>
<p>BioSpectrum reported: &quot;&quot;A total of 500 patients (including across various comorbid conditions) out of which 77% have recovered within 5 days and the rest recovered by the 8th day as per clinical trials conducted in mid-2020.&quot;&quot;&quot;</p>
<h3 id="significant-side-effects-23"><a class="header-anchor" href="#significant-side-effects-23">#</a> Significant side effects:</h3>
<p>No significant side effects reported in therapeutic dosages.</p>
<h3 id="recommended-quantity-for-stocking-23"><a class="header-anchor" href="#recommended-quantity-for-stocking-23">#</a> Recommended quantity for stocking:</h3>
<p>NA</p>
<h3 id="price-23"><a class="header-anchor" href="#price-23">#</a> Price:</h3>
<p>Inexpensive therapy</p>
<h3 id="suggested-suppliers-23"><a class="header-anchor" href="#suggested-suppliers-23">#</a> Suggested suppliers:</h3>
<p>&quot;Ozone Forum of India:
Bisleri Charitable Trust, c/o Bisleri International Pvt. Ltd.,
3rd Flr, Bisleri Tower, Western Express Highway,
Andheri (E) Mumbai 400 099, Maharashtra, INDIA.
022.6144 7000 (Board)/ 6144 7093 (Ozone Center) / info@ozoneforumofindia.com</p>
<p>Dr Mili Shah, President, Ozone Forum of India, Trustee, Bisleri Charitable Trust, says “In this crisis time of fighting the pandemic and its surge again, we need to integrate wisdom of conventional medicine with natural healing modalities. We are happy to announce that ozone therapy works well on COVID 19 patients as both our trial reports showed and most importantly it is also very cost effective. Its antimicrobial elements help patients to recover fast and also control the recurrence. Ozone Forum of India has been researching in this therapy since last 18 years and we are only pleased to share our insights to support this pandemic and for the interest of the larger humanity. Our objective is to reach out to more doctors and patients to be aware of Ozone Therapy and till now we have touched over 2400 doctors in the country who successfully believe and use this therapy.”&quot;</p>
<h3 id="further-references-23"><a class="header-anchor" href="#further-references-23">#</a> Further references:</h3>
<p>&quot;Drs.Ozone- A comprehensive website about oral and parenteral Ozone therapy</p>
<p>Ozone therapies group and frontiers in Ozone</p>
<p>Potential Role of Oxygen-Ozone Therapy in Treatment of COVID-19 Pneumonia; Alberto Hernandez et al.; American Journal of Case Reports; Aug 17, 2020
CASE REPORT: [The authors] report rapidly improved hypoxia with associated decreases in inflammatory markers and D-dimer immediately after 1-4 sessions of oxygen-ozone (O2-O3) therapy in 3 patients with COVID-19 pneumonia who presented with respiratory failure. Invasive mechanical ventilation was not required in these 3 patients. All patients were discharged home on days 3-4 after O2-O3 therapy.</p>
<p>BioSpectrum- the business of Bio &amp; Health Sciences: Ozone therapy making greater impact in controlling COVID-19; Mar 24, 2021-
Ozone Forum of India, a brainchild of Bisleri Charitable Trust by Bisleri International has announced a revolutionary cure towards COVID 19 and post COVID 19 care helping patients to recover faster. A total of 500 patients (including across various comorbid conditions) out of which 77% have recovered within 5 days and the rest recovered by the 8th day as per clinical trials conducted in mid-2020. Ozone therapy has a greater impact in controlling the infection as patient suffers from various situations such as circulatory disorders which may lead to clotting or thrombosis, headaches, lung infection, body pain &amp; breathlessness situations. Doctors recommended that ozone therapy should be taken upto 15 sessions after COVID-19.</p>
<p>Ozone therapy for the treatment of COVID-19 pneumonia: A scoping review; Morteza Izadi; International Immunopharmacology; Mar, 2021-
Although inhaling ozone (O3) gas has been shown to be toxic to the lungs, recent evidence suggests that its administration via appropriate routes and at small doses can paradoxically induce an adaptive reaction capable of decreasing the endogenous oxidative stress. Ozone therapy is recommended to counter the disruptive effects of severe COVID-19 on lung tissues, especially if administered in early stages of the disease, thereby preventing the progression to ARDS. [Therefore] Ozone therapy might be an excellent option as a complementary treatment for Covid-19.</p>
<p>Ozone therapy in COVID-19: A narrative review; Francesco Cattel et al.; Virus Research; Oct 25, 2020</p>
<p>Ozone therapy may be an option for COVID-19 patients; M. Sahin et al.; European Review for Medical and Pharmacological Sciences; 2021</p>
<p>A Plausible &quot;&quot;Penny&quot;&quot; Costing Effective Treatment for Corona Virus - Ozone Therapy; Robert Jay Rowen, MD, and Howard Robins, DPM; Journal of Infectious Diseases and Epidemiology; 2020-
Many viruses require reduced sulfhydryl groups for cell fusion and entry. Corona viruses, including SARS-CoV-2 (the cause of the condition now named coronavirus disease 2019 or COVID-19), are rich in cysteine, which residues must be intact for viral activity. Sulfhydryl groups are vulnerable to oxidation. Ozone therapy, a very inexpensive and safe modality may safely exploit this critical vulnerability in many viruses, inclusive of SARS-CoV-2.</p>
<p>Vitalitymagazine.com: COVID-19 How Can I Cure Thee? Let Me Count the Ways; Dr. Thomas E. Levy, MD, JD; Dec 3, 2020</p>
<p>&quot;</p>
<p>[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:
[]:</p>
<p>[94]
[95]:
[96]:
[97]:
[98]:
[99]:
[100]:</p>
<p>[270]:</p>
<p>[93]
[94]
[95]:
[96]:
[97]:
[98]:
[99]:
[100]:</p>
<p>[270]:</p>
</ContentSlotsDistributor>
"},null]}