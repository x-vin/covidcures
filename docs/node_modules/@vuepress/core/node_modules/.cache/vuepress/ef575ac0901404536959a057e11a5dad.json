{"remainingRequest":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/x/repos/covidcures/docs/src/homeopathic.md?vue&type=template&id=7e74fa77&","dependencies":[{"path":"/Users/x/repos/covidcures/docs/src/homeopathic.md","mtime":1640947850723},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640777136396},{"path":"/Users/x/repos/covidcures/docs/node_modules/cache-loader/dist/cjs.js","mtime":1640777136168},{"path":"/Users/x/repos/covidcures/docs/node_modules/vue-loader/lib/index.js","mtime":1640777136291},{"path":"/Users/x/repos/covidcures/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1640777135896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJob21lb3BhdGhpYy10cmVhdG1lbnRzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2hvbWVvcGF0aGljLXRyZWF0bWVudHMiPiM8L2E+IEhvbWVvcGF0aGljIFRyZWF0bWVudHM8L2gxPgo8cD48c3Ryb25nPkRJU0NMQUlNRVI8L3N0cm9uZz46IFRoaXMgaW5mb3JtYXRpb24gaXMgZm9yIGVkdWNhdGlvbmFsIHB1cnBvc2VzIG9ubHkuIEl0IGlzIG5vdCBpbnRlbmRlZCB0byBzZXJ2ZSBhcyBhIHN1YnN0aXR1dGUgZm9yIGRpYWdub3NpcywgdHJlYXRtZW50LCBvciBhZHZpY2UgZnJvbSBhIHF1YWxpZmllZCwgbGljZW5zZWQgbWVkaWNhbCBwcm9mZXNzaW9uYWwuIEFueSB0cmVhdG1lbnQgeW91IHVuZGVydGFrZSBzaG91bGQgYmUgZGlzY3Vzc2VkIHdpdGggeW91ciBwaHlzaWNpYW4gb3Igb3RoZXIgbGljZW5zZWQgbWVkaWNhbCBwcm9mZXNzaW9uYWwuPC9wPgo8cD48c3Ryb25nPk5PVEU8L3N0cm9uZz46IFRoZSBpbmZvcm1hdGlvbiBpbiB0aGlzIHRhYnVsYXRpb24gYWJvdXQgZG9zYWdlcyBpcyBwcmltYXJpbHkgZm9yIGFkdWx0cy4gVGhlIGRvc2FnZXMgZm9yIGNoaWxkcmVuIGhhdmUgYmVlbiBtZW50aW9uZWQgaW4gdGhlIGNhc2Ugb2YgYSBmZXcgb3Zlci10aGUtY291bnRlciByZW1lZGllcyB3aGVyZSB0aGUgZGF0YSB3YXMgYXZhaWxhYmxlLiZxdW90OzwvcD4KPGgyIGlkPSJfMS1hcnNlbmljdW0tYWxidW0tMzBjLW9yLWFyc2FsYi13aXRoLXBvdGVuY3ktMzAtb3ItMjAwLWMtZm9yLW1vcmUtc2V2ZXJlLWNhc2VzLWNhbXBob3ItMS1tIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLWFyc2VuaWN1bS1hbGJ1bS0zMGMtb3ItYXJzYWxiLXdpdGgtcG90ZW5jeS0zMC1vci0yMDAtYy1mb3ItbW9yZS1zZXZlcmUtY2FzZXMtY2FtcGhvci0xLW0iPiM8L2E+IDEuIEFyc2VuaWN1bSBhbGJ1bSAzMEMgKG9yIEFyc2FsYiB3aXRoIHBvdGVuY3kgMzApLCBvciAyMDAgQyBmb3IgbW9yZSBzZXZlcmUgY2FzZXM7IENhbXBob3IgMSBNPC9oMj4KPGgzIGlkPSJvYmplY3RpdmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjb2JqZWN0aXZlIj4jPC9hPiBPYmplY3RpdmU6PC9oMz4KPHA+UHJvcGh5bGFjdGljIGFzIHdlbGwgYXMgY3VyYXRpdmU8L3A+CjxoMyBpZD0ic3lzdGVtIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N5c3RlbSI+IzwvYT4gU3lzdGVtOjwvaDM+CjxwPkhvbWVvcGF0aGljPC9wPgo8aDMgaWQ9ImNhbi1iZS11c2VkLWFsb25nc2lkZS1vdGhlci1hbGxvcGF0aGljLXRyZWF0bWVudHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2FuLWJlLXVzZWQtYWxvbmdzaWRlLW90aGVyLWFsbG9wYXRoaWMtdHJlYXRtZW50cyI+IzwvYT4gQ2FuIGJlIHVzZWQgYWxvbmdzaWRlIG90aGVyIGFsbG9wYXRoaWMgdHJlYXRtZW50czo8L2gzPgo8cD5ZZXMsIHdpdGggdGhlIGNhdmVhdCB0aGF0IHRoZSBwYXRpZW50IGV4cGVyaWVuY2VzIG5vIGRpc2NvbWZvcnQgaW4gZG9pbmcgc28uPC9wPgo8aDMgaWQ9InN0YXR1cy1vZi1hdXRob3Jpc2F0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXR1cy1vZi1hdXRob3Jpc2F0aW9uIj4jPC9hPiBTdGF0dXMgb2YgYXV0aG9yaXNhdGlvbjo8L2gzPgo8cD5Ib21lb3BhdGhpYyB0cmVhdG1lbnQgZm9yIENvdmlkLCBBcnNlbmljdW0gQWxidW0sIHJlcG9ydGVkIHRvIGJlIGF1dGhvcmlzZWQgYnkgdGhlIEluZGlhbiBTdXByZW1lIENvdXJ0IGluIE1hcmNoLCAyMDIwLiBCb3RoIENhYW1waG9yIDEgTSBhbmQgQXJzYWxiIGhhdmUgYmVlbiBhcHByb3ZlZCBmb3IgdXNlIGJ5IHRoZSBNaW5pc3RyeSBvZiBBeXVzaC4gTm8gc2NpZW50aWZpYyBldmlkZW5jZSAoZnJvbSBSQ1QgdHJpYWxzKSBpcyBzYWlkIHRvIGJlIGF2YWlsYWJsZSBidXQgaXQgaXMgd2VsbC1rbm93biBhbW91bmcgY29tbXVuaXRpZXMgdGhhdCB1c2UgdGhlc2UgbWVkaWNhdGlvbnMgZm9yIHByb3BoeWxheGluZyB0aGF0IHRoZXkgYXJlIGV4dHJlbWVseSBlZmZlY3RpdmUuIFRoZXJlIGV4aXN0cyBhIGNvbnNpZGVyYWJsZSBib2R5IG9mIGNyZWRpYmxlIHJlcG9ydGVkIGV2aWRlbmNlIGZyb20gbGFyZ2UgY29tbXVuaXRpZXMgd2hvIGhhdmUgdXNlZCBib3RoIHRoZXNlIHRyZWF0bWVudHMsIGFuZCBlc3BlY2lhbGx5IEFyc2FsYiwgYXMgcHJvcGh5bGF4aXMgd2l0aCBncmVhdCBzdWNjZXNzLiBQZXJtaXR0ZWQgdG8gYmUgdXNlZCBpbiBtYWluc3RyZWFtIHRyZWF0bWVudCBvbmx5IGFsb25nc2lkZSB0aGUgV0hPLXByb3RvY29sLCBhbmQgdGhlcmVmb3JlIHRoZSBvdXRjb21lIG9mIHRoaXMgdHJlYXRtZW50IGNhbm5vdCBiZSBrbm93biBldmVuIGZyb20gYXZhaWxhYmxlIGRhdGEgaW4gd2lkZXNwcmVhZCBjbGluaWNhbCB0cmlhbHMgd2l0aGluIG1haW5zdHJlYW0gaGVhbHRoY2FyZS48L3A+CjxwPkhvd2V2ZXIsIG1haW5zdHJlYW0gbWVkaWNpbmUgYW5kIG1lZGlhIGhhdmUgbm90IGNvbWUgcm91bmQgdG8gYWNrbm93bGVkZ2luZyB0aGUgZWZmaWNhY3kgb2YgaG9tZW9wYXRoaWMgbWVkaWNpbmUsIGluIHRoZSBmYWNlIG9mIHRyZW1lbmRvdXMgZW1waXJpY2FsIGV2aWRlbmNlIGZyb20gdGhlIGNvbW11bml0aWVzIHRoYXQgdXNlIHRoZW0uPC9wPgo8aDMgaWQ9InByb3RvY29sLWFuZC10cmVhdG1lbnQtYXBwcm9hY2giPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJvdG9jb2wtYW5kLXRyZWF0bWVudC1hcHByb2FjaCI+IzwvYT4gUHJvdG9jb2wgYW5kIHRyZWF0bWVudCBhcHByb2FjaDo8L2gzPgo8cD5Ib21lb3BhdGhzIGxpa2UgRHIuIE1kIEFsLUVtcmFuIEFsaSBvZiBHb3Zlcm5tZW50IE1lZGljYWwgQ29sbGVnZSBIb3NwaXRhbCwgQmFuZ2xhZGVzaCwgcmV2ZWFsIHRoYXQgdGhlcmUgYXJlIG1hbnkgbWVkaWNpbmVzIGluIGhvbW9lb3BhdGh5LCB3aGljaCBjYW4gYmUgdXNlZCB0byB0cmVhdCBDb3ZpZC0xOSBwYXRpZW50cyBiYXNlZCBvbiBzaW1pbGFyaXR5IG9mIHN5bXB0b21zLiDigJxPZiB0aGUgbWVkaWNpbmVzLCBSaHVzIFRveCwgQnJ5b25pYSBBbGJhLCBBbnRpbW9uaXVtIFRhcnRhcmljdW0gb3IgQW50aW0gVGFydCBhbmQgQ2FtcGhvciBhcmUgY29tbW9uIG1lZGljaW5lcyB0byB0cmVhdCBwZW9wbGUgaW5mZWN0ZWQgd2l0aCB0aGUgQ292aWQtMTkgZGlzZWFzZSzigJ0gc2FpZCBEci4gQWwtRW1yYW4gQWxpLjwvcD4KPHA+PHN0cm9uZz5Tb21lIHByaW5jaXBsZXMgb2YgaG9tZW9wYXRoaWMgdHJlYXRtZW50LCBhcyBhZHZpc2VkIGJ5IGEgcHJhY3Rpc2luZyBob21lb3BhdGg6PC9zdHJvbmc+CkhvbWVvcGF0aHMgYWRtaW5pc3RlciBzeW1wdG9tYXRpYyB0cmVhdG1lbnQgdGhhdCBpcyBub25ldGhlbGVzcyB0YWlsb3JlZCB0byB0aGUgcGh5c2lvbG9naWNhbCBjb250ZXh0IG9mIHRoZSBpbmRpdmlkdWFsIHBhdGllbnQuIFRodXMgaW4gaG9tZW9wYXRoeSwgdGhlIHNhbWUgc3ltcHRvbXMgbWF5IG5vdCBiZSBwcmVzY3JpYmVkIHRoZSBzYW1lIHJlbWVkeSBpbiBkaWZmZXJlbnQgcGF0aWVudHMuIEluIHRoZSBjYXNlIG9mIHRoZSB3aWRlbHkgcHJlc2NyaWJlZCBhbmQgcHJvdmVuIHByb3BoeWxhY3RpYyBBcnNhbGIgMzAgQywgcGVyaGFwcyB0aGUgdW5kZXJseWluZyByZWFzb24gZm9yIGl0cyBlZmZpY2FjeSBpcyBkdWUgdG8gYSBjb21tb24gZ2xvYmFsIGNvbnRleHQgY3JlYXRlZCBieSB0aGUgcGFuZGVtaWMuIEFyc2FsYiAzMCBpcyBhIHByZXZlbnRhdGl2ZSwgbm90IGN1cmF0aXZlLCBhbmQgaXMgbWVhbnQgdG8gYWRkcmVzcyB0aGUgY29tbW9uIHN5bXB0b21zIG9mIGNvbGQsIGZldmVyLCBzbmVlemluZyBhbmQgb3RoZXIgYWlsbWVudCBkdWUgdG8gY29yb25hdmlydXNlcy4gQXJzYWxiIDMwIGFsc28gZW5nYWdlcyB0aGUgcGFyYXN5bXBhdGhldGljIG5lcnZvdXMgc3lzdGVtIGFuZCBjYWxtcyBhbnhpZXR5IG9yIGZlYXIuPC9wPgo8cD48c3Ryb25nPlByb3BoeWxhY3RpYyBwcm90b2NvbHM6PC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPkFyc2VuaWN1bSBBbGJ1bSAzMCBDOjwvc3Ryb25nPgpUaGVyZSBhcmUgbXVsdGlwbGUsIHNsaWdodGx5IGRpZmZlcmVudCBwcm90b2NvbHMuIE9uZSBvZiB0aGVtLCBmb3IgcHJvcGh5bGFjdGljIHRyZWF0bWVudCwgcmVjb21tZW5kcyA0IHBpbGxzIDxzdHJvbmc+KGZvciBhZHVsdHMsIDIgcGlsbHMgZm9yIGNoaWxkcmVuKTwvc3Ryb25nPiBmb3IgNCBkYXlzIGV2ZXJ5IDMtNCB3ZWVrcyBlbXB0eSBzdG9tYWNoIGJlZm9yZSBicnVzaGluZyB0ZWV0aCwgYWZ0ZXIgcmluc2luZyBtb3V0aC48L3A+CjxwPkFsdGVybmF0aXZlbHksIGNhbiBoYXZlIDMtNCBkcm9wcyBmb3IgYWR1bHRzIDxzdHJvbmc+KDEgZHJvcCBmb3IgY2hpbGRyZW4pPC9zdHJvbmc+IG9mIGxpcXVpZCBBcnNhbGIgKHBvdGVuY3kgMzApIGRpbHV0ZWQgaW4gMjAtMzAgbWwgKDItMyB0YWJsZXNwb29ucykgb2Ygd2F0ZXIsIGluc3RlYWQgb2YgdGhlIHBpbGxzLjwvcD4KPHA+PHN0cm9uZz5Db25zdW1lIG5vIGZvb2QsIHRlYSwgY29mZmVlIG9yIGV2ZW4gd2F0ZXIgZm9yIHRoZSBuZXh0IDEgaG91ci4gUmVwZWF0IGV2ZXJ5IDMtNCB3ZWVrcy48L3N0cm9uZz48L3A+CjxwPjxzdHJvbmc+Q2FtcGhvciAxIE06PC9zdHJvbmc+ClRoZSBkb3NhZ2Ugb2YgQ2FtcGhvciAxIE0gZm9yIGFkdWx0cyBpcyBmb3VyIHBpbGxzIGhhbGYgYW4gaG91ciBhZnRlciBtb3JuaW5nIGJyZWFrZmFzdCwgZm91ciBwaWxscyBoYWxmIGFuIGhvdXIgYWZ0ZXIgbHVuY2ggYW5kIGZvdXIgcGlsbHMgaGFsZiBhbiBob3VyIGFmdGVyIGRpbm5lci4gVGhlIGRvc2FnZSBpcyBoYWx2ZWQgZm9yIGNoaWxkcmVuLiBUaGUgcmVnaW1lbiBoYXMgdG8gYmUgZm9sbG93ZWQgZm9yIHRocmVlIGRheXMuPC9wPgo8cD48c3Ryb25nPlRoZXJlIGFyZSBubyBlc3BlY2lhbCBkaWV0YXJ5IHByZWNhdXRpb25zIHRvIGJlIGZvbGxvd2VkIGZvciBBcnNhbGIgcHJvcGh5bGF4aW5nLCBleGNlcHQgdG8gYWJzdGFpbiBmcm9tIGNvZmZlZSBhbmQgdGVhLCBhbmQgaWYgcG9zc2libGUsIG5vbnZlZ2V0YXJpYW4gZm9vZC4gV2hpbGUgcHJvcGh5bGF4aW5nIHdpdGggQ2FtcGhvciAxIE0sIG9uZSBzaG91bGQgYXZvaWQgY29uc3VtcHRpb24gb2Ygb25pb24sIGdhcmxpYyBhbmQgaGluZy4gSXQgaXMgYWxzbyBhZHZpc2FibGUgdG8gbm90IGNvbnN1bWUgYW55dGhpbmcgZm9yIGhhbGYgYW4gaG91ciBhZnRlciB0YWtpbmcgQ2FtcGhvciAxTS48L3N0cm9uZz48L3A+CjxoMyBpZD0idHlwaWNhbC1kdXJhdGlvbi1vZi10cmVhdG1lbnQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdHlwaWNhbC1kdXJhdGlvbi1vZi10cmVhdG1lbnQiPiM8L2E+IFR5cGljYWwgZHVyYXRpb24gb2YgdHJlYXRtZW50OjwvaDM+CjxwPlJlY29tbWVuZGVkIHRvIGJlIHVzZWQgY29udGludW91c2x5IGFzIHByb3BoeWxhY3RpYy48L3A+CjxoMyBpZD0ib3V0Y29tZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNvdXRjb21lIj4jPC9hPiBPdXRjb21lOjwvaDM+CjxwPkVtcGlyaWNhbCBldmlkZW5jZSBvZiBiZWluZyBoaWdobHkgZWZmZWN0aXZlLCBldmVuIGluIGhpZ2ggcmlzayBncm91cHMsIGFuZCBuZWFybHkgemVybyBtb3J0YWxpdHkgcmF0ZSBpbiBhIGNoYXJpdGFibGUgc2hlbHRlciBmb3IgZGVzdGl0dXRlIGFuZCBhaWxpbmcgZWxkZXJseSBwZW9wbGUsIGFtb25nIHdob20gYWJvdXQgNDAwIHdlcmUgYWZmZWN0ZWQuPC9wPgo8aDMgaWQ9InNpZ25pZmljYW50LXNpZGUtZWZmZWN0cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzaWduaWZpY2FudC1zaWRlLWVmZmVjdHMiPiM8L2E+IFNpZ25pZmljYW50IHNpZGUgZWZmZWN0czo8L2gzPgo8cD5XaWRlbHkgdXNlZCBieSB0aG9zZSB3aG8gc3Vic2NyaWJlIHRvIGhvbWVvcGF0aHkuIE5vIGRlY2xhcmVkIHNpZGUgZWZmZWN0cyBldmVuIHdpdGggcmVndWxhciB1c2U7IG5vIGRydWcgaW50ZXJhY3Rpb25zIHdpdGggb3RoZXIgbWVkaWNpbmVzLjwvcD4KPGgzIGlkPSJyZWNvbW1lbmRlZC1xdWFudGl0eS1mb3Itc3RvY2tpbmciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmVjb21tZW5kZWQtcXVhbnRpdHktZm9yLXN0b2NraW5nIj4jPC9hPiBSZWNvbW1lbmRlZCBxdWFudGl0eSBmb3Igc3RvY2tpbmc6PC9oMz4KPHA+VW5uZWNlc3NhcnkgdG8gc3RvY2sgYXMgdGhlIG1lZGljaW5lIGlzIGNvbW1vbmx5IGF2YWlsYWJsZSBpbiBsb2NhbCBob21lb3BhdGh5IHN0b3Jlcy48L3A+CjxoMyBpZD0icHJpY2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJpY2UiPiM8L2E+IFByaWNlOjwvaDM+CjxwPlZlcnkgaW5leHBlbnNpdmUsIElOUiA1MC02MCBmb3IgMTUgbWwgKGhhbGYtb3VuY2UpIGJvdHRsZSwgd2hpY2ggY2FuIGJlIHVzZWQgZm9yIHByb3BoeWxheGluZyBmb3Igc2V2ZXJhbCBtb250aHM8L3A+CjxoMyBpZD0ic3VnZ2VzdGVkLXN1cHBsaWVycyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdWdnZXN0ZWQtc3VwcGxpZXJzIj4jPC9hPiBTdWdnZXN0ZWQgc3VwcGxpZXJzOjwvaDM+CjxwPkxvY2FsIGhvbWVvcGF0aHkgc3RvcmVzIG9yIG9ubGluZS4gT25lIHJlY29tbWVuZGVkIGJyYW5kIGlzIFNCTCBBcnNlbmljdW0gQWxidW0gMzAgQ0ggZGlsdXRpb24sIGJvdHRsZSBvZiAzMCBtbCBkaWx1dGlvbiwgZm9yIElOUiA3Mi4gQ2FuIGJlIGJvdWdodCBvbmxpbmUsIGZvciBleGFtcGxlLCBhdCB3d3cuMW1nLmNvbS4gVGhlIFNCTCBicmFuZCBjYW4gYWxzbyBiZSBib3VnaHQgYXQgbG9jYWwgc3RvcmVzLjwvcD4KPGgzIGlkPSJmdXJ0aGVyLXJlZmVyZW5jZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZnVydGhlci1yZWZlcmVuY2VzIj4jPC9hPiBGdXJ0aGVyIHJlZmVyZW5jZXM6PC9oMz4KPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYXl1c2guZ292LmluL2RvY3MvaG9tZW9wYXRoeS1ndWlkZWxpbmVzLnBkZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+R3VpZGVsaW5lcyBmb3IgSG9tZW9wYXRoaWMgUHJhY3RpdGlvbmVycyBmb3IgQ09WSUQtMTk7IE1pbmlzdHJ5IG9mIEFZVVNILCBHb3Zlcm5tZW50IG9mIEluZGlhPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly95b3V0dS5iZS9nT1dlQmpVZlJqSSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+TWlsbGV0IC8gU2lydWRoYWFuaXlhIEFtYmFsaSAoc3Byb3V0ZWQgKyBmZXJtZW50ZWQgaGVhbHRoeSBwb3JyaWRnZSk8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwczovL3lvdXR1LmJlL2dPV2VCalVmUmpJIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5UaGVIZWFsdGhTaXRlLmNvbTogTWlsbGlvbnMgb2YgcGVvcGxlIGluIEluZGlhIGFyZSB0YWtpbmcgdGhpcyBob21lb3BhdGhpYyBkcnVnIHRvIHByZXZlbnQgQ09WSUQtMTkgaW5mZWN0aW9uOyBMb25namFtIERpbmVzaHdvcmk7IERlYyAxNywgMjAyMDxPdXRib3VuZExpbmsvPjwvYT4KVGhlIGdvdmVybm1lbnRzIG9mIEd1amFyYXQsIEtlcmFsYSwgT2Rpc2hhLCBUcmlwdXJhIGFuZCBhIGZldyBvdGhlciBzdGF0ZXMgYXJlIGRpc3RyaWJ1dGluZyBhIGhvbWVvcGF0aGljIGRydWcgdG8gcGVvcGxlIGZyZWUgb2YgY29zdCB0byBpbXByb3ZlIHRoZWlyIGltbXVuaXR5IHRvIGZpZ2h0IGNvcm9uYXZpcnVzLjwvcD4KPHA+SGFuZGJvb2sgRm9yIEhlYWx0aCwgYSBjb21waWxhdGlvbiBvZiB0cmllZCBhbmQgdGVzdGVkIGhvbWUgcmVtZWRpZXMgYnkgS2VyYWxhIG5hdHVyb3BhdGgsIEFsYmVydCBZLiBaYWNoYXJpYSAoSW5uZXIgRXhwYW5zaW9uIENvYWNoLCArOTEgODkyMTY5NzkyOCk8L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnRoZWhpbmR1YnVzaW5lc3NsaW5lLmNvbS9uZXdzL21pbmlzdHJ5LW9mLWF5dXNoLWlzc3Vlcy1hZHZpc29yeS1vbi11c2Utb2YtdHJhZGl0aW9uYWwtbWVkaWNpbmFsLXByYWN0aWNlcy9hcnRpY2xlMzA2OTAxMjguZWNlIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5UaGUgSGluZHUgQnVzaW5lc3NMaW5lOiBIb21vZW9wYXRoeSBwcmFjdGl0aW9uZXJzIGNsYWltIHRvIGhhdmUgaWRlbnRpZmllZCBtb3RoZXIgdGluY3R1cmVzIHRoYXQgY2FuIGFjdCBhZ2FpbnN0IGNvcm9uYXZpcnVzIGluZmVjdGlvbjsgUnV0YW0gVm9yYTsgSmFuIDMwLCAyMDIwPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+VGhlIGZvbGxvd2luZyBhcnRpY2xlIGluZGljYXRlcyB0aGF0IEJyeW9uaWEgKEFsYmEpIGFuZCBSaHVzIFRveCBhcmUgbmF0dXJhbCBob21lb3BhdGhpYyBtZWRpY2luZXMgcHJlc2NyaWJlZCBmb3IgZmV2ZXIgd2l0aCBleHRyZW1lIGJvZHkgYWNoZS4gT2YgdGhlc2UsIEJyeW9uaWEgaXMgcHJlc2NyaWJlZCB3aGVuIHRoZSBmZXZlciBhbmQgYm9keSBhY2hlIGFyZSBhY2NvbXBhbmllZCBieSBleHRyZW1lIGZhdGlndWUgYW5kIGxpc3RsZXNzbmVzcywgYSBoYXJkLCBkcnkgY291Z2ggYW5kIHNldmVyZSBoZWFkYWNoZS4gUmh1cyBUb3ggaXMgcHJlc2NyaWJlZCB3aGVuIHRoZSBmZXZlciBhbmQgYm9keSBhY2hlIGFyZSBhY2NvbXBhbmllZCBieSByZXN0bGVzc25lc3MuIEFyc2VuaWN1bSBBbGJ1bSBpcyBhIGNvbW1vbiByZW1lZHkgZm9yIG1hbGFyaWFsIGZldmVyLCBhY2NvbXBhbmllZCBieSBhbnhpZXR5Ogo8YSBocmVmPSJodHRwczovL3d3dy5kcmhvbWVvLmNvbS9mZXZlci9mbHUtdmlyYWwtZmV2ZXItYW5kLWhvbWVvcGF0aHktdHJlYXRtZW50LyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+ZHJob21lby5jb206IDcgQmVzdCBIb21lb3BhdGhpYyBNZWRpY2luZXMgZm9yIEZldmVyOyBEci4gVmlrYXMgU2hhcm1hLCBNRDxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmhlYWx0aGxpbmUuY29tL2hlYWx0aC9icnlvbmlhIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5oZWFsdGhsaW5lLmNvbTogV2hhdCBJcyBCcnlvbmlhIGFuZCBTaG91bGQgWW91IFVzZSBJdD8gW1B1cnBvcnRlZCBCZW5lZml0cywgYW5kIFBvdGVudGlhbCBTaWRlIEVmZmVjdHNdOyBLYXRocnluIFdhdHNvbiwgTWVkaWNhbGx5IHJldmlld2VkIGJ5IE5hdGFsaWUgQnV0bGVyLCBSRCwgTEQ7IEphbiAxNywgMjAyMDxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRvY3RvcnNoZWFsdGhwcmVzcy5jb20vZ2VuZXJhbC1oZWFsdGgtYXJ0aWNsZXMvaG9tZW9wYXRoaWMtcmVtZWRpZXMtY291Z2hzLWFuZC1jb2xkcy8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkRvY3RvcnMgSGVhbHRoIFByZXNzOiAxMCBIb21lb3BhdGhpYyBSZW1lZGllcyB0byBGaWdodCBDb3VnaHMgYW5kIENvbGRzOyBKb24gWWFuZWZmLCBDTlA7IE9jdCAxMiwgMjAxNTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmF5dXNoLmdvdi5pbi9kb2NzL2hvbWVvcGF0aHktZ3VpZGVsaW5lcy5wZGYiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkdVSURFTElORVMgZm9yIEhPTU9FT1BBVEhJQyBQUkFDVElUSU9ORVJTIGZvciBDT1ZJRCAxOTsgR292ZXJubWVudCBvZiBJbmRpYSwgTWluaXN0cnkgb2YgQVlVU0g8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwczovL3d3dy5zdHVkb2N1LmNvbS9pbi9kb2N1bWVudC9rYXJuYXRha2Etc3RhdGUtbGF3LXVuaXZlcnNpdHkvZW52aXJvbm1lbnRhbC1sYXcvY29yb25hLWhhbmRib29rLWp1bHkyMDIwLzEwMzg2MzAyIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5UaGUgYm9vayBDb3JvbmEtSGFuZGJvb2ssIGF2YWlsYWJsZSBhcyBhIGRvd25sb2FkYWJsZSBQREYsIGF0dHJpYnV0ZWQgdG8gaG9saXN0aWMgaGVhbHRoY2FyZSBhZHZvY2F0ZXMgYW5kIGZvb2Qgc2NpZW50aXN0cyBEcnMuIEtoYWRhciBWYWxpIGFuZCBTYXJhbGEgS2hhZGFyLCBwcmVwYXJlZCBieSB0aGUgZ3JvdXAgRHIuIEtoYWRhciBWYWxpIExpZmVzdHlsZSwgYmFzZWQgb24gdGhlIHZpZGVvIHByZXNlbnRhdGlvbnMgb2YgRHIuIEtoYWRhciBWYWxpLCBrbm93biBhcyB0aGUgTWlsbGV0IE1hbiBvZiBJbmRpYTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzItcS1hc3BpZG9zcGVybWEtbW90aGVyLXRpbmN0dXJlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLXEtYXNwaWRvc3Blcm1hLW1vdGhlci10aW5jdHVyZSI+IzwvYT4gMi4gPGEgaHJlZj0iaHR0cHM6Ly93d3cucmVzZWFyY2hnYXRlLm5ldC9wdWJsaWNhdGlvbi8zNDEzNDI4MTJfQnJvbmNoaWFsX0FzdGhtYV9BbmRfQXNwaWRvc3Blcm1hLV9BX1N0dWR5X0luXzUwX1BhdGllbnRzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5RIEFzcGlkb3NwZXJtYTxPdXRib3VuZExpbmsvPjwvYT4gTW90aGVyIFRpbmN0dXJlPC9oMj4KPGgzIGlkPSJvYmplY3RpdmUtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNvYmplY3RpdmUtMiI+IzwvYT4gT2JqZWN0aXZlOjwvaDM+CjxwPkluY3JlYXNlIGJsb29kIG94eWdlbiBsZXZlbHM8L3A+CjxoMyBpZD0ic3lzdGVtLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3lzdGVtLTIiPiM8L2E+IFN5c3RlbTo8L2gzPgo8cD5Ib21lb3BhdGh5PC9wPgo8aDMgaWQ9ImNhbi1iZS11c2VkLWFsb25nc2lkZS1vdGhlci1hbGxvcGF0aGljLXRyZWF0bWVudHMtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjYW4tYmUtdXNlZC1hbG9uZ3NpZGUtb3RoZXItYWxsb3BhdGhpYy10cmVhdG1lbnRzLTIiPiM8L2E+IENhbiBiZSB1c2VkIGFsb25nc2lkZSBvdGhlciBhbGxvcGF0aGljIHRyZWF0bWVudHM6PC9oMz4KPHA+UHJlc3VtYWJseTwvcD4KPGgzIGlkPSJzdGF0dXMtb2YtYXV0aG9yaXNhdGlvbi0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXR1cy1vZi1hdXRob3Jpc2F0aW9uLTIiPiM8L2E+IFN0YXR1cyBvZiBhdXRob3Jpc2F0aW9uOjwvaDM+CjxwPkNvbnZlbnRpb25hbCBob21lb3BhdGh5IGRydWcsIHJlY29tbWVuZGVkIGJ5IHBoeXNpY2lhbnM8L3A+CjxoMyBpZD0icHJvdG9jb2wtYW5kLXRyZWF0bWVudC1hcHByb2FjaC0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Byb3RvY29sLWFuZC10cmVhdG1lbnQtYXBwcm9hY2gtMiI+IzwvYT4gUHJvdG9jb2wgYW5kIHRyZWF0bWVudCBhcHByb2FjaDo8L2gzPgo8cD48c3Ryb25nPldoZW4gb3h5Z2VuIGxldmVsIGZhbGxzLCBkcmluayBhIHNvbHV0aW9uIG9mIDIwIGRyb3BzIG9mIEFzcGlkb3NwZXJtYSBRIGluIDEvNCB0byAxIGN1cCBvZiB3YXRlciwgYW5kIG94eWdlbiBsZXZlbCBpbiB0aGUgYmxvb2Qgd291bGQgcmlzZSBpbW1lZGlhdGVseS4gQ291bGQgYmUgZHJ1bmsgIGFib3V0IHRocmVlIHRpbWVzIGEgZGF5IHRvIG1haW50YWluIG94eWdlbiBsZXZlbHMuPC9zdHJvbmc+PC9wPgo8cD5Bc3BpZG9zcGVybWEgaXMgdmVyeSB3ZWxsIGluZGljYXRlZCBmb3IgYXN0aG1hIGFuZCBjb25kaXRpb25zIG9mIHRoZSBsb3dlciByZXNwaXJhdG9yeSB0cmFjdC4gRG9jdG9ycyBhbHNvIHJlY29tbWVuZCBpdCB0byBsb29zZW4gY2hlc3QgY29uZ2VzdGlvbiBhbmQgYXMgYSByZXNwaXJhdG9yeSB0cmFjdCBzdGltdWxhbnQ8L3A+CjxwPjxzdHJvbmc+VGhlIG1lZGljaW5lIGlzIHNvdXJjZWQgZnJvbSBRdWVicmFjaG88L3N0cm9uZz4sIGFuIGV2ZXJncmVlbiB0cmVlIG5hdGl2ZSB0byBTb3V0aCBBbWVyaWNhIHRoYXQgZ3Jvd3MgdXAgdG8gMzAgbWV0ZXJzLjwvcD4KPHA+QXNwaWRvc3Blcm1hIFEgLSBpcyBvbmUgb2YgdGhlIGJlc3QgcmVtZWRpZXMgZm9yIENPUEQgKENocm9uaWMgb2JzdHJ1Y3RpdmUgcHVsbW9uYXJ5IGRpc2Vhc2UsIGEgY2hyb25pYyBpbmZsYW1tYXRvcnkgbHVuZyBkaXNlYXNlKSBhbmQgaXQgaXMgY29uc2lkZXJlZCBhIHRvbmljIGZvciBsdW5ncy4gQXNwaWRvc3Blcm1hIHJlbW92ZXMgdGVtcG9yYXJ5IG9ic3RydWN0aW9uIHRvIHRoZSBveGlkYXRpb24gb2YgYmxvb2QgYnkgc3RpbXVsYXRpbmcgcmVzcGlyYXRvcnkgY2VudGVycy4gQW5vdGhlciBndWlkaW5nIHN5bXB0b20gaXMgd2FudCBvZiBicmVhdGggZHVyaW5nIGV4ZXJ0aW9uPC9wPgo8cD5Bc3BpZG9zcGVybWEgaXMgY29uc2lkZXJlZCBhcyB0aGUgZGlnaXRhbGlzIG9mIGx1bmdzLiBSZW1vdmVzIHRlbXBvcmFyeSBvYnN0cnVjdGlvbiB0byB0aGUgb3hpZGF0aW9uIG9mIHRoZSBibG9vZCBieSBzdGltdWxhdGluZyByZXNwaXJhdG9yeSBjZW50ZXJzLCBpbmNyZWFzaW5nIG94aWRhdGlvbiBhbmQgZXhjcmV0aW9uIG9mIGNhcmJvbmljIGFjaWQuIEl0IGlzIHZlcnkgdXNlZnVsIGZvciBjYXJkaWFjIGFzdGhtYS48L3A+CjxoMyBpZD0idHlwaWNhbC1kdXJhdGlvbi1vZi10cmVhdG1lbnQtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN0eXBpY2FsLWR1cmF0aW9uLW9mLXRyZWF0bWVudC0yIj4jPC9hPiBUeXBpY2FsIGR1cmF0aW9uIG9mIHRyZWF0bWVudDo8L2gzPgo8cD48c3Ryb25nPlZBQ0FOVDwvc3Ryb25nPjwvcD4KPGgzIGlkPSJvdXRjb21lLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjb3V0Y29tZS0yIj4jPC9hPiBPdXRjb21lOjwvaDM+CjxwPkluY3JlYXNlZCBibG9vZCBveHlnZW4gbGV2ZWxzPC9wPgo8aDMgaWQ9InNpZ25pZmljYW50LXNpZGUtZWZmZWN0cy0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NpZ25pZmljYW50LXNpZGUtZWZmZWN0cy0yIj4jPC9hPiBTaWduaWZpY2FudCBzaWRlIGVmZmVjdHM6PC9oMz4KPHA+Tm9uZSBrbm93bi4gSG93ZXZlciBpdCBpcyByZWNvbW1lbmRlZCB0byB1c2UgdGhlIG1lZGljYXRpb24gdW5kZXIgdGhlIGd1aWRhbmNlIG9mIGEgY29tcGV0ZW50IGhvbWVvcGF0aC48L3A+CjxoMyBpZD0icmVjb21tZW5kZWQtcXVhbnRpdHktZm9yLXN0b2NraW5nLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmVjb21tZW5kZWQtcXVhbnRpdHktZm9yLXN0b2NraW5nLTIiPiM8L2E+IFJlY29tbWVuZGVkIHF1YW50aXR5IGZvciBzdG9ja2luZzo8L2gzPgo8cD48c3Ryb25nPlZBQ0FOVDwvc3Ryb25nPjwvcD4KPGgzIGlkPSJwcmljZS0yIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3ByaWNlLTIiPiM8L2E+IFByaWNlOjwvaDM+CjxwPlJzLiA5MC0yMDAgb25saW5lPC9wPgo8aDMgaWQ9InN1Z2dlc3RlZC1zdXBwbGllcnMtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdWdnZXN0ZWQtc3VwcGxpZXJzLTIiPiM8L2E+IFN1Z2dlc3RlZCBzdXBwbGllcnM6PC9oMz4KPHA+PGEgaHJlZj0iaHR0cDovL2hvbWVvbWFydC5jb20vIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5ob21lb21hcnQuY29tOiBBc3BpZG9zcGVybWEgUXVlYnJhY2hvIEhvbWVvcGF0aHkgTW90aGVyIFRpbmN0dXJlIFE8T3V0Ym91bmRMaW5rLz48L2E+IChJTlIgMzEwKTwvcD4KPGgzIGlkPSJmdXJ0aGVyLXJlZmVyZW5jZXMtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNmdXJ0aGVyLXJlZmVyZW5jZXMtMiI+IzwvYT4gRnVydGhlciByZWZlcmVuY2VzOjwvaDM+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByYWN0by5jb20vaGVhbHRoZmVlZC9ob21lb3BhdGhpYy1yZW1lZGllcy1mb3ItYXN0aG1hLTI2ODkzL3Bvc3QiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnByYWN0by5jb206IEhvbWVvcGF0aGljIFJlbWVkaWVzIGZvciBBc3RobWE7IERyLiBKYWdhdCBTaGFoPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9ob21lb21hcnQuY29tL3Byb2R1Y3RzL2FzcGlkb3NwZXJtYS1xdWVicmFjaG8tbW90aGVyLXRpbmN0dXJlIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5ob21lb21hcnQuY29tOiBBc3BpZG9zcGVybWEgUXVlYnJhY2hvIEhvbWVvcGF0aHkgTW90aGVyIFRpbmN0dXJlIFE8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwczovL3d3dy5yZXNlYXJjaGdhdGUubmV0L3B1YmxpY2F0aW9uLzM0MTM0MjgxMl9Ccm9uY2hpYWxfQXN0aG1hX0FuZF9Bc3BpZG9zcGVybWEtX0FfU3R1ZHlfSW5fNTBfUGF0aWVudHMiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnJlc2VhcmNoZ2F0ZS5uZXQ6IEJyb25jaGlhbCBBc3RobWEgQW5kIEFzcGlkb3NwZXJtYS0gQSBTdHVkeSBJbiA1MCBQYXRpZW50czsgU3Vrcml0aSBldCBhbC47IE1heSwgMjAyMDxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnNhcmthcml0ZWwuY29tL2FzcGlkb3NwZXJtYS1lZmZlY3RpdmUtYnV0LW5vdC1hLXN1YnN0aXR1dGUtb2Ytb3h5Z2VuLXNheXMtZHItYS1rLWd1cHRhLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+c2Fya2FyaXRlbC5jb206IEFzcGlkb3NwZXJtYSBFZmZlY3RpdmUgYnV0IE5vdCBhIFN1YnN0aXR1dGUgb2YgT3h5Z2VuIFNheXMgRHIuQS5LLkd1cHRhOyBBbWV5YSBTYXRoYXllOyBBcHJpbCAyOSwgMjAyMTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxoMiBpZD0iXzMtZHIta2hhZGFyLXZhbGktcy1jb3ZpZC0xOS10cmVhdG1lbnQtcHJvdG9jb2wiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzMtZHIta2hhZGFyLXZhbGktcy1jb3ZpZC0xOS10cmVhdG1lbnQtcHJvdG9jb2wiPiM8L2E+IDMuIDxhIGhyZWY9Imh0dHBzOi8vbWFuYXZhdGEub3JnL2toYWRlcnZhbGkvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Eci4gS2hhZGFyIFZhbGk8T3V0Ym91bmRMaW5rLz48L2E+J3MgQ292aWQtMTkgdHJlYXRtZW50IHByb3RvY29sPC9oMj4KPGgzIGlkPSJvYmplY3RpdmUtMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNvYmplY3RpdmUtMyI+IzwvYT4gT2JqZWN0aXZlOjwvaDM+CjxwPlByb3BoeWxhY3RpYyB0cmVhdG1lbnQsIGN1cmF0aXZlIHRyZWF0bWVudCBmb3IgaW5mZWN0aW9uLCBwb3N0LWluZmVjdGlvbiB0cmVhdG1lbnQgZm9yIGxvbmcgQ292aWQsIHRyZWF0bWVudCB0byBwcmV2ZW50IHBvc3QtdmFjY2luZSBzeW1wdG9tczwvcD4KPGgzIGlkPSJzeXN0ZW0tMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzeXN0ZW0tMyI+IzwvYT4gU3lzdGVtOjwvaDM+CjxwPkhvbWVvcGF0aHk8L3A+CjxoMyBpZD0iY2FuLWJlLXVzZWQtYWxvbmdzaWRlLW90aGVyLWFsbG9wYXRoaWMtdHJlYXRtZW50cy0zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Nhbi1iZS11c2VkLWFsb25nc2lkZS1vdGhlci1hbGxvcGF0aGljLXRyZWF0bWVudHMtMyI+IzwvYT4gQ2FuIGJlIHVzZWQgYWxvbmdzaWRlIG90aGVyIGFsbG9wYXRoaWMgdHJlYXRtZW50czo8L2gzPgo8cD5JdCBpcyBiZXN0IG5vdCB0byBhZG9wdCBhIGhvbWVvcGF0aHkgdHJlYXRtZW50IHByb3RvY29sIHdoaWxlIGZvbGxvd2luZyBhbiBhbGxvcGF0aGljIHByb3RvY29sLCBleGNlcHQgaW4gdGhlIGNhc2Ugb2YgYWxsb3BhdGhpYyBtZWRpY2F0aW9ucyBmb3IgY2hyb25pYyBpbGxuZXNzZXMgbGlrZSBkaWFiZXRlcyBvciBoeXBlcnRlbnNpb24gSG93ZXZlciBpdCBtYXkgYmUgYWNjZXB0YWJsZSB0byBzd2l0Y2ggdG8gYSBob21lb3BhdGhpYyBwcm90b2NvbCBmcm9tIGFuIGFsbG9wYXRoaWMgdHJlYXRtZW50IHByb3RvY29sLCBzaG91bGQgYSBwYXRpZW50IHdpc2ggdG8gZG8gc28uPC9wPgo8aDMgaWQ9InN0YXR1cy1vZi1hdXRob3Jpc2F0aW9uLTMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RhdHVzLW9mLWF1dGhvcmlzYXRpb24tMyI+IzwvYT4gU3RhdHVzIG9mIGF1dGhvcmlzYXRpb246PC9oMz4KPHA+SG9tZW9wYXRoaWMgdHJlYXRtZW50IGZvciBDb3ZpZCB3YXMgcmVjb2duaXplZCBieSB0aGUgS2VyYWxhIGdvdmVybm1lbnQgaW4gdmFyaW91cyB3YXlzLCBhbmQgaG9tZW9wYXRoaWMgcHJvcGh5bGFjdGljIG1lZGljaW5lIGhhcyBiZWVuIG1hc3MtZGlzdHJpYnV0ZWQgdGhlcmUgc2luY2UgZWFybHkgaW4gdGhlIHBhbmRlbWljLiBUaGVyZSBpcyBzdWJzdGFudGlhbCBldmlkZW5jZSBmb3IgaG9tZW9wYXRoaWMgcHJvcGh5bGF4aW5nLgo8YSBocmVmPSJodHRwczovL3d3dy5ob21lb2Jvb2suY29tL2NvbWJhdGluZy1jb3ZpZC0xOS1rZXJhbGEtZ292dC1kaXN0cmlidXRlcy1ob21lb3BhdGh5LW1lZGljaW5lLXRvLTQ1LWxha2gtcGVvcGxlLWFjcm9zcy10aGUtc3RhdGUvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Db21iYXRpbmcgQ09WSUQtMTk6IEtlcmFsYSBnb3Zlcm5tZW50IGRpc3RyaWJ1dGVzIEhvbWVvcGF0aHkgbWVkaWNpbmUgdG8gNDUgbGFraCBwZW9wbGUgYWNyb3NzIHRoZSBTdGF0ZTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPlRoZSBwcm90b2NvbCBkZXNjcmliZWQgaGVyZSBpcyByZXB1dGVkIHRvIGJlIHVzZWQgZWZmZWN0aXZlbHkgaW4gRHIuIEtoYWRlciBWYWxpJ3MgcHJhY3RpY2UsIHdoaWNoIGVtcGhhc2l6ZXMgYSBtaWxsZXQtYmFzZWQgZGlldDsgRHIuIFZhbGkgaXMgdGhlIGhpZ2hseSBlc3RlZW1lZCBNaWxsZXQgTWFuIG9mIEluZGlhLCB3aG8gaGFzIHN1Y2Nlc3NmdWxseSBhZHZvY2F0ZWQgYSBkaWV0IGJhc2VkIG9uIG1pbGxldHMgb3IgU2lydWRoYWFueWEgZm9yIGltcHJvdmVkIGltbXVuaXR5IGFnYWluc3QgYWxsIGRpc2Vhc2UuPC9wPgo8aDMgaWQ9InByb3RvY29sLWFuZC10cmVhdG1lbnQtYXBwcm9hY2gtMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwcm90b2NvbC1hbmQtdHJlYXRtZW50LWFwcHJvYWNoLTMiPiM8L2E+IFByb3RvY29sIGFuZCB0cmVhdG1lbnQgYXBwcm9hY2g6PC9oMz4KPHA+PHN0cm9uZz5QcmVjYXV0aW9uYXJ5IG1lYXN1cmVzIGZvciBwcm9waHlsYXhpcyBvciBwcmV2ZW50aW9uOjwvc3Ryb25nPjwvcD4KPHA+PHN0cm9uZz5Ib21lb3BhdGhpYyBtZWRpY2luZXMgZm9yIGltbWVkaWF0ZSBhbmQgc2hvcnQtdGVybSBpbW11bml0eTo8L3N0cm9uZz4KPHN0cm9uZz5CcnlvbmlhIChBbGJhKSAyMDAsIFJodXMgdG94aWNvZGVuZHJvbiAoUmh1cyB0b3gpIDIwMDwvc3Ryb25nPgpUYWtlIDMgcGlsbHMgPHN0cm9uZz4oZm9yIGFkdWx0cyk8L3N0cm9uZz4gb2YgZWFjaCBvZiB0aGVzZSBtZWRpY2luZXMsIGRpc3NvbHZlIGluIGhhbGYgYSBnbGFzcyBvZiB3YXRlciwgYW5kIGNvbnN1bWUgYXMgZmFyIGFzIHBvc3NpYmxlIGF3YXkgZnJvbSBtZWFscywgaS5lLiwgYXQgbGVhc3QgaGFsZiBhbiBob3VyIGJlZm9yZSBhIG1haW4gbWVhbC4gUmVwZWF0IHRoZSBkb3NhZ2UgMiB0aW1lcyBhIGRheSwgbW9ybmluZyBhbmQgZXZlbmluZywgZm9yIDMgZGF5cy48L3A+CjxwPjxzdHJvbmc+QXl1cnZlZGljIFNhcHRhcGF0cmEgS2FzaGFheWFzIGZvciBsb25nLXRlcm0gaW1tdW5pdHk6PC9zdHJvbmc+Ck9uZSBjYW4gZW5qb3kgYW4gZXZlcmxhc3RpbmcgaW1tdW5pdHkgYnkgY29uc3VtaW5nIFNhcHRhcGF0cmEgS2FzaGF5YXMgb25jZSBpbiBldmVyeSA2IG1vbnRocyBhbmQgU2lyaWRoYW55YSBvciBtaWxsZXQgZ3JhaW5zIGFzIHN0YXBsZSBmb29kLgpQcmVwYXJlIGEgS2FzaGFheWEgb2YgZWFjaCBvZiB0aGUgNyBsZWF2ZXMgbGlzdGVkIGJlbG93LCBvbmUgYXQgYSB0aW1lLCBhbmQgY29uc3VtZSBpdCBmb3IgMiBjb25zZWN1dGl2ZSBkYXlzLiBUaGlzIHByb2Nlc3Mgd291bGQgdGFrZSA3IHggMiA9IDE0IGRheXMuIFRoZW4gcmVpdGVyYXRlIHRoZSBjeWNsZSBmb3IgdGhlIG5leHQgMTQgZGF5cywgYW5kIHJlcGVhdCB0aGUgZW50aXJlIHJlZ2ltZW4gZXZlcnkgc2l4IG1vbnRocy48L3A+CjxwPjxzdHJvbmc+VGhlIDcgbGVhdmVzIG9mIHRoZSBTYXB0YXBhdHJhIEthc2hhYXlhIGFyZSBhcyBmb2xsb3dzOjwvc3Ryb25nPjwvcD4KPG9sPgo8bGk+QmVybXVkYSBncmFzcyAvIEN5bm9kb24gZGFjdHlsb24gLyBEaHJ1dmEgb3IgRHVydmEgZ3Jhc3M8L2xpPgo8bGk+SG9seSBiYXNpbCAvIE9jaW11bSB0ZW51aWZsb3J1bSAvIE9jaW11bSBzYW5jdHVtIC8gVHVsYXNpIG9yIFR1bHNpPC9saT4KPGxpPkdpbG95IC8gVGlub3Nwb3JhIGNvcmRpZm9saWEgLyBBbXJ1dGF2YWxsaSBvciBHdWR1Y2hpPC9saT4KPGxpPkJlbmdhbCBxdWluY2Ugb3Igc3RvbmUgYXBwbGUgb3Igd29vZCBhcHBsZSAvIEFlZ2xlIE1hcm1lbG9zIC8gQmFlbCBvciBCaWx2YTwvbGk+CjxsaT5JbmRpYW4gYmVlY2ggLyBQb25nYW1pYSBwaW5uYXRhIC8gUG9vbmdhIG9yIEthcmFuamEgb3IgS2FydW08L2xpPgo8bGk+TmVlbSAvIEF6YWRpcmFjaHRhIGluZGljYTwvbGk+CjxsaT5TYWNyZWQgZmlnIC8gRmljdXMgcmVsaWdpb3NhIC8gUGVlcGFsPC9saT4KPC9vbD4KPHA+PHN0cm9uZz5TdHJ1Y3R1cmVkIHdhdGVyIGFuZCBpdHMgcHJlcGFyYXRpb246PC9zdHJvbmc+ClN0cnVjdHVyZWQgd2F0ZXIgaXMgd2F0ZXIgaW4gd2hpY2ggdGhlIG1vbGVjdWxlcyBhcmUgb3JnYW5pemVkIG9yIHN0cnVjdHVyZWQgbG9vc2VseSBhcm91bmQgaHlkcm9waGlsaWMgY29yZXMsIG9yIHdhdGVyIG1vbGVjdWxhciBhcnJhbmdlbWVudCB0aGF0IHJldGFpbnMgbWVtb3J5IG9mIGl0cyBlbnZpcm9ubWVudC4gU3RydWN0dXJlZCB3YXRlciBpcyBjbGFpbWVkIHRvIGhhdmUgaGVhbGluZyBwcm9wZXJ0aWVzLiBEci4gVmFsaSByZWNvbW1lbmRzIHRvIGNyZWF0ZSBzdHJ1Y3R1cmVkIHdhdGVyIGJ5IGltbWVyc2luZyBhIGNvcHBlciBwbGF0ZSBpbiBhIG11ZCBvciBzdGVlbCB2ZXNzZWwgZmlsbGVkIHdpdGggd2F0ZXIgZm9yIDcgaG91cnMgb3Igb3Zlcm5pZ2h0LiBUaGUgd2F0ZXIgdGh1cyBwcmVwYXJlZCBpcyBzYWlkIHRvIGhhdmUgaGVhbGluZyBwcm9wZXJ0aWVzIGFuZCBjYW4gYmUgdXNlZCBmb3IgY29va2luZyBhbmQgZHJpbmtpbmcuIFRoZSBjb3BwZXIgcGxhdGUgdXNlZCBtdXN0IGJlIGNsZWFuZWQgZGFpbHkgd2l0aCB0YW1hcmluZCB3YXRlciBvciBsZW1vbiBhbmQgc2FsdC48L3A+CjxwPjxzdHJvbmc+UHJlcGFyYXRpb24gb2YgS2FzaGFheWE6PC9zdHJvbmc+ClRoZSBLYXNoYWF5YSBvciBtZWRpY2luYWwgZGVjb2N0aW9uIHNob3VsZCBpZGVhbGx5IGJlIHByZXBhcmVkIGZyb20gZnJlc2ggbGVhdmVzLiBIYWxmIGEgZmlzdGZ1bCBvZiBzbWFsbCBsZWF2ZXMgb3IgMy00IGJpZyBsZWF2ZXMgc2hvdWxkIGJlIHN1ZmZpY2llbnQgZm9yIGEgZGF5J3MgZG9zYWdlLiBJZiB0aGUgbGVhdmVzIGFyZSBib3VnaHQgZnJvbSBvdXRzaWRlLCB0aGVuIHRoZXkgc2hvdWxkIGZpcnN0IGJlIHB1cmdlZCBvZiBwZXN0aWNpZGVzIHRocm91Z2ggYSBzdWl0YWJsZSBtZXRob2Qgc3VjaCBhcyBzb2FraW5nIGZvciAxMCBtaW51dGVzIGluIDIgJSBzYWx0IHdhdGVyIHNvbHV0aW9uLCB0aG91Z2ggdGhlIG1ldGhvZCBzdWdnZXN0ZWQgaW4gdGhlIHByb3RvY29sIGlzIHRvIHNvYWsgZm9yIDEwIG1pbnV0ZXMgaW4gYSB0YW1hcmluZCB3YXRlciBzb2x1dGlvbiAoMjAgZyB0YW1hcmluZCBzcXVlZXplZCBpbiAzIGxpdHJlcyBvZiBzdHJ1Y3R1cmVkIHdhdGVyKSwgYW5kIGxhdGVyIHJpbnNlIG9mZiB0aGUgc29ha2VkIGxlYXZlcyBpbiBzdHJ1Y3R1cmVkIHdhdGVyLiBUbyBwcmVwYXJlIHRoZSBLYXNoYWF5YSwgYnJpbmcgMjAwIG1sIG9mIHN0cnVjdHVyZWQgd2F0ZXIgdG8gYm9pbCwgYWRkIHRoZSBsZWF2ZXMgdG8gdGhlIGJvaWxpbmcgd2F0ZXIsIGFuZCBsb3dlciB0aGUgZmxhbWUgdG8gc2ltbWVyIHRoZSB3YXRlciBmb3IgMi0zIG1pbnV0ZXMgYmVmb3JlIHN3aXRjaGluZyBvZmYgdGhlIGZsYW1lLiBDb3ZlciB0aGUgS2FzaGFheWEgd2l0aCBhIGxpZCBhbmQgYWxsb3cgaXQgdG8gY29vbCBmb3IgYSBmZXcgbWludXRlcy4gQWRkIHBhbG0gamFnZ2VyeSBzeXJ1cCBpZiByZXF1aXJlZCwgYW5kIGNvbnN1bWUgaXQgbHVrZXdhcm0uPC9wPgo8cD48c3Ryb25nPk1ldGhvZCBvZiBwcmVwYXJhdGlvbiBvZiBBbWJhbGk6PC9zdHJvbmc+CjxhIGhyZWY9Imh0dHBzOi8veW91dHUuYmUvZ09XZUJqVWZSakkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkFtYmFsaSBwcmVwYXJhdGlvbiByZWNpcGU8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD5HcmluZCByZXF1aXJlZCBxdWFudGl0eSBvZiBhIHdob2xlIGdyYWluIG1pbGxldCBmb3IgMiBzZWNvbmRzIGluIGEgYmxlbmRlciB1c2luZyB0aGUgV2hpcCBtb2RlLiBUaGVuIHdhc2ggdGhlIGZsb3VyIGluIHN1ZmZpY2llbnQgd2F0ZXIgYW5kIGRyYWluIG9yIGZpbHRlciBvZmYgdGhlIHdhdGVyLiBTb2FrZWQgdGhlIHdhc2hlZCBicm9rZW4gbWlsbGV0IGdyYWlucyBmb3IgOCBob3VycyBpbiBzdWZmaWNpZW50IHF1YW50aXR5ICgyLjUgdG8gMyB0aW1lcyB0aGUgdm9sdW1lIG9mIGZsb3VyKSBvZiBzdHJ1Y3R1cmVkIHdhdGVyLCB0byBzb2Z0ZW4gdGhlIGZpYnJlLiBUaGVuIGJvaWwgdGhlIGJyb2tlbiBncmFpbnMgaW4gdGhlIHNhbWUgd2F0ZXIsIGluIGFuIG9wZW4gbXVkIHBvdCwgdW50aWwgdGhlIGdyYWlucyBhcmUgY29va2VkLiBBZnRlciBjb29raW5nLCBjbG9zZSB0aGUgbXVkIHBvdCB3aXRoIGEgY2xlYW4gY290dG9uIGNsb3RoIGFuZCBsZWF2ZSB0byBmZXJtZW50IGZvciA4IGhvdXJzLiBBZGQgc2FsdCB0byB0YXN0ZSBiZWZvcmUgZWF0aW5nLjwvcD4KPHA+PHN0cm9uZz5EaWV0YXJ5IHJlZ2ltZW46PC9zdHJvbmc+CkNvbnN1bWUgPHN0cm9uZz5BbWJhbGk8L3N0cm9uZz4gcHJlcGFyZWQgZnJvbSBvbmUgb2YgdGhlIFNpcnVkaGFhbml5YSBvciBtaWxsZXRzIGF0IGxlYXN0IG9uY2UgYSBkYXkuIFN1YnNlcXVlbnRseSBvdGhlciBtaWxsZXQgcHJlcGFyYXRpb25zIGNvdWxkIGJlIGNvbnN1bWVkIGFzIHdlbGwuIFRoZXJlIGlzIGV2aWRlbmNlIHRoYXQgc3Byb3V0aW5nIGFuZCBmZXJtZW50YXRpb24gcmVkdWNlIHRoZSBjb250ZW50IG9mIGFudGludXRyaWVudHMgaW4gdGhlIG1pbGxldCBicmFuLiBBYnN0YWluIGZyb20gdGVhLCBjb2ZmZWUsIGFsY29ob2wgYW5kIG5vbnZlZ2V0YXJpYW4gYW5kIGluZmxhbW1hdG9yeSBmb29kcy48L3A+CjxwPi0tCjxzdHJvbmc+UmVjb21tZW5kZWQgdHJlYXRtZW50IGFuZCBkaWV0IGZvciBjb3JvbmEtcG9zaXRpdmUgcGF0aWVudHM6PC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPkhvbWVvcGF0aGljIG1lZGljaW5lIGZvciBhY3RpdmUgaW5mZWN0aW9uczo8L3N0cm9uZz48L3A+CjxwPjxzdHJvbmc+QXJzZW5pY3VtIGFsYnVtIDIwMDwvc3Ryb25nPgo8c3Ryb25nPkJyeW9uaWEgKEFsYmEpIDIwMDwvc3Ryb25nPgo8c3Ryb25nPkNhbXBob3IgMjAwPC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPlNjaGVkdWxlIChmb3IgYWR1bHRzKS08L3N0cm9uZz4KMyBwaWxscyBlYWNoIGluIGhhbGYgY3VwIG9mIHdhdGVyLCAsIGFuZCBjb25zdW1lIGFzIGZhciBhcyBwb3NzaWJsZSBhd2F5IGZyb20gbWVhbHMgKGkuZS4sIGF0IGxlYXN0IGhhbGYgYW4gaG91ciBiZWZvcmUgYSBtYWluIG1lYWwpLCA0IHRpbWVzIGEgZGF5IGZvciB0d28gZGF5cy4KTmV4dCAzIHRpbWVzIGEgZGF5IGZvciB0d28gZGF5cywKTmV4dCB0d2ljZSBhIGRheSBmb3IgdHdvIGRheXMsClRoZW4gb25jZSBhIGRheSBmb3IgYSB3ZWVrLjwvcD4KPHA+PHN0cm9uZz5NZWFsIHBsYW4gZm9yIGNvcm9uYS1wb3NpdGl2ZSBwYXRpZW50czo8L3N0cm9uZz4KQ29uc3VtZSBvbmx5IEFtYmFsaSBtYWRlIGZyb20gbWlsbGV0cyBmb3IgYWxsIHRocmVlIG1lYWxzIG9mIHRoZSBkYXkuIE9uIHRoZSBmaXJzdCBkYXksIGhhdmUgb25seSBmb3h0YWlsIG1pbGxldCAoVGluYWkgaW4gVGFtaWwgLyBLb3JyYWx1IGluIFRlbHVndSkgQW1iYWxpLiBPbiB0aGUgc2Vjb25kIGRheSwgY29uc3VtZSBBbWJhbGkgcHJlcGFyZWQgZnJvbSBrb2RvIG1pbGxldCAoVmFyYWd1IGluIFRhbWlsIC8gQXJpa2VsdSBpbiBUZWx1Z3UpLCBhbmQgb24gdGhlIHRoaXJkIGRheSwgQW1iYWxpIGZyb20gbGl0dGxlIG1pbGxldCAoU2FhbWFpIGluIFRhbWlsIC8gU2FhbWFsdSBpbiBUZWx1Z3UpLiBUaGVyZWFmdGVyLCByZXBlYXQgdGhlIGN5Y2xlLjwvcD4KPHA+PHN0cm9uZz5LYXNoYWF5YSByZWdpbWVuIGZvciBwYXRpZW50czo8L3N0cm9uZz4KQ29uc3VtZSBLYXNoYWF5YXMgcHJlcGFyZWQgZnJvbSB0aGUgZm9sbG93aW5nIG1lZGljaW5hbCBsZWF2ZXMgYXQgdGhlIGZvbGxvd2luZyBwcmVzY3JpYmVkIHRpbWluZ3M6Ck1lZGljaW5hbCBsZWF2ZXMtPC9wPgo8b2w+CjxsaT5KYXBhbmVzZSBtdWd3b3J0IC8gQXJ0ZW1lc2lhIHZ1bGdhcmlzIC8gTWFjaGkgcGF0cmFtLDwvbGk+CjxsaT5OaWdodCBqYXNtaW5lIC8gTnljdGFudGhlcyBhcmJvci10cmlzdGlzIC8gUGFhcmlqYWF0YSAvIFBhdml6aGFtYWxsaSw8L2xpPgo8bGk+R2lsb3kgLyBUaW5vc3BvcmEgY29yZGlmb2xpYSAvIEFtcnV0YXZhbGxpIC8gR3VkdWNoaTwvbGk+Cjwvb2w+CjxwPkthc2hhYXlhIHRpbWluZ3M6CjYgQU0tICBNYWNoaSBwYXRyYW07CjkgQU0tICBQYXZpemhhbWFsbGk7CjEyIFBNLSAgQW1ydXRhdmFsbGkgb3IgR2lsb3k7CjMgUE0tICBNYWNoaSBwYXRyYW07CjYgUE0tICBQYXZpemhhbWFsbGk7CjkgUE0tIEFtcnV0YXZhbGxpIG9yIEdpbG95PC9wPgo8cD48c3Ryb25nPk1lYXN1cmVzIHRvIGJlIGZvbGxvd2VkIGJ5IHRob3NlIHdobyBoYXZlIGNvbXBsZXRlZCAyIGN5Y2xlcyBvZiBTYXB0YXBhdHJhIEthc2hhYXlhLCBhbmQgYWxzbyBwYXRpZW50cyByZWNvdmVyZWQgZnJvbSBDb3ZpZC0xOTo8L3N0cm9uZz4KQ29uc3VtZSBvbmx5IEFtYmFsaSBwcmVwYXJlZCBmcm9tIHRoZXNlIDUgbWlsbGV0cyBmb3IgYWxsIHRocmVlIG1lYWxzLCB3aXRoIGVhY2ggbWlsbGV0IGJlaW5nIGV4Y2x1c2l2ZWx5IGVhdGVuIG9uIDIgY29uc2VjdXRpdmUgZGF5cy4gVGhlIDUgbWlsbGV0cyBhcmUgYXMgZm9sbG93czoKRm94dGFpbCBtaWxsZXQgKFRpbmFpKSwgS29kbyBtaWxsZXQgKFZhcmFndSksIExpdHRsZSBtaWxsZXQgKFNhYW1haSksIEJhcm55YXJkIG1pbGxldCAoS3V0aGlyYXZhYWxpIGluIFRhbWlsIC8gT2RhbHUgaW4gVGVsdWd1KSwgQnJvd250b3AgbWlsbGV0IChQYWxhIHB1bCBpbiBUYW1pbCAvIEtvcnJhbHUgaW4gVGVsdWd1KTwvcD4KPHA+VGhlIDMgS2FzaGFheWFzIHRvIGJlIGNvbnN1bWVkLCBtb3JuaW5nIGFuZCBldmVuaW5nLCBmb3IgOSB3ZWVrcywgd2l0aCBlYWNoIEthc2hhYXlhIGNvbnN1bWVkIGV4Y2x1c2l2ZWx5IHR3aWNlIGEgZGF5IGZvciAzIGNvbnNlY3V0aXZlIGRheXMgZWFjaCwgYmVmb3JlIGNvbW1lbmNpbmcgdGhlIG5leHQgb25lOgpKYXBhbmVzZSBtdWd3b3J0IC8gTWFjaGkgcGF0cmFtLCBOaWdodCBqYXNtaW5lIC8gUGF2aXpoYW1hbGxpLCBHaWxveSAvIEFtcnV0YXZhbGxpPC9wPgo8cD5UYWtlIGluIHRoZSBvY2hyZSByYXlzIG9mIHN1bmxpZ2h0IGF0IHN1bnJpc2UgYW5kIHN1bnNldCBldmVyeSBkYXkgZm9yIGF0IGxlYXN0IDE1IG1pbnV0ZXMgZWFjaCwgZm9yIHZpdGFtaW4gRC4gVGFrZSBmb29kcyByaWNoIGluIHZpdGFtaW4gQywgbGlrZSBndWF2YSwgY2l0cnVzIGZydWl0cywgZ29vc2ViZXJyeSBvciBBbWxhLCBwYXBheWEsIHBpbmVhcHBsZSwgYW5kIHZlZ2V0YWJsZXMgbGlrZSBjYXBzaXN1bSwgZ3JlZW4gbGVhZnkgdmVnZXRhYmxlcywgdG9tYXRvZXMgZXRjLiBFYXQgb25seSBob21lbWFkZSBwaWNrbGVzLjwvcD4KPHA+PHN0cm9uZz5HZW5lcmFsIHByZWNhdXRpb25zPC9zdHJvbmc+OiBXZWFyIG1hc2tzIHdoZW4gdmlzaXRpbmcgY3Jvd2RlZCBwbGFjZXMgYW5kIHByYWN0aXNlIHNvY2lhbCBkaXN0YW5jaW5nIGluIHN1Y2ggcGxhY2VzLjwvcD4KPHA+LS0KPHN0cm9uZz5Ib21lb3BhdGhpYyBtZWRpY2luZSBhZnRlciB2YWNjaW5hdGlvbiB0byBtaXRpZ2F0ZSBhZHZlcnNlIGVmZmVjdHM6PC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPk1hbmNpbmVsbGEgMjAwPC9zdHJvbmc+CjxzdHJvbmc+VGh1amEgMjAwPC9zdHJvbmc+PC9wPgo8cD48c3Ryb25nPlNjaGVkdWxlLTwvc3Ryb25nPgozIHBpbGxzIGVhY2ggaW4gaGFsZiBjdXAgb2Ygd2F0ZXIsIFR3aWNlIGEgZGF5IGZvciA0IGRheXMsIGF3YXkgZnJvbSBmb29kPC9wPgo8aHI+CjxwPjxzdHJvbmc+U29tZSBwcmluY2lwbGVzIG9mIGhvbWVvcGF0aGljIHRyZWF0bWVudCwgYXMgYWR2aXNlZCBieSBhIHByYWN0aXNpbmcgaG9tZW9wYXRoOjwvc3Ryb25nPgpIb21lb3BhdGhzIGFkbWluaXN0ZXIgc3ltcHRvbWF0aWMgdHJlYXRtZW50IHRoYXQgaXMgbm9uZXRoZWxlc3MgdGFpbG9yZWQgdG8gdGhlIHBoeXNpb2xvZ2ljYWwgY29udGV4dCBvZiB0aGUgaW5kaXZpZHVhbCBwYXRpZW50LiBUaHVzIGluIGhvbWVvcGF0aHksIHRoZSBzYW1lIHN5bXB0b21zIG1heSBub3QgYmUgcHJlc2NyaWJlZCB0aGUgc2FtZSByZW1lZHkgaW4gZGlmZmVyZW50IHBhdGllbnRzLiBJbiB0aGUgY2FzZSBvZiB0aGUgd2lkZWx5IHByZXNjcmliZWQgYW5kIHByb3ZlbiBwcm9waHlsYWN0aWMgQXJzYWxiIDMwIEMsIHBlcmhhcHMgdGhlIHVuZGVybHlpbmcgcmVhc29uIGZvciBpdHMgZWZmaWNhY3kgaXMgZHVlIHRvIGEgY29tbW9uIGdsb2JhbCBjb250ZXh0IGNyZWF0ZWQgYnkgdGhlIHBhbmRlbWljLjwvcD4KPHA+Rm9yIHRoaXMgcmVhc29uICh0aGF0IHRyZWF0bWVudCBtb2RhbGl0aWVzIGFyZSB0YWlsb3JlZCBhbHNvIHRvIHRoZSBpbmRpdmlkdWFsIGFuZCBub3QgbWVyZWx5IHRvIHN5bXB0b21zKSwgaXQgaXMgYWR2aXNhYmxlIHRvIHZpc2l0IGEgaG9tZW9wYXRoIGluIHBlcnNvbiB3aGVuIHRoZXJlIGlzIGFuIGFpbG1lbnQuIEhvd2V2ZXIsIGluIHRoZSBjYXNlIG9mIHRoZSBjdXJyZW50IHByZXNjcmlwdGlvbiwgQnJ5b25pYSAyMDAgaXMga25vd24gdG8gcHJldmVudCBwbmV1bW9uaWEgYW5kIFJodXMgVG94IDIwMCBpcyBmb3IgYm9keSBhY2hlLiBUaGVzZSBhcmUgYWRtaW5pc3RlcmVkIGluIHRoZSBlYXJseSBzdGFnZSBvZiBhIGRpc2Vhc2UuIENhbXBob3IgMjAwIGlzIHVzZWQgdG8gdHJlYXQgZmV2ZXIsIHdoZW4gdGhlIHN5bXB0b20gaXMgcHJlc2VudC4gTGlrZSBhbGwgaG9tZW9wYXRoaWMgbWVkaWNhdGlvbiwgdGhleSBzaG91bGQgYmUgY29uc3VtZWQgYXQgbGVhc3QgaGFsZiBhbiBob3VyIGJlZm9yZSBhIG1haW4gbWVhbCwgYXMgZmFyIGFzIHBvc3NpYmxlIG9uIGFuIGVtcHR5IHN0b21hY2guIFRoZXJlIGFyZSBubyBlc3BlY2lhbCBkaWV0YXJ5IHByZWNhdXRpb25zIHRvIGJlIGZvbGxvd2VkLCBleGNlcHQgdG8gYWJzdGFpbiBmcm9tIGNvZmZlZSBhbmQgdGVhLCBhbmQgaWYgcG9zc2libGUsIG5vbnZlZ2V0YXJpYW4gZm9vZCwgYW5kIHRvIGVhdCBsaWdodCwgZWFzaWx5IGRpZ2VzdGlibGUgbWVhbHMgZHVyaW5nIGlsbG5lc3MuPC9wPgo8aDMgaWQ9InR5cGljYWwtZHVyYXRpb24tb2YtdHJlYXRtZW50LTMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdHlwaWNhbC1kdXJhdGlvbi1vZi10cmVhdG1lbnQtMyI+IzwvYT4gVHlwaWNhbCBkdXJhdGlvbiBvZiB0cmVhdG1lbnQ6PC9oMz4KPHA+MS00IHdlZWtzPC9wPgo8aDMgaWQ9Im91dGNvbWUtMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNvdXRjb21lLTMiPiM8L2E+IE91dGNvbWU6PC9oMz4KPHA+Q292aWQgcHJldmVudGlvbiwgcmVwb3J0ZWQgcmVsaWVmIGZyb20gc3ltcHRvbXMgb2YgQ292aWQsIHBvc3QtQ292aWQsIGEgbWVhc3VyZSBvZiByZWxpZWYgZnJvbSB2YWNjaW5lIHNpZGUgZWZmZWN0czwvcD4KPGgzIGlkPSJzaWduaWZpY2FudC1zaWRlLWVmZmVjdHMtMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzaWduaWZpY2FudC1zaWRlLWVmZmVjdHMtMyI+IzwvYT4gU2lnbmlmaWNhbnQgc2lkZSBlZmZlY3RzOjwvaDM+CjxwPk5vbmUgcmVwb3J0ZWQsIG92ZXJhbGwgaW1wcm92ZW1lbnQgb2YgaGVhbHRoPC9wPgo8aDMgaWQ9InJlY29tbWVuZGVkLXF1YW50aXR5LWZvci1zdG9ja2luZy0zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3JlY29tbWVuZGVkLXF1YW50aXR5LWZvci1zdG9ja2luZy0zIj4jPC9hPiBSZWNvbW1lbmRlZCBxdWFudGl0eSBmb3Igc3RvY2tpbmc6PC9oMz4KPHA+QXJzYWxiIDMwIEMgaXMgYWR2aXNhYmxlIHRvIHN0b2NrIGZvciBzZXZlcmFsIG1vbnRocywgZXNwZWNpYWxseSBhcyB0aGUgbWVkaWNpbmUgaXMgdmVyeSBsb3ctcHJpY2VkLjwvcD4KPGgzIGlkPSJwcmljZS0zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3ByaWNlLTMiPiM8L2E+IFByaWNlOjwvaDM+CjxwPlRoZSBkaWV0YXJ5IGZvb2Qgc3VwcGxpZXMgYW5kIGhvbWVvcGF0aGljIG1lZGljaW5lIGFyZSBsb3ctcHJpY2VkLjwvcD4KPGgzIGlkPSJzdWdnZXN0ZWQtc3VwcGxpZXJzLTMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3VnZ2VzdGVkLXN1cHBsaWVycy0zIj4jPC9hPiBTdWdnZXN0ZWQgc3VwcGxpZXJzOjwvaDM+CjxwPkxvY2FsIG9yIG9ubGluZSBob21lb3BhdGh5IHN0b3JlczwvcD4KPGgzIGlkPSJmdXJ0aGVyLXJlZmVyZW5jZXMtMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNmdXJ0aGVyLXJlZmVyZW5jZXMtMyI+IzwvYT4gRnVydGhlciByZWZlcmVuY2VzOjwvaDM+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnN0dWRvY3UuY29tL2luL2RvY3VtZW50L2thcm5hdGFrYS1zdGF0ZS1sYXctdW5pdmVyc2l0eS9lbnZpcm9ubWVudGFsLWxhdy9jb3JvbmEtaGFuZGJvb2stanVseTIwMjAvMTAzODYzMDIiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlRoZSBib29rLCBhdmFpbGFibGUgYXMgYSBkb3dubG9hZGFibGUgUERGLCA8c3Ryb25nPkNvcm9uYSBIYW5kIEJvb2s8L3N0cm9uZz4sIGF0dHJpYnV0ZWQgdG8gaG9saXN0aWMgaGVhbHRoY2FyZSBhZHZvY2F0ZXMgYW5kIGZvb2Qgc2NpZW50aXN0cyBEcnMuIEtoYWRhciBWYWxpIGFuZCBTYXJhbGEgS2hhZGFyLCBwcmVwYXJlZCBieSB0aGUgZ3JvdXAgRHIuIEtoYWRhciBWYWxpIExpZmVzdHlsZSwgYmFzZWQgb24gdGhlIHZpZGVvIHByZXNlbnRhdGlvbnMgb2YgRHIuIEtoYWRhciBWYWxpLCBrbm93biBhcyB0aGUgTWlsbGV0IE1hbiBvZiBJbmRpYTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFtYXpvbi5pbi9NaXJhY2xlLU1pbGxldHMtSGVhbHMtRGlhYmV0ZXMtQ2FuY2Vycy1lYm9vay9kcC9CMDg4QzUxRjMyIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5BbWF6b24uY29tOiBNaXJhY2xlIE1pbGxldHM6IEZvb2QgdGhhdCBIZWFscyBEaWFiZXRlcyB0byBDYW5jZXJzOyBCeSBEci4gS2hhZGFyIFZhbGk8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwOi8vaGVhbHRoeW1pbGxldHMuaW4vIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5oZWFsdGh5bWlsbGV0cy5pbjogRHIuIEtoYWRhciBWYWxpIHwgTGVhcm4gSG93IFRvIEVhdCBIZWFsdGh5IFdpdGhvdXQgQWZmZWN0aW5nIFlvdXIgQnVzeSBMaWZlc3R5bGU8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwczovL21hbmF2YXRhLm9yZy9raGFkZXJ2YWxpLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RHIuIEtoYWRhciBWYWxpOiBCcmllZiBiaW9ncmFwaHksIHdvcmsgYW5kIGRvd25sb2FkYWJsZSBib29rczxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9Uy0xeERaWXFyb0kiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPihIaW5kaSkgS2hldGkgVmlyYWFzYXQgTWlzc2lvbjogVG93YXJkcyBIZWFsdGggd2l0aCBNaWxsZXRzIDogQSB0YWxrIGJ5IERyIEtoYWRhciBXYWxpIGF0IHZpbGxhZ2UgU29oYW5nYXJoIFJhdHRld2FsYTsgRGVjIDE0LCAyMDE5PE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYXl1c2guZ292LmluL2RvY3MvaG9tZW9wYXRoeS1ndWlkZWxpbmVzLnBkZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+R3VpZGVsaW5lcyBmb3IgSG9tZW9wYXRoaWMgUHJhY3RpdGlvbmVycyBmb3IgQ09WSUQtMTk7IE1pbmlzdHJ5IG9mIEFZVVNILCBHb3Zlcm5tZW50IG9mIEluZGlhPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly95b3V0dS5iZS9nT1dlQmpVZlJqSSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+TWlsbGV0IC8gU2lydWRoYWFuaXlhIEFtYmFsaSAoc3Byb3V0ZWQgKyBmZXJtZW50ZWQgaGVhbHRoeSBwb3JyaWRnZSk8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwczovL3d3dy53aG9sZXNvbWV0YWxlcy5jb20vbWlsbGV0LWFtYmFsaS1mZXJtZW50ZWQtZGFsaXlhLWZ1bGwtcmVjaXBlLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+d2hvbGVzb21ldGFsZXMuY29tOiBNaWxsZXQgQW1iYWxpIChGZXJtZW50ZWQgRGFsaXlhKSAtIEZ1bGwgUmVjaXBlOyBTdWphdGE7IEphbiAyLCAyMDIwPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+SGFuZGJvb2sgRm9yIEhlYWx0aCwgYSBjb21waWxhdGlvbiBvZiB0cmllZCBhbmQgdGVzdGVkIGhvbWUgcmVtZWRpZXMgYnkgS2VyYWxhIG5hdHVyb3BhdGgsIEFsYmVydCBZLiBaYWNoYXJpYSAoSW5uZXIgRXhwYW5zaW9uIENvYWNoLCArOTEgODkyMTY5NzkyOCk8L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9Y1JqemRrcXU0U1EiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPllvdVR1YmUuY29tOiBTYXB0YXBhdHJhIGFuZCBIb3cgdG8gbWFrZSBLYXNoYXlhbSAoRGVjb3Rpb24pIHx8IEdpbG95IChUaXBwYSB0ZWVnYSkgS2FzaGF5YW0gfHwgRHIuIEtoYWRhciBWYWxpPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZHJob21lby5jb20vbWVkaWNpbmUvYnJ5b25pYS1hbGJhLWhvbWVvcGF0aGljLW1lZGljaW5lLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+ZHJob21lby5jb206IEJyeW9uaWEgQWxiYSDigJMgSG9tZW9wYXRoaWMgTWVkaWNpbmU6IEl0cyBVc2VzLCBJbmRpY2F0aW9ucyBhbmQgRG9zYWdlOyBEci4gVmlrYXMgU2hhcm1hLCBNRDxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRyaG9tZW8uY29tL21lZGljaW5lL3JodXMtdG94LWhvbWVvcGF0aGljLW1lZGljaW5lLXVzZXMtaW5kaWNhdGlvbnMtZG9zYWdlLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+ZHJob21lby5jb206IFJodXMgVG94IOKAkyBIb21lb3BhdGhpYyBtZWRpY2luZSwgaXRzIHVzZXMsIGluZGljYXRpb25zIGFuZCBkb3NhZ2U7IERyLiBWaWthcyBTaGFybWEsIE1EPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+VGhlIGZvbGxvd2luZyBhcnRpY2xlIGluZGljYXRlcyB0aGF0IEJyeW9uaWEgKEFsYmEpIGFuZCBSaHVzIFRveCBhcmUgbmF0dXJhbCBob21lb3BhdGhpYyBtZWRpY2luZXMgcHJlc2NyaWJlZCBmb3IgZmV2ZXIgd2l0aCBleHRyZW1lIGJvZHkgYWNoZS4gT2YgdGhlc2UsIEJyeW9uaWEgaXMgcHJlc2NyaWJlZCB3aGVuIHRoZSBmZXZlciBhbmQgYm9keSBhY2hlIGFyZSBhY2NvbXBhbmllZCBieSBleHRyZW1lIGZhdGlndWUgYW5kIGxpc3RsZXNzbmVzcywgYSBoYXJkLCBkcnkgY291Z2ggYW5kIHNldmVyZSBoZWFkYWNoZS4gUmh1cyBUb3ggaXMgcHJlc2NyaWJlZCB3aGVuIHRoZSBmZXZlciBhbmQgYm9keSBhY2hlIGFyZSBhY2NvbXBhbmllZCBieSByZXN0bGVzc25lc3MuIEFyc2VuaWN1bSBBbGJ1bSBpcyBhIGNvbW1vbiByZW1lZHkgZm9yIG1hbGFyaWFsIGZldmVyLCBhY2NvbXBhbmllZCBieSBhbnhpZXR5Ogo8YSBocmVmPSJodHRwczovL3d3dy5kcmhvbWVvLmNvbS9mZXZlci9mbHUtdmlyYWwtZmV2ZXItYW5kLWhvbWVvcGF0aHktdHJlYXRtZW50LyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+ZHJob21lby5jb206IDcgQmVzdCBIb21lb3BhdGhpYyBNZWRpY2luZXMgZm9yIEZldmVyOyBEci4gVmlrYXMgU2hhcm1hLCBNRDxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmhlYWx0aGxpbmUuY29tL2hlYWx0aC9icnlvbmlhIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5oZWFsdGhsaW5lLmNvbTogV2hhdCBJcyBCcnlvbmlhIGFuZCBTaG91bGQgWW91IFVzZSBJdD8gW1B1cnBvcnRlZCBCZW5lZml0cywgYW5kIFBvdGVudGlhbCBTaWRlIEVmZmVjdHNdOyBLYXRocnluIFdhdHNvbiwgTWVkaWNhbGx5IHJldmlld2VkIGJ5IE5hdGFsaWUgQnV0bGVyLCBSRCwgTEQ7IEphbiAxNywgMjAyMDxPdXRib3VuZExpbmsvPjwvYT48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vdGltZXNvZmluZGlhLmluZGlhdGltZXMuY29tL2xpZmUtc3R5bGUvZm9vZC1uZXdzL2RyLXZhbGktc2F5cy1taWxsZXRzLXRha2Utc2l4LWhvdXJzLXRvLWRpZ2VzdC10aHVzLWRvbnQtc3Bpa2Utc3VnYXItbGV2ZWxzL2FydGljbGVzaG93Lzc4NDE0MzcyLmNtcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+VGltZXMgb2YgSW5kaWE6IERyIFZhbGkgc2F5cyBtaWxsZXRzIHRha2Ugc2l4IGhvdXJzIHRvIGRpZ2VzdCwgdGh1cyBkb24ndCBzcGlrZSBzdWdhciBsZXZlbHM7IE9jdCAxLCAyMDIwPE91dGJvdW5kTGluay8+PC9hPjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1XX1NncmhKVlVKQSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+KEhpbmRpKSBBbiBlYXN5IG1ldGhvZCB0byBvYnRhaW4gYWRlcXVhdGUgdml0YW1pbiBEIHRocm91Z2ggYSB2ZWdldGFyaWFuIGRpZXQsIHdpdGhvdXQgdGhlIG5lZWQgZm9yIHN1bmJhdGhpbmc8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8cD48YSBocmVmPSJodHRwczovL3d3dy5zaXJpamVldmFuLm9yZy9ob21lIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5NdWx0aWxpbmd1YWwgY29tcHJlaGVuc2l2ZSB3ZWJzaXRlIGRvY3VtZW50aW5nIERyLiBLaGFkYXIgVmFsaSdzIHdvcmsgYW5kIG1lc3NhZ2U8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8aDIgaWQ9Il80LWhvbWVvcGF0aGljLXRyZWF0bWVudHMtdG8tbWl0aWdhdGUtdGhlLWluZmxhbW1hdGlvbi1jYXVzZWQtYnktdGhlLXNwaWtlLWdseWNvcHJvdGVpbnMtcG9zdC12YWNjaW5hdGlvbi11c2luZy1tZWRpY2F0aW9ucy10aHVqYS0yMDAtYW5kLW1lcmMtc29sLTMwIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI180LWhvbWVvcGF0aGljLXRyZWF0bWVudHMtdG8tbWl0aWdhdGUtdGhlLWluZmxhbW1hdGlvbi1jYXVzZWQtYnktdGhlLXNwaWtlLWdseWNvcHJvdGVpbnMtcG9zdC12YWNjaW5hdGlvbi11c2luZy1tZWRpY2F0aW9ucy10aHVqYS0yMDAtYW5kLW1lcmMtc29sLTMwIj4jPC9hPiA0LiBIb21lb3BhdGhpYyB0cmVhdG1lbnRzIHRvIG1pdGlnYXRlIHRoZSBpbmZsYW1tYXRpb24gY2F1c2VkIGJ5IHRoZSBzcGlrZSBnbHljb3Byb3RlaW5zIHBvc3QtdmFjY2luYXRpb247IHVzaW5nIG1lZGljYXRpb25zIFRodWphIDIwMCBhbmQgTWVyYyBzb2wgMzA8L2gyPgo8aDMgaWQ9Im9iamVjdGl2ZS00Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI29iamVjdGl2ZS00Ij4jPC9hPiBPYmplY3RpdmU6PC9oMz4KPHA+UHJpbWFyaWx5IHRvIGNvdW50ZXJhY3QgdGhlIGVmZmVjdHMgb2YgdGhlIHNwaWtlIHByb3RlaW4gdG94aWNpdHkgb2YgdGhlIENvdmlkLTE5IHZhY2NpbmVzPC9wPgo8aDMgaWQ9InN5c3RlbS00Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N5c3RlbS00Ij4jPC9hPiBTeXN0ZW06PC9oMz4KPHA+SG9tZW9wYXRoeTwvcD4KPGgzIGlkPSJjYW4tYmUtdXNlZC1hbG9uZ3NpZGUtb3RoZXItYWxsb3BhdGhpYy10cmVhdG1lbnRzLTQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2FuLWJlLXVzZWQtYWxvbmdzaWRlLW90aGVyLWFsbG9wYXRoaWMtdHJlYXRtZW50cy00Ij4jPC9hPiBDYW4gYmUgdXNlZCBhbG9uZ3NpZGUgb3RoZXIgYWxsb3BhdGhpYyB0cmVhdG1lbnRzOjwvaDM+CjxwPk5vIGRydWcgaW50ZXJhY3Rpb25zIHJlcG9ydGVkLCBob3dldmVyIHRoaXMgbWF5IHJlcXVpcmUgZnVydGhlciBzdHVkeTwvcD4KPGgzIGlkPSJzdGF0dXMtb2YtYXV0aG9yaXNhdGlvbi00Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXR1cy1vZi1hdXRob3Jpc2F0aW9uLTQiPiM8L2E+IFN0YXR1cyBvZiBhdXRob3Jpc2F0aW9uOjwvaDM+CjxwPlByZXNjcmliZWQgYnkgYSBwcmFjdGlzaW5nIGhvbWVvcGF0aHkgcGh5c2ljaWFuLiAoSG93ZXZlciwgaXQgaXMgb2JzZXJ2ZWQgdGhhdCBpbiBob21lb3BhdGh5LCBleGFjdCBwcm90b2NvbHMgY2FuIG9mdGVuIGRpZmZlciBzaWduaWZpY2FudGx5IGJldHdlZW4gcHJhY3RpdGlvbmVycy4pPC9wPgo8cD5UaGUgZXN0ZWVtZWQgaG9tZW9wYXRoIDxhIGhyZWY9Imh0dHBzOi8vcGJocmZpbmRpYS5vcmcvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Eci4gUHJhdGlrIEJhbm5lcmppLCBvZiBQcmFzYW50YSBCYW5uZXJqaSBIb21lb3BhdGhpYyBSZXNlYXJjaCBGb3VuZGF0aW9uIChQQkhSRiksIEtvbGthdHRhPE91dGJvdW5kTGluay8+PC9hPiwgaGFzIHN0YXRlZCB0aGF0IHRoZXkgdXNlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmluZGlhYmxvb21zLmNvbS9oZWFsdGgtZGV0YWlscy9ILzYwOTAvaW4taG9tZW9wYXRoeS13ZS1yZWNvbW1lbmQtdGh1amEtMzAtYXMtcHJldmVudGlvbi1vZi1jb3JvbmEtZHItcHJhdGlwLWJhbmVyamkuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+VGh1amEgMjAwIGFzIGEgdmVyeSBlZmZlY3RpdmUgcmVtZWR5IGZvciBDb3ZpZC0xOS48T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8aDMgaWQ9InByb3RvY29sLWFuZC10cmVhdG1lbnQtYXBwcm9hY2gtNCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwcm90b2NvbC1hbmQtdHJlYXRtZW50LWFwcHJvYWNoLTQiPiM8L2E+IFByb3RvY29sIGFuZCB0cmVhdG1lbnQgYXBwcm9hY2g6PC9oMz4KPHA+PHN0cm9uZz5UaHVqYSAyMDA8L3N0cm9uZz4gZm9yIDUgZGF5cywgMSBkb3NlIG9yIHBpbGwgYXQgbmlnaHQ7CnRoZSByZWdpbWVuIGlzIHRvIGJlIHN0YXJ0ZWQgMSBkYXkgcHJpb3IgdG8gdGhlIHZhY2NpbmF0aW9uPC9wPgo8cD48c3Ryb25nPk1lcmMgc29sPC9zdHJvbmc+IDMwIGZvciA1IGRheXMsIDIgZG9zZXMgb3IgcGlsbHMgZGFpbHkgZm9sbG93aW5nIHZhY2NpbmF0aW9uPC9wPgo8aDMgaWQ9InR5cGljYWwtZHVyYXRpb24tb2YtdHJlYXRtZW50LTQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdHlwaWNhbC1kdXJhdGlvbi1vZi10cmVhdG1lbnQtNCI+IzwvYT4gVHlwaWNhbCBkdXJhdGlvbiBvZiB0cmVhdG1lbnQ6PC9oMz4KPHA+NiBkYXlzLCBjb21tZW5jaW5nIG9uIHRoZSBkYXkgYmVmb3JlIHRoZSB2YWNjaW5hdGlvbjwvcD4KPGgzIGlkPSJvdXRjb21lLTQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjb3V0Y29tZS00Ij4jPC9hPiBPdXRjb21lOjwvaDM+CjxwPkhvbWVvcGF0aHMgY2xhaW0gdGhhdCB0aGlzIHByb3RvY29sIHdvdWxkIHJlbWVkeSB0aGUgdmFzdGx5IHVuZGVycmVwb3J0ZWQgdG94aWNpdHkgb2YgdGhlIENvdmlkLTE5IHZhY2NpbmVzPC9wPgo8aDMgaWQ9InNpZ25pZmljYW50LXNpZGUtZWZmZWN0cy00Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NpZ25pZmljYW50LXNpZGUtZWZmZWN0cy00Ij4jPC9hPiBTaWduaWZpY2FudCBzaWRlIGVmZmVjdHM6PC9oMz4KPHA+Tm9uZSBrbm93biBvciByZXBvcnRlZDwvcD4KPGgzIGlkPSJyZWNvbW1lbmRlZC1xdWFudGl0eS1mb3Itc3RvY2tpbmctNCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNyZWNvbW1lbmRlZC1xdWFudGl0eS1mb3Itc3RvY2tpbmctNCI+IzwvYT4gUmVjb21tZW5kZWQgcXVhbnRpdHkgZm9yIHN0b2NraW5nOjwvaDM+CjxwPlRvIGJlIGJvdWdodCBhbmQgc3RvY2tlZCB0byBiZWdpbiBkb3Npbmcgb24gdGhlIGRheSBiZWZvcmUgdmFjY2luYXRpb24uPC9wPgo8aDMgaWQ9InByaWNlLTQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJpY2UtNCI+IzwvYT4gUHJpY2U6PC9oMz4KPHA+SW5leHBlbnNpdmU8L3A+CjxoMyBpZD0ic3VnZ2VzdGVkLXN1cHBsaWVycy00Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N1Z2dlc3RlZC1zdXBwbGllcnMtNCI+IzwvYT4gU3VnZ2VzdGVkIHN1cHBsaWVyczo8L2gzPgo8cD5Mb2NhbCBob21lb3BhdGhpYyBzdG9yZXMgYW5kIG9ubGluZSBzdG9yZXM8L3A+CjxoMyBpZD0iZnVydGhlci1yZWZlcmVuY2VzLTQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZnVydGhlci1yZWZlcmVuY2VzLTQiPiM8L2E+IEZ1cnRoZXIgcmVmZXJlbmNlczo8L2gzPgo8cD5BbmVjZG90YWwgZXZpZGVuY2UsIGFmdGVyIGNvbnN1bHRhdGlvbiB3aXRoIGhvbWVvcGF0aHM8L3A+CjxoMiBpZD0iY3R5eSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjdHl5Ij4jPC9hPiBDVFlZPC9oMj4KPGgzIGlkPSJvYmplY3RpdmUtNSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNvYmplY3RpdmUtNSI+IzwvYT4gT2JqZWN0aXZlOjwvaDM+CjxoMyBpZD0ic3lzdGVtLTUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3lzdGVtLTUiPiM8L2E+IFN5c3RlbTo8L2gzPgo8aDMgaWQ9ImNhbi1iZS11c2VkLWFsb25nc2lkZS1vdGhlci1hbGxvcGF0aGljLXRyZWF0bWVudHMtNSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjYW4tYmUtdXNlZC1hbG9uZ3NpZGUtb3RoZXItYWxsb3BhdGhpYy10cmVhdG1lbnRzLTUiPiM8L2E+IENhbiBiZSB1c2VkIGFsb25nc2lkZSBvdGhlciBhbGxvcGF0aGljIHRyZWF0bWVudHM6PC9oMz4KPGgzIGlkPSJzdGF0dXMtb2YtYXV0aG9yaXNhdGlvbi01Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXR1cy1vZi1hdXRob3Jpc2F0aW9uLTUiPiM8L2E+IFN0YXR1cyBvZiBhdXRob3Jpc2F0aW9uOjwvaDM+CjxoMyBpZD0icHJvdG9jb2wtYW5kLXRyZWF0bWVudC1hcHByb2FjaC01Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Byb3RvY29sLWFuZC10cmVhdG1lbnQtYXBwcm9hY2gtNSI+IzwvYT4gUHJvdG9jb2wgYW5kIHRyZWF0bWVudCBhcHByb2FjaDo8L2gzPgo8aDMgaWQ9InR5cGljYWwtZHVyYXRpb24tb2YtdHJlYXRtZW50LTUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdHlwaWNhbC1kdXJhdGlvbi1vZi10cmVhdG1lbnQtNSI+IzwvYT4gVHlwaWNhbCBkdXJhdGlvbiBvZiB0cmVhdG1lbnQ6PC9oMz4KPGgzIGlkPSJvdXRjb21lLTUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjb3V0Y29tZS01Ij4jPC9hPiBPdXRjb21lOjwvaDM+CjxoMyBpZD0ic2lnbmlmaWNhbnQtc2lkZS1lZmZlY3RzLTUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc2lnbmlmaWNhbnQtc2lkZS1lZmZlY3RzLTUiPiM8L2E+IFNpZ25pZmljYW50IHNpZGUgZWZmZWN0czo8L2gzPgo8aDMgaWQ9InJlY29tbWVuZGVkLXF1YW50aXR5LWZvci1zdG9ja2luZy01Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3JlY29tbWVuZGVkLXF1YW50aXR5LWZvci1zdG9ja2luZy01Ij4jPC9hPiBSZWNvbW1lbmRlZCBxdWFudGl0eSBmb3Igc3RvY2tpbmc6PC9oMz4KPGgzIGlkPSJwcmljZS01Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3ByaWNlLTUiPiM8L2E+IFByaWNlOjwvaDM+CjxoMyBpZD0ic3VnZ2VzdGVkLXN1cHBsaWVycy01Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N1Z2dlc3RlZC1zdXBwbGllcnMtNSI+IzwvYT4gU3VnZ2VzdGVkIHN1cHBsaWVyczo8L2gzPgo8aDMgaWQ9ImZ1cnRoZXItcmVmZXJlbmNlcy01Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Z1cnRoZXItcmVmZXJlbmNlcy01Ij4jPC9hPiBGdXJ0aGVyIHJlZmVyZW5jZXM6PC9oMz4KPHA+WzkzXQpbOTRdCls5NV06Cls5Nl06Cls5N106Cls5OF06Cls5OV06ClsxMDBdOjwvcD4KPHA+W106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOgpbXToKW106CltdOjwvcD4KPHA+Wzk0XQpbOTVdOgpbOTZdOgpbOTddOgpbOThdOgpbOTldOgpbMTAwXTo8L3A+CjxwPjxhIGhyZWY9IiU1QiU1RDoiPjI3MDwvYT46PC9wPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}